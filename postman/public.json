{
  "item": [
    {
      "id": "98b58050-4121-4e2b-abd4-6e8e101e749a",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2f60c0f1-cad7-4918-903b-bf70f04443f7",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8501c8cb-1735-4a23-9619-3cc9547f279e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sunt ea veniam tempor",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7e043231-2972-4522-b9d3-48986ba81828",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sunt ea veniam tempor",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "107aa4c9-aee7-4194-9cdb-c935543a8c5a",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sunt ea veniam tempor",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a442d3c7-937b-4517-94a6-6b9f6cc167af",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a70cc0af-14b1-496a-b16a-d55d0348cd80",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "86d8904f-16bf-4e96-be93-39b8a3bd962b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1c3cced5-a1c8-4252-9616-988ea800cba9",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "38dd0dff-ca1e-4a78-a47d-d0fd34ac4c0b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-07-01T02:29:50.237Z\",\n  \"status\": 88888023,\n  \"error\": \"deserunt consectetur\",\n  \"exception\": \"exercitation eiusmod\",\n  \"message\": \"qui Excepteur\",\n  \"total_time_taken_in_millis\": 5132855,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ut dolore sunt irure\",\n  \"page\": {\n    \"type\": \"nulla\",\n    \"item_total\": 46638704,\n    \"next_id\": \"proident in\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -93263004,\n    \"size\": 17053222\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0daa1c64-6ede-4677-8f8a-f8a2f7fe936d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-07-01T02:29:50.237Z\",\n  \"status\": 88888023,\n  \"error\": \"deserunt consectetur\",\n  \"exception\": \"exercitation eiusmod\",\n  \"message\": \"qui Excepteur\",\n  \"total_time_taken_in_millis\": 5132855,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ut dolore sunt irure\",\n  \"page\": {\n    \"type\": \"nulla\",\n    \"item_total\": 46638704,\n    \"next_id\": \"proident in\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -93263004,\n    \"size\": 17053222\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a6387d14-0cf0-4a37-808c-ea41a5c3ce9d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-07-01T02:29:50.237Z\",\n  \"status\": 88888023,\n  \"error\": \"deserunt consectetur\",\n  \"exception\": \"exercitation eiusmod\",\n  \"message\": \"qui Excepteur\",\n  \"total_time_taken_in_millis\": 5132855,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"ut dolore sunt irure\",\n  \"page\": {\n    \"type\": \"nulla\",\n    \"item_total\": 46638704,\n    \"next_id\": \"proident in\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -93263004,\n    \"size\": 17053222\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d5605211-e516-4f1f-a006-0253c77e9627",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "94339be7-bc74-4d99-af65-567d367afae3",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-15T23:35:44.878Z\",\n  \"status\": -74912561,\n  \"error\": \"velit\",\n  \"exception\": \"exercitation do labore\",\n  \"message\": \"ut fugiat dolor anim\",\n  \"total_time_taken_in_millis\": 16040730,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"nostru\",\n  \"page\": {\n    \"type\": \"ut laborum cupidatat\",\n    \"item_total\": -22161068,\n    \"next_id\": \"eu sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 93870502,\n    \"size\": -74573378\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bc6df660-290b-4ba1-9b8b-1d4cfa6a57e1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-15T23:35:44.878Z\",\n  \"status\": -74912561,\n  \"error\": \"velit\",\n  \"exception\": \"exercitation do labore\",\n  \"message\": \"ut fugiat dolor anim\",\n  \"total_time_taken_in_millis\": 16040730,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"nostru\",\n  \"page\": {\n    \"type\": \"ut laborum cupidatat\",\n    \"item_total\": -22161068,\n    \"next_id\": \"eu sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 93870502,\n    \"size\": -74573378\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "90e7f64f-8178-4f02-be5c-804e77e1c754",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-15T23:35:44.878Z\",\n  \"status\": -74912561,\n  \"error\": \"velit\",\n  \"exception\": \"exercitation do labore\",\n  \"message\": \"ut fugiat dolor anim\",\n  \"total_time_taken_in_millis\": 16040730,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"nostru\",\n  \"page\": {\n    \"type\": \"ut laborum cupidatat\",\n    \"item_total\": -22161068,\n    \"next_id\": \"eu sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 93870502,\n    \"size\": -74573378\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9075755b-4c73-4881-b300-42626202c214",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-15T23:35:44.878Z\",\n  \"status\": -74912561,\n  \"error\": \"velit\",\n  \"exception\": \"exercitation do labore\",\n  \"message\": \"ut fugiat dolor anim\",\n  \"total_time_taken_in_millis\": 16040730,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"nostru\",\n  \"page\": {\n    \"type\": \"ut laborum cupidatat\",\n    \"item_total\": -22161068,\n    \"next_id\": \"eu sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 93870502,\n    \"size\": -74573378\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cf248589-6c1a-4f7a-bad4-399246178520",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-10-15T23:35:44.878Z\",\n  \"status\": -74912561,\n  \"error\": \"velit\",\n  \"exception\": \"exercitation do labore\",\n  \"message\": \"ut fugiat dolor anim\",\n  \"total_time_taken_in_millis\": 16040730,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"nostru\",\n  \"page\": {\n    \"type\": \"ut laborum cupidatat\",\n    \"item_total\": -22161068,\n    \"next_id\": \"eu sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 93870502,\n    \"size\": -74573378\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bb16cf3e-e6ae-456e-82ee-1f510c400345",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "52e1237e-1a4d-4705-b461-8422c2846543",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1991-09-24T14:47:45.204Z\",\n  \"status\": -1944525,\n  \"error\": \"veniam ut\",\n  \"exception\": \"ullamco exercitation\",\n  \"message\": \"cupidatat veniam\",\n  \"total_time_taken_in_millis\": 99946928,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"tempor\",\n      \"description\": \"aliquip reprehenderit magna offi\",\n      \"name\": \"dolore pariatur et\",\n      \"slug\": \"Ut consectetur\",\n      \"meta\": [\n        {\n          \"_id\": \"consectetur\",\n          \"name\": \"ut ullamco pariatur\",\n          \"value\": \"veniam\"\n        },\n        {\n          \"_id\": \"deserunt proident elit irure\",\n          \"name\": \"incididunt eu tempor consectetur\",\n          \"value\": \"sint\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"irure ut exercitation sit\",\n        \"integration\": \"reprehenderit dolor velit\",\n        \"level\": \"amet esse et adipisicing\",\n        \"uid\": 93728962,\n        \"opted\": false,\n        \"permissions\": [\n          \"dolor\",\n          \"ad ut in\"\n        ],\n        \"token\": \"esse Ut laboris\",\n        \"name\": \"qui ut Duis ut esse\",\n        \"stores\": [\n          {\n            \"_id\": \"velit labore nostrud\",\n            \"integration\": \"minim eu\",\n            \"level\": \"in dolor et en\",\n            \"uid\": 98646978,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur\",\n            \"code\": \"al\",\n            \"name\": \"deserunt sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"anim sed\",\n            \"integration\": \"dolor ea ut Duis in\",\n            \"level\": \"reprehenderit nulla labore Lor\",\n            \"uid\": -59619263,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad commodo velit\",\n            \"code\": \"aliquip in velit consectetur\",\n            \"name\": \"ea nulla dolore dolor pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"commodo Duis Lorem sunt\",\n        \"integration\": \"dolor esse veniam\",\n        \"level\": \"cillum deserunt ullamco magna nostrud\",\n        \"uid\": -34135833,\n        \"opted\": true,\n        \"permissions\": [\n          \"Ut eiusmod reprehenderit\",\n          \"ipsum ad\"\n        ],\n        \"token\": \"in cupidatat aliqua minim laborum\",\n        \"name\": \"irure nostrud Duis dolor reprehenderit\",\n        \"stores\": [\n          {\n            \"_id\": \"eiusmod ut\",\n            \"integration\": \"elit consectetur dolore\",\n            \"level\": \"est\",\n            \"uid\": -35044278,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id laborum d\",\n            \"code\": \"enim laboris\",\n            \"name\": \"ullamco exercitation\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut labore\",\n            \"integration\": \"sint consequat occaecat deserunt cillum\",\n            \"level\": \"et fugiat\",\n            \"uid\": -98216811,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum eu incididunt deserunt commodo\",\n            \"code\": \"qui\",\n            \"name\": \"quis nisi qui commodo ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Lorem ullamco et aliqua ad\",\n      \"description\": \"reprehenderit dolore sed\",\n      \"name\": \"dolore occaecat sint qui est\",\n      \"slug\": \"Ut tempor\",\n      \"meta\": [\n        {\n          \"_id\": \"ex consectetur tempor\",\n          \"name\": \"cillum\",\n          \"value\": \"id consectetur\"\n        },\n        {\n          \"_id\": \"reprehenderit in dolor\",\n          \"name\": \"amet eiusmod Lorem in\",\n          \"value\": \"ut aliquip in pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"esse sint a\",\n        \"integration\": \"deserunt culpa ut\",\n        \"level\": \"nisi ad\",\n        \"uid\": 40396519,\n        \"opted\": true,\n        \"permissions\": [\n          \"voluptate ut\",\n          \"quis nulla ipsum Lorem\"\n        ],\n        \"token\": \"consectetur\",\n        \"name\": \"Duis culpa laborum pariatur\",\n        \"stores\": [\n          {\n            \"_id\": \"laboris eiusmod in dolor\",\n            \"integration\": \"nisi\",\n            \"level\": \"ut\",\n            \"uid\": 94566003,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation aute\",\n            \"code\": \"nostrud nisi velit\",\n            \"name\": \"cupidatat magna\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut elit amet Ut\",\n            \"integration\": \"cupidatat pariatur Lorem veniam\",\n            \"level\": \"sit dolore\",\n            \"uid\": -22920047,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lorem elit ullamco ipsum\",\n            \"code\": \"consectetur ut minim\",\n            \"name\": \"adipisicing laboris\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"commodo dolor\",\n        \"integration\": \"tempor exercitation\",\n        \"level\": \"nulla proident in\",\n        \"uid\": -61189585,\n        \"opted\": false,\n        \"permissions\": [\n          \"velit amet tempor\",\n          \"quis cupidatat\"\n        ],\n        \"token\": \"proident Excepteur dolore anim\",\n        \"name\": \"sunt minim\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum veniam non Duis\",\n            \"integration\": \"incididunt\",\n            \"level\": \"et ipsum id\",\n            \"uid\": -36670510,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"consectetur deserunt\",\n            \"name\": \"irure culpa sed\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"enim do id reprehenderit\",\n            \"integration\": \"ipsum reprehenderit commodo\",\n            \"level\": \"quis pariatur\",\n            \"uid\": -74626067,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat ullamco\",\n            \"code\": \"ir\",\n            \"name\": \"in dolor pariatur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"et Duis\",\n  \"page\": {\n    \"type\": \"occaecat mollit consequat ut\",\n    \"item_total\": -55112460,\n    \"next_id\": \"laborum amet do proident\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -69074682,\n    \"size\": -14879309\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1510e7a7-d486-4810-8ca4-7bce0acda85f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1953-09-13T20:34:19.761Z\",\n  \"status\": -83871872,\n  \"error\": \"ali\",\n  \"exception\": \"cillum amet\",\n  \"message\": \"labore eu quis\",\n  \"total_time_taken_in_millis\": -73433623,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"id velit elit dolore\",\n      \"description\": \"amet\",\n      \"name\": \"aliquip sit laborum aute\",\n      \"slug\": \"veniam cupidatat\",\n      \"meta\": [\n        {\n          \"_id\": \"elit culpa irure do\",\n          \"name\": \"dolore dolore proident\",\n          \"value\": \"exercitation\"\n        },\n        {\n          \"_id\": \"ex esse\",\n          \"name\": \"Excepteur\",\n          \"value\": \"sit fugiat ea\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Lor\",\n        \"integration\": \"est\",\n        \"level\": \"proident ex\",\n        \"uid\": -91972275,\n        \"opted\": true,\n        \"permissions\": [\n          \"minim esse\",\n          \"officia pariatur do\"\n        ],\n        \"token\": \"minim\",\n        \"name\": \"commodo dolore minim dolor in\",\n        \"stores\": [\n          {\n            \"_id\": \"labore dolore\",\n            \"integration\": \"non sed\",\n            \"level\": \"dolore in nostrud\",\n            \"uid\": -50298022,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit irure\",\n            \"code\": \"esse est officia\",\n            \"name\": \"consectetur nostrud elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"commodo dolor enim veniam\",\n            \"integration\": \"ad cillum voluptate\",\n            \"level\": \"dolor \",\n            \"uid\": -91800079,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"Lorem ut do nostrud\",\n            \"name\": \"nisi Excepteur tempor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"id reprehende\",\n        \"integration\": \"in esse\",\n        \"level\": \"do Duis\",\n        \"uid\": -70166802,\n        \"opted\": true,\n        \"permissions\": [\n          \"Ut sed exercit\",\n          \"adipisicing irure ali\"\n        ],\n        \"token\": \"deserunt nisi mollit\",\n        \"name\": \"dolore ea\",\n        \"stores\": [\n          {\n            \"_id\": \"anim consectetur\",\n            \"integration\": \"adipisicing velit ut\",\n            \"level\": \"occaecat offici\",\n            \"uid\": -48792787,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint pariatur\",\n            \"code\": \"nisi commodo elit\",\n            \"name\": \"adipisicing aliqua do ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sit fugiat sunt do\",\n            \"integration\": \"sint pariatur laboris deserunt\",\n            \"level\": \"ut dolor\",\n            \"uid\": -46952861,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cillum eiusmod cupidatat amet\",\n            \"code\": \"ut Excepteur pariatur\",\n            \"name\": \"labore incididunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ex Lorem\",\n      \"description\": \"et ea ullamco dolor\",\n      \"name\": \"enim cupidatat aute irure\",\n      \"slug\": \"Lorem Excepteur fugiat\",\n      \"meta\": [\n        {\n          \"_id\": \"sit id cillum mollit commodo\",\n          \"name\": \"id deserunt cillum\",\n          \"value\": \"amet aute Excepteur in\"\n        },\n        {\n          \"_id\": \"cillum dolore mollit sint\",\n          \"name\": \"dolore sit esse\",\n          \"value\": \"do aute\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"est ad anim\",\n        \"integration\": \"dolore esse ipsum do\",\n        \"level\": \"esse\",\n        \"uid\": -42000871,\n        \"opted\": true,\n        \"permissions\": [\n          \"culpa\",\n          \"amet\"\n        ],\n        \"token\": \"veniam aliqua ea\",\n        \"name\": \"id in Lorem\",\n        \"stores\": [\n          {\n            \"_id\": \"sed voluptate in\",\n            \"integration\": \"in\",\n            \"level\": \"ipsum amet\",\n            \"uid\": 44462980,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut enim commo\",\n            \"code\": \"esse\",\n            \"name\": \"Duis dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"do dolore veniam\",\n            \"integration\": \"officia Duis\",\n            \"level\": \"magna\",\n            \"uid\": -58620952,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor elit consequat\",\n            \"code\": \"ut Lorem officia non culpa\",\n            \"name\": \"laboris ullamco qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Lorem fugiat Ut\",\n        \"integration\": \"nisi voluptate\",\n        \"level\": \"sed anim dolore\",\n        \"uid\": -81373431,\n        \"opted\": true,\n        \"permissions\": [\n          \"cillum nulla velit\",\n          \"anim laboris \"\n        ],\n        \"token\": \"reprehenderit esse\",\n        \"name\": \"Duis non exercitation in\",\n        \"stores\": [\n          {\n            \"_id\": \"quis dolor veniam irure\",\n            \"integration\": \"qui\",\n            \"level\": \"mollit velit sint ad\",\n            \"uid\": 5483197,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"c\",\n            \"code\": \"fugiat Ut aliqua\",\n            \"name\": \"eu magna proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"et ullamco elit\",\n            \"integration\": \"nisi irure occaecat ullamco ex\",\n            \"level\": \"eu dolore pariatur amet adipisicing\",\n            \"uid\": -15291954,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation elit dolore\",\n            \"code\": \"consequat amet\",\n            \"name\": \"consectetur occaecat pariatur nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"amet magna\",\n  \"page\": {\n    \"type\": \"dolor et sit\",\n    \"item_total\": 54376809,\n    \"next_id\": \"ipsum fugiat proident\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -31890409,\n    \"size\": 51570627\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e8b5bbb5-7002-49d5-b4ec-dc6ae012e8f9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1953-09-13T20:34:19.761Z\",\n  \"status\": -83871872,\n  \"error\": \"ali\",\n  \"exception\": \"cillum amet\",\n  \"message\": \"labore eu quis\",\n  \"total_time_taken_in_millis\": -73433623,\n  \"http_status\": \"408 REQUEST_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"id velit elit dolore\",\n      \"description\": \"amet\",\n      \"name\": \"aliquip sit laborum aute\",\n      \"slug\": \"veniam cupidatat\",\n      \"meta\": [\n        {\n          \"_id\": \"elit culpa irure do\",\n          \"name\": \"dolore dolore proident\",\n          \"value\": \"exercitation\"\n        },\n        {\n          \"_id\": \"ex esse\",\n          \"name\": \"Excepteur\",\n          \"value\": \"sit fugiat ea\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Lor\",\n        \"integration\": \"est\",\n        \"level\": \"proident ex\",\n        \"uid\": -91972275,\n        \"opted\": true,\n        \"permissions\": [\n          \"minim esse\",\n          \"officia pariatur do\"\n        ],\n        \"token\": \"minim\",\n        \"name\": \"commodo dolore minim dolor in\",\n        \"stores\": [\n          {\n            \"_id\": \"labore dolore\",\n            \"integration\": \"non sed\",\n            \"level\": \"dolore in nostrud\",\n            \"uid\": -50298022,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit irure\",\n            \"code\": \"esse est officia\",\n            \"name\": \"consectetur nostrud elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"commodo dolor enim veniam\",\n            \"integration\": \"ad cillum voluptate\",\n            \"level\": \"dolor \",\n            \"uid\": -91800079,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"Lorem ut do nostrud\",\n            \"name\": \"nisi Excepteur tempor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"id reprehende\",\n        \"integration\": \"in esse\",\n        \"level\": \"do Duis\",\n        \"uid\": -70166802,\n        \"opted\": true,\n        \"permissions\": [\n          \"Ut sed exercit\",\n          \"adipisicing irure ali\"\n        ],\n        \"token\": \"deserunt nisi mollit\",\n        \"name\": \"dolore ea\",\n        \"stores\": [\n          {\n            \"_id\": \"anim consectetur\",\n            \"integration\": \"adipisicing velit ut\",\n            \"level\": \"occaecat offici\",\n            \"uid\": -48792787,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sint pariatur\",\n            \"code\": \"nisi commodo elit\",\n            \"name\": \"adipisicing aliqua do ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sit fugiat sunt do\",\n            \"integration\": \"sint pariatur laboris deserunt\",\n            \"level\": \"ut dolor\",\n            \"uid\": -46952861,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cillum eiusmod cupidatat amet\",\n            \"code\": \"ut Excepteur pariatur\",\n            \"name\": \"labore incididunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ex Lorem\",\n      \"description\": \"et ea ullamco dolor\",\n      \"name\": \"enim cupidatat aute irure\",\n      \"slug\": \"Lorem Excepteur fugiat\",\n      \"meta\": [\n        {\n          \"_id\": \"sit id cillum mollit commodo\",\n          \"name\": \"id deserunt cillum\",\n          \"value\": \"amet aute Excepteur in\"\n        },\n        {\n          \"_id\": \"cillum dolore mollit sint\",\n          \"name\": \"dolore sit esse\",\n          \"value\": \"do aute\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"est ad anim\",\n        \"integration\": \"dolore esse ipsum do\",\n        \"level\": \"esse\",\n        \"uid\": -42000871,\n        \"opted\": true,\n        \"permissions\": [\n          \"culpa\",\n          \"amet\"\n        ],\n        \"token\": \"veniam aliqua ea\",\n        \"name\": \"id in Lorem\",\n        \"stores\": [\n          {\n            \"_id\": \"sed voluptate in\",\n            \"integration\": \"in\",\n            \"level\": \"ipsum amet\",\n            \"uid\": 44462980,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut enim commo\",\n            \"code\": \"esse\",\n            \"name\": \"Duis dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"do dolore veniam\",\n            \"integration\": \"officia Duis\",\n            \"level\": \"magna\",\n            \"uid\": -58620952,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolor elit consequat\",\n            \"code\": \"ut Lorem officia non culpa\",\n            \"name\": \"laboris ullamco qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Lorem fugiat Ut\",\n        \"integration\": \"nisi voluptate\",\n        \"level\": \"sed anim dolore\",\n        \"uid\": -81373431,\n        \"opted\": true,\n        \"permissions\": [\n          \"cillum nulla velit\",\n          \"anim laboris \"\n        ],\n        \"token\": \"reprehenderit esse\",\n        \"name\": \"Duis non exercitation in\",\n        \"stores\": [\n          {\n            \"_id\": \"quis dolor veniam irure\",\n            \"integration\": \"qui\",\n            \"level\": \"mollit velit sint ad\",\n            \"uid\": 5483197,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"c\",\n            \"code\": \"fugiat Ut aliqua\",\n            \"name\": \"eu magna proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"et ullamco elit\",\n            \"integration\": \"nisi irure occaecat ullamco ex\",\n            \"level\": \"eu dolore pariatur amet adipisicing\",\n            \"uid\": -15291954,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"exercitation elit dolore\",\n            \"code\": \"consequat amet\",\n            \"name\": \"consectetur occaecat pariatur nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"amet magna\",\n  \"page\": {\n    \"type\": \"dolor et sit\",\n    \"item_total\": 54376809,\n    \"next_id\": \"ipsum fugiat proident\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -31890409,\n    \"size\": 51570627\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "95a2dbd7-6bf7-4799-a20f-ddc86d35c7f2",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4a92230f-bd9e-4c07-bb83-06cdf5032e9f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-01-03T17:11:38.484Z\",\n  \"status\": 99704418,\n  \"error\": \"cillum\",\n  \"exception\": \"dolor\",\n  \"message\": \"culpa non mollit qui\",\n  \"total_time_taken_in_millis\": -9288067,\n  \"http_status\": \"400 BAD_REQUEST\",\n  \"items\": {\n    \"session_id\": \"exercitation cillum sunt magna ut\",\n    \"error_message\": \"sint elit sed\"\n  },\n  \"payload\": {\n    \"session_id\": \"aliqua do consequat\",\n    \"error_message\": \"esse consectetur enim\"\n  },\n  \"trace_id\": \"est ut\",\n  \"page\": {\n    \"type\": \"Ut voluptate\",\n    \"item_total\": -56192717,\n    \"next_id\": \"in aute do\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -96554819,\n    \"size\": 3329573\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "aaad491f-5e24-45a7-a962-fb126c956617",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-01-03T17:11:38.484Z\",\n  \"status\": 99704418,\n  \"error\": \"cillum\",\n  \"exception\": \"dolor\",\n  \"message\": \"culpa non mollit qui\",\n  \"total_time_taken_in_millis\": -9288067,\n  \"http_status\": \"400 BAD_REQUEST\",\n  \"items\": {\n    \"session_id\": \"exercitation cillum sunt magna ut\",\n    \"error_message\": \"sint elit sed\"\n  },\n  \"payload\": {\n    \"session_id\": \"aliqua do consequat\",\n    \"error_message\": \"esse consectetur enim\"\n  },\n  \"trace_id\": \"est ut\",\n  \"page\": {\n    \"type\": \"Ut voluptate\",\n    \"item_total\": -56192717,\n    \"next_id\": \"in aute do\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -96554819,\n    \"size\": 3329573\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b92c1465-f8ff-4b48-b6d8-4b2da2bce4d8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2006-01-03T17:11:38.484Z\",\n  \"status\": 99704418,\n  \"error\": \"cillum\",\n  \"exception\": \"dolor\",\n  \"message\": \"culpa non mollit qui\",\n  \"total_time_taken_in_millis\": -9288067,\n  \"http_status\": \"400 BAD_REQUEST\",\n  \"items\": {\n    \"session_id\": \"exercitation cillum sunt magna ut\",\n    \"error_message\": \"sint elit sed\"\n  },\n  \"payload\": {\n    \"session_id\": \"aliqua do consequat\",\n    \"error_message\": \"esse consectetur enim\"\n  },\n  \"trace_id\": \"est ut\",\n  \"page\": {\n    \"type\": \"Ut voluptate\",\n    \"item_total\": -56192717,\n    \"next_id\": \"in aute do\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -96554819,\n    \"size\": 3329573\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f1e9557f-c8e2-4e49-8836-20692f1ef4af",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "11492a61-8ec6-47ea-86be-43c6aae9c7ea",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-10-12T05:49:00.048Z\",\n  \"status\": -73827666,\n  \"error\": \"dolore est consectetur sunt\",\n  \"exception\": \"dolore qui\",\n  \"message\": \"commodo dolor\",\n  \"total_time_taken_in_millis\": -79761190,\n  \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n  \"items\": {\n    \"company_id\": -99851994,\n    \"integration_data\": {\n      \"et_2b8\": {},\n      \"eu0ac\": {},\n      \"ad8d\": {}\n    },\n    \"company_name\": \"proident aliqui\",\n    \"task_details\": {\n      \"type\": 84419580,\n      \"group_list\": [\n        {\n          \"text\": \"exercitation do\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident dolor non\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -54666634.50585272,\n      \"safe_stock\": 10760522,\n      \"period_threshold\": 85643181,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"amet dolor dolore in Excepteur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Ut veniam est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"consequat pariatur amet\",\n    \"alias\": \"ea mollit est eu\"\n  },\n  \"payload\": {\n    \"company_id\": -78020860,\n    \"integration_data\": {\n      \"minim_1c1\": {},\n      \"sunt2\": {},\n      \"molliteb\": {},\n      \"tempor_5f4\": {}\n    },\n    \"company_name\": \"commod\",\n    \"task_details\": {\n      \"type\": -87272998,\n      \"group_list\": [\n        {\n          \"text\": \"in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolore sint id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 26206228.582716703,\n      \"safe_stock\": -66325037,\n      \"period_threshold\": -44501626,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cillum aute\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"veniam dolor in Duis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cillum sint qui\",\n    \"alias\": \"in\"\n  },\n  \"trace_id\": \"non in proident\",\n  \"page\": {\n    \"type\": \"nulla occaecat\",\n    \"item_total\": 52793746,\n    \"next_id\": \"ipsum dolore\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -28818084,\n    \"size\": -72658624\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2228f08c-6180-44b3-a79c-a789d13e72db",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-12-29T11:41:07.163Z\",\n  \"status\": -38746887,\n  \"error\": \"in cillum culpa amet\",\n  \"exception\": \"ut laboris\",\n  \"message\": \"et\",\n  \"total_time_taken_in_millis\": 42406766,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": -9862363,\n    \"integration_data\": {\n      \"incididunt_f4\": {},\n      \"Duisd0\": {},\n      \"deserunt_0e\": {},\n      \"ea879\": {}\n    },\n    \"company_name\": \"est\",\n    \"task_details\": {\n      \"type\": 73323408,\n      \"group_list\": [\n        {\n          \"text\": \"pariatur in amet officia velit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 26313722.58877164,\n      \"safe_stock\": 55774903,\n      \"period_threshold\": 73348141,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cupidatat in minim qui labore\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum ipsum nisi sint ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"do irure consequat commodo\",\n    \"alias\": \"adipisicing in ea nisi\"\n  },\n  \"payload\": {\n    \"company_id\": -53970806,\n    \"integration_data\": {\n      \"deserunt_5\": {},\n      \"quise\": {},\n      \"dolore760\": {},\n      \"incididunt9\": {}\n    },\n    \"company_name\": \"dolor culpa minim irure\",\n    \"task_details\": {\n      \"type\": 29278852,\n      \"group_list\": [\n        {\n          \"text\": \"exercitation culpa\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute consequat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -44652101.02768227,\n      \"safe_stock\": 80366657,\n      \"period_threshold\": 97088449,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ir\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"id dolor est fugi\",\n    \"alias\": \"Ut aute non\"\n  },\n  \"trace_id\": \"Excepteur culpa aliquip\",\n  \"page\": {\n    \"type\": \"exercitation labore\",\n    \"item_total\": 91144795,\n    \"next_id\": \"dolore ex officia\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -65935238,\n    \"size\": -51040533\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "053f6f70-f403-4f6a-a31c-91df61af6f3e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1964-12-29T11:41:07.163Z\",\n  \"status\": -38746887,\n  \"error\": \"in cillum culpa amet\",\n  \"exception\": \"ut laboris\",\n  \"message\": \"et\",\n  \"total_time_taken_in_millis\": 42406766,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": {\n    \"company_id\": -9862363,\n    \"integration_data\": {\n      \"incididunt_f4\": {},\n      \"Duisd0\": {},\n      \"deserunt_0e\": {},\n      \"ea879\": {}\n    },\n    \"company_name\": \"est\",\n    \"task_details\": {\n      \"type\": 73323408,\n      \"group_list\": [\n        {\n          \"text\": \"pariatur in amet officia velit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 26313722.58877164,\n      \"safe_stock\": 55774903,\n      \"period_threshold\": 73348141,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cupidatat in minim qui labore\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laborum ipsum nisi sint ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"do irure consequat commodo\",\n    \"alias\": \"adipisicing in ea nisi\"\n  },\n  \"payload\": {\n    \"company_id\": -53970806,\n    \"integration_data\": {\n      \"deserunt_5\": {},\n      \"quise\": {},\n      \"dolore760\": {},\n      \"incididunt9\": {}\n    },\n    \"company_name\": \"dolor culpa minim irure\",\n    \"task_details\": {\n      \"type\": 29278852,\n      \"group_list\": [\n        {\n          \"text\": \"exercitation culpa\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute consequat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -44652101.02768227,\n      \"safe_stock\": 80366657,\n      \"period_threshold\": 97088449,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ir\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"id dolor est fugi\",\n    \"alias\": \"Ut aute non\"\n  },\n  \"trace_id\": \"Excepteur culpa aliquip\",\n  \"page\": {\n    \"type\": \"exercitation labore\",\n    \"item_total\": 91144795,\n    \"next_id\": \"dolore ex officia\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -65935238,\n    \"size\": -51040533\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "221c7c72-0aab-4bc8-9d18-9d3792a03d01",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "845e5041-618d-486f-8973-c5c06989ab74",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-06-08T01:46:38.886Z\",\n  \"status\": -16252074,\n  \"error\": \"proident ulla\",\n  \"exception\": \"velit ad\",\n  \"message\": \"dolor deserunt\",\n  \"total_time_taken_in_millis\": 83477661,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": [\n    {\n      \"company_id\": 94880367,\n      \"integration_data\": {\n        \"nisif\": {}\n      },\n      \"company_name\": \"nisi dolore\",\n      \"task_details\": {\n        \"type\": 83971471,\n        \"group_list\": [\n          {\n            \"text\": \"laboris eiusmod elit exercitation sunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"irure id\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 86996569.47817048,\n        \"safe_stock\": 65908313,\n        \"period_threshold\": -52701790,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt in minim velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea anim culpa proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui ex amet ea\",\n      \"alias\": \"veniam nulla amet\"\n    },\n    {\n      \"company_id\": -77338631,\n      \"integration_data\": {\n        \"mollit063\": {},\n        \"non_d7\": {}\n      },\n      \"company_name\": \"nisi dolor dolor\",\n      \"task_details\": {\n        \"type\": 67527733,\n        \"group_list\": [\n          {\n            \"text\": \"minim Ut eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"id ut ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 72689266.33550689,\n        \"safe_stock\": -60212273,\n        \"period_threshold\": -16066996,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing in Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim enim nos\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ex Excepteur mollit do\",\n      \"alias\": \"pariatur quis esse dolor in\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -68282099,\n      \"integration_data\": {\n        \"eiusmod_c9\": {},\n        \"dolord12\": {},\n        \"occaecat_723\": {}\n      },\n      \"company_name\": \"ut dolor commodo exercitation\",\n      \"task_details\": {\n        \"type\": -30959747,\n        \"group_list\": [\n          {\n            \"text\": \"ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"labore Lorem Duis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 98471047.76386702,\n        \"safe_stock\": 21306091,\n        \"period_threshold\": -95571320,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"incididunt Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cillum veniam in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"laborum minim deserunt\",\n      \"alias\": \"ipsum n\"\n    },\n    {\n      \"company_id\": -39009310,\n      \"integration_data\": {\n        \"exercitation92b\": {},\n        \"in_c3_\": {}\n      },\n      \"company_name\": \"commodo est\",\n      \"task_details\": {\n        \"type\": 98162692,\n        \"group_list\": [\n          {\n            \"text\": \"commodo ea nisi magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt nostrud aute reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -18845788.90456839,\n        \"safe_stock\": 35861284,\n        \"period_threshold\": -67358460,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo incididunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut\",\n      \"alias\": \"do nisi Duis\"\n    }\n  ],\n  \"trace_id\": \"culpa eiusmod aliquip\",\n  \"page\": {\n    \"type\": \"in ad sunt anim sed\",\n    \"item_total\": -5601732,\n    \"next_id\": \"sit occaecat nostrud\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 12076675,\n    \"size\": 6998739\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2bdc9f05-cff3-4bae-b9aa-51180376d445",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-06-09T23:56:30.535Z\",\n  \"status\": 44799538,\n  \"error\": \"ad\",\n  \"exception\": \"sed dolore non aliquip reprehen\",\n  \"message\": \"qui\",\n  \"total_time_taken_in_millis\": 22787949,\n  \"http_status\": \"308 PERMANENT_REDIRECT\",\n  \"items\": [\n    {\n      \"company_id\": -82309456,\n      \"integration_data\": {\n        \"et_ca_\": {}\n      },\n      \"company_name\": \"commodo anim\",\n      \"task_details\": {\n        \"type\": 99102903,\n        \"group_list\": [\n          {\n            \"text\": \"in adipisicing sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit aliqui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -83034520.65985559,\n        \"safe_stock\": 32127175,\n        \"period_threshold\": -81638391,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eu velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nisi consequat fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse ipsum eiusmod ut eu\",\n      \"alias\": \"ea deserunt dolore elit\"\n    },\n    {\n      \"company_id\": 19323302,\n      \"integration_data\": {\n        \"pariatur_58f\": {}\n      },\n      \"company_name\": \"cupidatat non\",\n      \"task_details\": {\n        \"type\": -25574758,\n        \"group_list\": [\n          {\n            \"text\": \"nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt deserunt labore exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 10582904.641493008,\n        \"safe_stock\": -92839472,\n        \"period_threshold\": 53068648,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint cupidatat exercitation tempor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor laborum ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"laboris\",\n      \"alias\": \"ipsum eu nisi Excepteur ut\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -30422880,\n      \"integration_data\": {\n        \"cillum_b\": {},\n        \"ullamco5e\": {}\n      },\n      \"company_name\": \"labore cupidatat\",\n      \"task_details\": {\n        \"type\": 47716860,\n        \"group_list\": [\n          {\n            \"text\": \"adipisicing\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 65353665.76909375,\n        \"safe_stock\": 12633099,\n        \"period_threshold\": -62560901,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi tempor esse ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud ut est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nisi sunt dolor ullamco\",\n      \"alias\": \"dolore tempor\"\n    },\n    {\n      \"company_id\": 44635173,\n      \"integration_data\": {\n        \"in_bde\": {},\n        \"sunt__\": {},\n        \"qui_05\": {}\n      },\n      \"company_name\": \"consectetur Ut\",\n      \"task_details\": {\n        \"type\": 44001577,\n        \"group_list\": [\n          {\n            \"text\": \"in ut do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum Ut deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 39840772.5432874,\n        \"safe_stock\": 46317644,\n        \"period_threshold\": 27463909,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"labore do in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut adipisicing fugiat cil\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum labore\",\n      \"alias\": \"laborum dolor sed\"\n    }\n  ],\n  \"trace_id\": \"sint incididunt Duis labo\",\n  \"page\": {\n    \"type\": \"aliqua veniam esse sunt\",\n    \"item_total\": 4486389,\n    \"next_id\": \"est in\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 67601058,\n    \"size\": 7998388\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6aaefb55-2867-4e6b-bac8-7873c4d9ee13",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-06-09T23:56:30.535Z\",\n  \"status\": 44799538,\n  \"error\": \"ad\",\n  \"exception\": \"sed dolore non aliquip reprehen\",\n  \"message\": \"qui\",\n  \"total_time_taken_in_millis\": 22787949,\n  \"http_status\": \"308 PERMANENT_REDIRECT\",\n  \"items\": [\n    {\n      \"company_id\": -82309456,\n      \"integration_data\": {\n        \"et_ca_\": {}\n      },\n      \"company_name\": \"commodo anim\",\n      \"task_details\": {\n        \"type\": 99102903,\n        \"group_list\": [\n          {\n            \"text\": \"in adipisicing sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit aliqui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -83034520.65985559,\n        \"safe_stock\": 32127175,\n        \"period_threshold\": -81638391,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"eu velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nisi consequat fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse ipsum eiusmod ut eu\",\n      \"alias\": \"ea deserunt dolore elit\"\n    },\n    {\n      \"company_id\": 19323302,\n      \"integration_data\": {\n        \"pariatur_58f\": {}\n      },\n      \"company_name\": \"cupidatat non\",\n      \"task_details\": {\n        \"type\": -25574758,\n        \"group_list\": [\n          {\n            \"text\": \"nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt deserunt labore exercitation\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 10582904.641493008,\n        \"safe_stock\": -92839472,\n        \"period_threshold\": 53068648,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sint cupidatat exercitation tempor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor laborum ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"laboris\",\n      \"alias\": \"ipsum eu nisi Excepteur ut\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -30422880,\n      \"integration_data\": {\n        \"cillum_b\": {},\n        \"ullamco5e\": {}\n      },\n      \"company_name\": \"labore cupidatat\",\n      \"task_details\": {\n        \"type\": 47716860,\n        \"group_list\": [\n          {\n            \"text\": \"adipisicing\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 65353665.76909375,\n        \"safe_stock\": 12633099,\n        \"period_threshold\": -62560901,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi tempor esse ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostrud ut est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nisi sunt dolor ullamco\",\n      \"alias\": \"dolore tempor\"\n    },\n    {\n      \"company_id\": 44635173,\n      \"integration_data\": {\n        \"in_bde\": {},\n        \"sunt__\": {},\n        \"qui_05\": {}\n      },\n      \"company_name\": \"consectetur Ut\",\n      \"task_details\": {\n        \"type\": 44001577,\n        \"group_list\": [\n          {\n            \"text\": \"in ut do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum Ut deserunt\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 39840772.5432874,\n        \"safe_stock\": 46317644,\n        \"period_threshold\": 27463909,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"labore do in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut adipisicing fugiat cil\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum labore\",\n      \"alias\": \"laborum dolor sed\"\n    }\n  ],\n  \"trace_id\": \"sint incididunt Duis labo\",\n  \"page\": {\n    \"type\": \"aliqua veniam esse sunt\",\n    \"item_total\": 4486389,\n    \"next_id\": \"est in\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 67601058,\n    \"size\": 7998388\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "81611504-6169-483f-822f-972bf64e6368",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "406bb3cc-8b8b-4f47-b9ea-7cb9a98ac793",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "41bf86be-bc4d-4d1c-a5fc-ddb77a6a425a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": -53875325,\n      \"event_name\": \"in cupidatat\",\n      \"event_type\": \"ex qui Ut dolor\",\n      \"event_category\": \"consequat in Excepteur anim aliquip\",\n      \"version\": \"consequat deserunt\",\n      \"display_name\": \"enim ips\",\n      \"description\": \"sint Duis\",\n      \"created_on\": \"et\"\n    },\n    {\n      \"id\": -44964650,\n      \"event_name\": \"ipsum exercitation anim\",\n      \"event_type\": \"Ut exer\",\n      \"event_category\": \"ullamco in qui dolor\",\n      \"version\": \"veniam amet cupidatat in \",\n      \"display_name\": \"exercitation ad\",\n      \"description\": \"non ullamco\",\n      \"created_on\": \"sed id officia qui\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2f6762c7-8cab-4682-acf4-9689a6938288",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "193c91f0-cf7e-448e-8fcd-db68780e9e87",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 2283490,\n      \"event_name\": \"laboris ipsum in \",\n      \"event_type\": \"Excepteur a\",\n      \"event_category\": \"do eu non\",\n      \"version\": \"ex aliquip\",\n      \"display_name\": \"sed ea velit veniam\",\n      \"description\": \"cillum irure deserunt ut\",\n      \"created_on\": \"exercitation dolor aliqua mollit nulla\"\n    },\n    {\n      \"id\": -32701896,\n      \"event_name\": \"sunt veniam aliquip\",\n      \"event_type\": \"cupidatat voluptate consectetur adipisicing\",\n      \"event_category\": \"labore id\",\n      \"version\": \"Ut magna proident\",\n      \"display_name\": \"pariatur eiusmod d\",\n      \"description\": \"velit sunt\",\n      \"created_on\": \"laboris exercitation ullamco Duis est\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "59555381-0a6c-426c-a870-c668a6c72835",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
