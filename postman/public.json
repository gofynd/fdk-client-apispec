{
  "item": [
    {
      "id": "22a53dc6-e02a-4e11-9048-573379d84f13",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "615f5e3b-8d5a-40bc-ba98-5911bc4c8710",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "201fef74-6567-48d9-8dd8-96d7c7190cd6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Ut",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "291f5372-e8c6-4040-a0b0-4e9f2683e42e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Ut",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "027ea176-d711-4d51-94e9-3f34514f84bb",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Ut",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "587c1295-a223-4332-b7bb-4086859d7eba",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "66d91365-a6dc-4999-b0e8-f94238af930e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c7fe841e-d6e0-4300-937b-86a42620f9ac",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "47170af9-418c-4fea-83c5-4812e3e9899a",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a947bd49-6e07-404c-a598-455d6dbff0bc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -91705698,\n   \"event_name\": \"officia minim do\",\n   \"event_type\": \"ullamco\",\n   \"event_category\": \"esse Excepteur minim\",\n   \"version\": \"aliquip nulla\",\n   \"display_name\": \"in velit\",\n   \"description\": \"in mag\",\n   \"created_on\": \"su\"\n  },\n  {\n   \"id\": -88776731,\n   \"event_name\": \"ea nisi\",\n   \"event_type\": \"officia consequat\",\n   \"event_category\": \"sit cillum ea id incididunt\",\n   \"version\": \"velit labore\",\n   \"display_name\": \"exercitation nisi veniam\",\n   \"description\": \"exercitation eiusmod esse\",\n   \"created_on\": \"mollit cillum ad\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "da2c605d-b7a9-4f6d-b84e-c087fc86b86c",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "68b15224-dbe3-4c01-ab40-b74f0a06794b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -21288488,\n   \"event_name\": \"ea sit \",\n   \"event_type\": \"Lorem tempor ullamco mollit\",\n   \"event_category\": \"consequat\",\n   \"version\": \"non anim sed ut\",\n   \"display_name\": \"labore ut dolor\",\n   \"description\": \"culpa\",\n   \"created_on\": \"ea irure aute\"\n  },\n  {\n   \"id\": -68558091,\n   \"event_name\": \"in commodo in proident nulla\",\n   \"event_type\": \"nulla esse\",\n   \"event_category\": \"dolor commodo nul\",\n   \"version\": \"in elit\",\n   \"display_name\": \"aute\",\n   \"description\": \"sit ut dolor cupidatat\",\n   \"created_on\": \"pariatur ipsum in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f2cfa885-0edb-4a2b-b20f-039cca6fc977",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9f438a7f-5082-4198-adae-ef6f7373f9ef",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f49256c8-c219-49f2-bba6-956041443286",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-03T00:16:34.560Z\",\n \"status\": -45646432,\n \"error\": \"magna ut dolore irure\",\n \"exception\": \"consequat dolore\",\n \"message\": \"velit voluptate Lorem non\",\n \"total_time_taken_in_millis\": 51450676,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"anim culpa\",\n   \"description\": \"Excepteur veniam ut\",\n   \"name\": \"ipsum\",\n   \"slug\": \"anim qui consectetur\",\n   \"meta\": [\n    {\n     \"_id\": \"consectetur ea qui ad\",\n     \"name\": \"aliqua in anim laboris\",\n     \"value\": \"irure\"\n    },\n    {\n     \"_id\": \"sit mag\",\n     \"name\": \"officia laborum eiusmod Lorem\",\n     \"value\": \"et ea Duis aliquip\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"in minim irure et\",\n    \"integration\": \"aliqua in adipisicing dolore sit\",\n    \"level\": \"reprehenderit enim ut\",\n    \"uid\": -75304836,\n    \"opted\": true,\n    \"permissions\": [\n     \"occaecat\",\n     \"mollit et\"\n    ],\n    \"token\": \"laborum deserunt quis ullamco tempor\",\n    \"name\": \"dolor sunt minim esse elit\",\n    \"stores\": [\n     {\n      \"_id\": \"culpa sint\",\n      \"integration\": \"voluptate exercitation aliquip\",\n      \"level\": \"Duis elit sint velit\",\n      \"uid\": 11281417,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore eiusmod\",\n      \"code\": \"dolore fugiat\",\n      \"name\": \"fugiat sit cupidatat Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"labore cupidatat\",\n      \"integration\": \"irure cillum en\",\n      \"level\": \"Excepteur dolore do\",\n      \"uid\": -67132931,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt Lorem culpa quis\",\n      \"code\": \"laborum in fugiat ex deserunt\",\n      \"name\": \"in exercitation velit voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolor dolore et\",\n      \"integration\": \"non mollit fugiat ex ea\",\n      \"level\": \"aliqua sit commodo\",\n      \"uid\": -87901496,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing sit veniam\",\n      \"code\": \"reprehenderit elit\",\n      \"name\": \"sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim\",\n      \"integration\": \"laboris culpa laborum occaecat\",\n      \"level\": \"veniam ad\",\n      \"uid\": 74166031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in dolore\",\n      \"code\": \"Duis amet dolor est\",\n      \"name\": \"Excepteur ullamco Lorem elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco ex\",\n    \"integration\": \"dolor exercitation deserunt aute\",\n    \"level\": \"Excepteur aliquip anim veniam\",\n    \"uid\": -59034597,\n    \"opted\": true,\n    \"permissions\": [\n     \"amet nulla incididunt\",\n     \"nisi ut adipisicing dolor\"\n    ],\n    \"token\": \"proident ven\",\n    \"name\": \"ipsum quis ut eu\",\n    \"stores\": [\n     {\n      \"_id\": \"incididunt cillum fugiat\",\n      \"integration\": \"Duis voluptate in velit in\",\n      \"level\": \"tempor nulla nostrud\",\n      \"uid\": 84849343,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa officia irure se\",\n      \"code\": \"occaecat dolor ad sunt\",\n      \"name\": \"in eu dolore reprehenderit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"non\",\n      \"integration\": \"commodo dolor\",\n      \"level\": \"amet dolor non velit\",\n      \"uid\": -13576047,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id in adipisicing anim\",\n      \"code\": \"pariatur in Lorem esse\",\n      \"name\": \"consectetur dolore cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat aliqua amet sint\",\n      \"integration\": \"adipisicing do occaecat\",\n      \"level\": \"dolore reprehenderit\",\n      \"uid\": -94975449,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit\",\n      \"code\": \"dolore sint\",\n      \"name\": \"enim esse nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in dolor eiusmod proident\",\n      \"integration\": \"ex irure in\",\n      \"level\": \"elit dolore\",\n      \"uid\": 40746689,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consequat sed do reprehenderit\",\n      \"code\": \"sint\",\n      \"name\": \"occaecat sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"in consequat\",\n   \"description\": \"commodo et\",\n   \"name\": \"ipsum ea non in\",\n   \"slug\": \"ut cillum\",\n   \"meta\": [\n    {\n     \"_id\": \"ea ad laboris\",\n     \"name\": \"eiusmod\",\n     \"value\": \"Lorem magna\"\n    },\n    {\n     \"_id\": \"anim \",\n     \"name\": \"elit labore esse\",\n     \"value\": \"irure in minim \"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolore exercitation vel\",\n    \"integration\": \"id dolore voluptate incididunt do\",\n    \"level\": \"eiusmod\",\n    \"uid\": -87697863,\n    \"opted\": true,\n    \"permissions\": [\n     \"cupidatat\",\n     \"enim\"\n    ],\n    \"token\": \"proident ullamco sint Lorem\",\n    \"name\": \"esse in incid\",\n    \"stores\": [\n     {\n      \"_id\": \"do id\",\n      \"integration\": \"amet in do\",\n      \"level\": \"ut veniam irure magna sed\",\n      \"uid\": 28187358,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore\",\n      \"code\": \"adipisicing est mollit proident\",\n      \"name\": \"id tempor et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor Duis veniam dolore ut\",\n      \"integration\": \"sint voluptate\",\n      \"level\": \"enim proident eu Excepteur commodo\",\n      \"uid\": 30017254,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem cillum deserunt\",\n      \"code\": \"nostrud\",\n      \"name\": \"nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ad in\",\n      \"integration\": \"tempor\",\n      \"level\": \"esse proident veniam dolor Excepteur\",\n      \"uid\": 35398739,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est dolore do\",\n      \"code\": \"magna officia\",\n      \"name\": \"in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident deserunt\",\n      \"integration\": \"qui cupidatat deserunt\",\n      \"level\": \"laboris velit aliqua commodo\",\n      \"uid\": -68755016,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor in ex ipsum\",\n      \"code\": \"ipsum nisi officia dolore Excepteur\",\n      \"name\": \"ulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Lorem quis nulla\",\n    \"integration\": \"proident officia reprehenderit\",\n    \"level\": \"ullamco nulla\",\n    \"uid\": 76130833,\n    \"opted\": false,\n    \"permissions\": [\n     \"minim elit\",\n     \"ea aliquip magna\"\n    ],\n    \"token\": \"velit aliqua dolore consequat\",\n    \"name\": \"elit dolore laboris\",\n    \"stores\": [\n     {\n      \"_id\": \"consectetur enim ea Duis occaecat\",\n      \"integration\": \"id quis\",\n      \"level\": \"id \",\n      \"uid\": -80385619,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip dolore veniam\",\n      \"code\": \"nisi\",\n      \"name\": \"qui dolor commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia a\",\n      \"integration\": \"Excepteur\",\n      \"level\": \"eiusmod ullamco amet occaecat\",\n      \"uid\": 70931205,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore aliqua in\",\n      \"code\": \"sed\",\n      \"name\": \"ut ipsum consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"deserunt laboris ut enim\",\n      \"integration\": \"velit ex commodo\",\n      \"level\": \"Lorem laborum Excepteur\",\n      \"uid\": 90083298,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident occaecat\",\n      \"code\": \"culpa ex anim minim\",\n      \"name\": \"voluptate Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia\",\n      \"integration\": \"reprehenderit enim consequat magna qui\",\n      \"level\": \"et magna ex est enim\",\n      \"uid\": -15291560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut aute sint ex\",\n      \"code\": \"Duis ipsum nostrud consectetur laboris\",\n      \"name\": \"consectetur quis d\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"in pariatur esse nisi\",\n \"page\": {\n  \"type\": \"quis deserunt aute\",\n  \"size\": 63034397,\n  \"current\": -20679330,\n  \"has_next\": false,\n  \"item_total\": 86290180,\n  \"next_id\": \"aute minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "77212620-8d11-4255-9658-c26fdd406929",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-03T00:16:34.560Z\",\n \"status\": -45646432,\n \"error\": \"magna ut dolore irure\",\n \"exception\": \"consequat dolore\",\n \"message\": \"velit voluptate Lorem non\",\n \"total_time_taken_in_millis\": 51450676,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"anim culpa\",\n   \"description\": \"Excepteur veniam ut\",\n   \"name\": \"ipsum\",\n   \"slug\": \"anim qui consectetur\",\n   \"meta\": [\n    {\n     \"_id\": \"consectetur ea qui ad\",\n     \"name\": \"aliqua in anim laboris\",\n     \"value\": \"irure\"\n    },\n    {\n     \"_id\": \"sit mag\",\n     \"name\": \"officia laborum eiusmod Lorem\",\n     \"value\": \"et ea Duis aliquip\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"in minim irure et\",\n    \"integration\": \"aliqua in adipisicing dolore sit\",\n    \"level\": \"reprehenderit enim ut\",\n    \"uid\": -75304836,\n    \"opted\": true,\n    \"permissions\": [\n     \"occaecat\",\n     \"mollit et\"\n    ],\n    \"token\": \"laborum deserunt quis ullamco tempor\",\n    \"name\": \"dolor sunt minim esse elit\",\n    \"stores\": [\n     {\n      \"_id\": \"culpa sint\",\n      \"integration\": \"voluptate exercitation aliquip\",\n      \"level\": \"Duis elit sint velit\",\n      \"uid\": 11281417,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore eiusmod\",\n      \"code\": \"dolore fugiat\",\n      \"name\": \"fugiat sit cupidatat Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"labore cupidatat\",\n      \"integration\": \"irure cillum en\",\n      \"level\": \"Excepteur dolore do\",\n      \"uid\": -67132931,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt Lorem culpa quis\",\n      \"code\": \"laborum in fugiat ex deserunt\",\n      \"name\": \"in exercitation velit voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolor dolore et\",\n      \"integration\": \"non mollit fugiat ex ea\",\n      \"level\": \"aliqua sit commodo\",\n      \"uid\": -87901496,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing sit veniam\",\n      \"code\": \"reprehenderit elit\",\n      \"name\": \"sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim\",\n      \"integration\": \"laboris culpa laborum occaecat\",\n      \"level\": \"veniam ad\",\n      \"uid\": 74166031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in dolore\",\n      \"code\": \"Duis amet dolor est\",\n      \"name\": \"Excepteur ullamco Lorem elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco ex\",\n    \"integration\": \"dolor exercitation deserunt aute\",\n    \"level\": \"Excepteur aliquip anim veniam\",\n    \"uid\": -59034597,\n    \"opted\": true,\n    \"permissions\": [\n     \"amet nulla incididunt\",\n     \"nisi ut adipisicing dolor\"\n    ],\n    \"token\": \"proident ven\",\n    \"name\": \"ipsum quis ut eu\",\n    \"stores\": [\n     {\n      \"_id\": \"incididunt cillum fugiat\",\n      \"integration\": \"Duis voluptate in velit in\",\n      \"level\": \"tempor nulla nostrud\",\n      \"uid\": 84849343,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa officia irure se\",\n      \"code\": \"occaecat dolor ad sunt\",\n      \"name\": \"in eu dolore reprehenderit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"non\",\n      \"integration\": \"commodo dolor\",\n      \"level\": \"amet dolor non velit\",\n      \"uid\": -13576047,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id in adipisicing anim\",\n      \"code\": \"pariatur in Lorem esse\",\n      \"name\": \"consectetur dolore cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat aliqua amet sint\",\n      \"integration\": \"adipisicing do occaecat\",\n      \"level\": \"dolore reprehenderit\",\n      \"uid\": -94975449,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit\",\n      \"code\": \"dolore sint\",\n      \"name\": \"enim esse nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in dolor eiusmod proident\",\n      \"integration\": \"ex irure in\",\n      \"level\": \"elit dolore\",\n      \"uid\": 40746689,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consequat sed do reprehenderit\",\n      \"code\": \"sint\",\n      \"name\": \"occaecat sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"in consequat\",\n   \"description\": \"commodo et\",\n   \"name\": \"ipsum ea non in\",\n   \"slug\": \"ut cillum\",\n   \"meta\": [\n    {\n     \"_id\": \"ea ad laboris\",\n     \"name\": \"eiusmod\",\n     \"value\": \"Lorem magna\"\n    },\n    {\n     \"_id\": \"anim \",\n     \"name\": \"elit labore esse\",\n     \"value\": \"irure in minim \"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolore exercitation vel\",\n    \"integration\": \"id dolore voluptate incididunt do\",\n    \"level\": \"eiusmod\",\n    \"uid\": -87697863,\n    \"opted\": true,\n    \"permissions\": [\n     \"cupidatat\",\n     \"enim\"\n    ],\n    \"token\": \"proident ullamco sint Lorem\",\n    \"name\": \"esse in incid\",\n    \"stores\": [\n     {\n      \"_id\": \"do id\",\n      \"integration\": \"amet in do\",\n      \"level\": \"ut veniam irure magna sed\",\n      \"uid\": 28187358,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore\",\n      \"code\": \"adipisicing est mollit proident\",\n      \"name\": \"id tempor et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor Duis veniam dolore ut\",\n      \"integration\": \"sint voluptate\",\n      \"level\": \"enim proident eu Excepteur commodo\",\n      \"uid\": 30017254,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem cillum deserunt\",\n      \"code\": \"nostrud\",\n      \"name\": \"nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ad in\",\n      \"integration\": \"tempor\",\n      \"level\": \"esse proident veniam dolor Excepteur\",\n      \"uid\": 35398739,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est dolore do\",\n      \"code\": \"magna officia\",\n      \"name\": \"in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident deserunt\",\n      \"integration\": \"qui cupidatat deserunt\",\n      \"level\": \"laboris velit aliqua commodo\",\n      \"uid\": -68755016,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor in ex ipsum\",\n      \"code\": \"ipsum nisi officia dolore Excepteur\",\n      \"name\": \"ulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Lorem quis nulla\",\n    \"integration\": \"proident officia reprehenderit\",\n    \"level\": \"ullamco nulla\",\n    \"uid\": 76130833,\n    \"opted\": false,\n    \"permissions\": [\n     \"minim elit\",\n     \"ea aliquip magna\"\n    ],\n    \"token\": \"velit aliqua dolore consequat\",\n    \"name\": \"elit dolore laboris\",\n    \"stores\": [\n     {\n      \"_id\": \"consectetur enim ea Duis occaecat\",\n      \"integration\": \"id quis\",\n      \"level\": \"id \",\n      \"uid\": -80385619,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip dolore veniam\",\n      \"code\": \"nisi\",\n      \"name\": \"qui dolor commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia a\",\n      \"integration\": \"Excepteur\",\n      \"level\": \"eiusmod ullamco amet occaecat\",\n      \"uid\": 70931205,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore aliqua in\",\n      \"code\": \"sed\",\n      \"name\": \"ut ipsum consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"deserunt laboris ut enim\",\n      \"integration\": \"velit ex commodo\",\n      \"level\": \"Lorem laborum Excepteur\",\n      \"uid\": 90083298,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident occaecat\",\n      \"code\": \"culpa ex anim minim\",\n      \"name\": \"voluptate Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia\",\n      \"integration\": \"reprehenderit enim consequat magna qui\",\n      \"level\": \"et magna ex est enim\",\n      \"uid\": -15291560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut aute sint ex\",\n      \"code\": \"Duis ipsum nostrud consectetur laboris\",\n      \"name\": \"consectetur quis d\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"in pariatur esse nisi\",\n \"page\": {\n  \"type\": \"quis deserunt aute\",\n  \"size\": 63034397,\n  \"current\": -20679330,\n  \"has_next\": false,\n  \"item_total\": 86290180,\n  \"next_id\": \"aute minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "16c06edc-da79-4fad-928d-3a157915e361",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1960-02-03T00:16:34.560Z\",\n \"status\": -45646432,\n \"error\": \"magna ut dolore irure\",\n \"exception\": \"consequat dolore\",\n \"message\": \"velit voluptate Lorem non\",\n \"total_time_taken_in_millis\": 51450676,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"anim culpa\",\n   \"description\": \"Excepteur veniam ut\",\n   \"name\": \"ipsum\",\n   \"slug\": \"anim qui consectetur\",\n   \"meta\": [\n    {\n     \"_id\": \"consectetur ea qui ad\",\n     \"name\": \"aliqua in anim laboris\",\n     \"value\": \"irure\"\n    },\n    {\n     \"_id\": \"sit mag\",\n     \"name\": \"officia laborum eiusmod Lorem\",\n     \"value\": \"et ea Duis aliquip\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"in minim irure et\",\n    \"integration\": \"aliqua in adipisicing dolore sit\",\n    \"level\": \"reprehenderit enim ut\",\n    \"uid\": -75304836,\n    \"opted\": true,\n    \"permissions\": [\n     \"occaecat\",\n     \"mollit et\"\n    ],\n    \"token\": \"laborum deserunt quis ullamco tempor\",\n    \"name\": \"dolor sunt minim esse elit\",\n    \"stores\": [\n     {\n      \"_id\": \"culpa sint\",\n      \"integration\": \"voluptate exercitation aliquip\",\n      \"level\": \"Duis elit sint velit\",\n      \"uid\": 11281417,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore eiusmod\",\n      \"code\": \"dolore fugiat\",\n      \"name\": \"fugiat sit cupidatat Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"labore cupidatat\",\n      \"integration\": \"irure cillum en\",\n      \"level\": \"Excepteur dolore do\",\n      \"uid\": -67132931,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt Lorem culpa quis\",\n      \"code\": \"laborum in fugiat ex deserunt\",\n      \"name\": \"in exercitation velit voluptate\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolor dolore et\",\n      \"integration\": \"non mollit fugiat ex ea\",\n      \"level\": \"aliqua sit commodo\",\n      \"uid\": -87901496,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing sit veniam\",\n      \"code\": \"reprehenderit elit\",\n      \"name\": \"sint\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"enim\",\n      \"integration\": \"laboris culpa laborum occaecat\",\n      \"level\": \"veniam ad\",\n      \"uid\": 74166031,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"in dolore\",\n      \"code\": \"Duis amet dolor est\",\n      \"name\": \"Excepteur ullamco Lorem elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ullamco ex\",\n    \"integration\": \"dolor exercitation deserunt aute\",\n    \"level\": \"Excepteur aliquip anim veniam\",\n    \"uid\": -59034597,\n    \"opted\": true,\n    \"permissions\": [\n     \"amet nulla incididunt\",\n     \"nisi ut adipisicing dolor\"\n    ],\n    \"token\": \"proident ven\",\n    \"name\": \"ipsum quis ut eu\",\n    \"stores\": [\n     {\n      \"_id\": \"incididunt cillum fugiat\",\n      \"integration\": \"Duis voluptate in velit in\",\n      \"level\": \"tempor nulla nostrud\",\n      \"uid\": 84849343,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa officia irure se\",\n      \"code\": \"occaecat dolor ad sunt\",\n      \"name\": \"in eu dolore reprehenderit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"non\",\n      \"integration\": \"commodo dolor\",\n      \"level\": \"amet dolor non velit\",\n      \"uid\": -13576047,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id in adipisicing anim\",\n      \"code\": \"pariatur in Lorem esse\",\n      \"name\": \"consectetur dolore cupidatat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"fugiat aliqua amet sint\",\n      \"integration\": \"adipisicing do occaecat\",\n      \"level\": \"dolore reprehenderit\",\n      \"uid\": -94975449,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"velit\",\n      \"code\": \"dolore sint\",\n      \"name\": \"enim esse nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"in dolor eiusmod proident\",\n      \"integration\": \"ex irure in\",\n      \"level\": \"elit dolore\",\n      \"uid\": 40746689,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"consequat sed do reprehenderit\",\n      \"code\": \"sint\",\n      \"name\": \"occaecat sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"in consequat\",\n   \"description\": \"commodo et\",\n   \"name\": \"ipsum ea non in\",\n   \"slug\": \"ut cillum\",\n   \"meta\": [\n    {\n     \"_id\": \"ea ad laboris\",\n     \"name\": \"eiusmod\",\n     \"value\": \"Lorem magna\"\n    },\n    {\n     \"_id\": \"anim \",\n     \"name\": \"elit labore esse\",\n     \"value\": \"irure in minim \"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"dolore exercitation vel\",\n    \"integration\": \"id dolore voluptate incididunt do\",\n    \"level\": \"eiusmod\",\n    \"uid\": -87697863,\n    \"opted\": true,\n    \"permissions\": [\n     \"cupidatat\",\n     \"enim\"\n    ],\n    \"token\": \"proident ullamco sint Lorem\",\n    \"name\": \"esse in incid\",\n    \"stores\": [\n     {\n      \"_id\": \"do id\",\n      \"integration\": \"amet in do\",\n      \"level\": \"ut veniam irure magna sed\",\n      \"uid\": 28187358,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore\",\n      \"code\": \"adipisicing est mollit proident\",\n      \"name\": \"id tempor et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor Duis veniam dolore ut\",\n      \"integration\": \"sint voluptate\",\n      \"level\": \"enim proident eu Excepteur commodo\",\n      \"uid\": 30017254,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Lorem cillum deserunt\",\n      \"code\": \"nostrud\",\n      \"name\": \"nisi\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ad in\",\n      \"integration\": \"tempor\",\n      \"level\": \"esse proident veniam dolor Excepteur\",\n      \"uid\": 35398739,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"est dolore do\",\n      \"code\": \"magna officia\",\n      \"name\": \"in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident deserunt\",\n      \"integration\": \"qui cupidatat deserunt\",\n      \"level\": \"laboris velit aliqua commodo\",\n      \"uid\": -68755016,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolor in ex ipsum\",\n      \"code\": \"ipsum nisi officia dolore Excepteur\",\n      \"name\": \"ulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Lorem quis nulla\",\n    \"integration\": \"proident officia reprehenderit\",\n    \"level\": \"ullamco nulla\",\n    \"uid\": 76130833,\n    \"opted\": false,\n    \"permissions\": [\n     \"minim elit\",\n     \"ea aliquip magna\"\n    ],\n    \"token\": \"velit aliqua dolore consequat\",\n    \"name\": \"elit dolore laboris\",\n    \"stores\": [\n     {\n      \"_id\": \"consectetur enim ea Duis occaecat\",\n      \"integration\": \"id quis\",\n      \"level\": \"id \",\n      \"uid\": -80385619,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip dolore veniam\",\n      \"code\": \"nisi\",\n      \"name\": \"qui dolor commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia a\",\n      \"integration\": \"Excepteur\",\n      \"level\": \"eiusmod ullamco amet occaecat\",\n      \"uid\": 70931205,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"labore aliqua in\",\n      \"code\": \"sed\",\n      \"name\": \"ut ipsum consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"deserunt laboris ut enim\",\n      \"integration\": \"velit ex commodo\",\n      \"level\": \"Lorem laborum Excepteur\",\n      \"uid\": 90083298,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"proident occaecat\",\n      \"code\": \"culpa ex anim minim\",\n      \"name\": \"voluptate Duis\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"officia\",\n      \"integration\": \"reprehenderit enim consequat magna qui\",\n      \"level\": \"et magna ex est enim\",\n      \"uid\": -15291560,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut aute sint ex\",\n      \"code\": \"Duis ipsum nostrud consectetur laboris\",\n      \"name\": \"consectetur quis d\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"in pariatur esse nisi\",\n \"page\": {\n  \"type\": \"quis deserunt aute\",\n  \"size\": 63034397,\n  \"current\": -20679330,\n  \"has_next\": false,\n  \"item_total\": 86290180,\n  \"next_id\": \"aute minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "11b7ce30-ffdc-4b4b-8c62-2ab3ef0d3f55",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1b3faf56-e741-49ec-92fd-32bed8056ae4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-04-18T02:05:26.223Z\",\n \"status\": -13729602,\n \"error\": \"sit nisi\",\n \"exception\": \"Excepteur minim\",\n \"message\": \"occaecat minim\",\n \"total_time_taken_in_millis\": 91719762,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"aliquip voluptate\",\n  \"error_message\": \"ex in aute\"\n },\n \"payload\": {\n  \"session_id\": \"pariatur mollit\",\n  \"error_message\": \"mollit est amet\"\n },\n \"trace_id\": \"commodo ut\",\n \"page\": {\n  \"type\": \"ut exercitation ullamco consequat\",\n  \"size\": -96697030,\n  \"current\": -41184553,\n  \"has_next\": true,\n  \"item_total\": 91330047,\n  \"next_id\": \"labore quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3168b8ec-f826-406e-bad2-7ccfd1a5e4d9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-04-18T02:05:26.223Z\",\n \"status\": -13729602,\n \"error\": \"sit nisi\",\n \"exception\": \"Excepteur minim\",\n \"message\": \"occaecat minim\",\n \"total_time_taken_in_millis\": 91719762,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"aliquip voluptate\",\n  \"error_message\": \"ex in aute\"\n },\n \"payload\": {\n  \"session_id\": \"pariatur mollit\",\n  \"error_message\": \"mollit est amet\"\n },\n \"trace_id\": \"commodo ut\",\n \"page\": {\n  \"type\": \"ut exercitation ullamco consequat\",\n  \"size\": -96697030,\n  \"current\": -41184553,\n  \"has_next\": true,\n  \"item_total\": 91330047,\n  \"next_id\": \"labore quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c168742e-60b3-49e0-9a7d-51b5948908ca",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-04-18T02:05:26.223Z\",\n \"status\": -13729602,\n \"error\": \"sit nisi\",\n \"exception\": \"Excepteur minim\",\n \"message\": \"occaecat minim\",\n \"total_time_taken_in_millis\": 91719762,\n \"http_status\": \"508 LOOP_DETECTED\",\n \"items\": {\n  \"session_id\": \"aliquip voluptate\",\n  \"error_message\": \"ex in aute\"\n },\n \"payload\": {\n  \"session_id\": \"pariatur mollit\",\n  \"error_message\": \"mollit est amet\"\n },\n \"trace_id\": \"commodo ut\",\n \"page\": {\n  \"type\": \"ut exercitation ullamco consequat\",\n  \"size\": -96697030,\n  \"current\": -41184553,\n  \"has_next\": true,\n  \"item_total\": 91330047,\n  \"next_id\": \"labore quis\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "fb3aaf16-53b4-4e91-907e-e1e7a3763d9b",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a59bfb0f-37f3-4f31-82d6-3caaa3574d5f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-26T02:05:05.694Z\",\n \"status\": -81007614,\n \"error\": \"sed ipsum sunt et elit\",\n \"exception\": \"esse exercitation amet laboris id\",\n \"message\": \"incididunt adipisicin\",\n \"total_time_taken_in_millis\": -33319195,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"company_id\": 99818234,\n  \"integration_data\": {},\n  \"company_name\": \"id reprehenderit voluptate\",\n  \"task_details\": {\n   \"type\": -9547080,\n   \"group_list\": [\n    {\n     \"text\": \"incididunt elit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet veniam minim cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -80221331.74709389,\n   \"safe_stock\": -69085799,\n   \"period_threshold\": 52944408,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"elit qui dolor velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore in elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum\",\n  \"alias\": \"amet nisi dolor veniam consectetur\"\n },\n \"payload\": {\n  \"company_id\": 24895101,\n  \"integration_data\": {},\n  \"company_name\": \"sed Ut incididunt sunt irure\",\n  \"task_details\": {\n   \"type\": -7068122,\n   \"group_list\": [\n    {\n     \"text\": \"aliquip nostrud consequat adipisicing\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"et dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 68928772.97019124,\n   \"safe_stock\": -71477854,\n   \"period_threshold\": -85984296,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"commodo nulla Excepteur magna dolor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolor exercitati\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Excepteur et ut ad\",\n  \"alias\": \"nulla do non enim\"\n },\n \"trace_id\": \"sed consequat irure sint\",\n \"page\": {\n  \"type\": \"anim mollit laboru\",\n  \"size\": -69683997,\n  \"current\": -11616910,\n  \"has_next\": true,\n  \"item_total\": 38244293,\n  \"next_id\": \"ipsum Ut elit magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "278327fd-856e-4b97-aba0-9071be60c908",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-26T02:05:05.694Z\",\n \"status\": -81007614,\n \"error\": \"sed ipsum sunt et elit\",\n \"exception\": \"esse exercitation amet laboris id\",\n \"message\": \"incididunt adipisicin\",\n \"total_time_taken_in_millis\": -33319195,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"company_id\": 99818234,\n  \"integration_data\": {},\n  \"company_name\": \"id reprehenderit voluptate\",\n  \"task_details\": {\n   \"type\": -9547080,\n   \"group_list\": [\n    {\n     \"text\": \"incididunt elit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet veniam minim cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -80221331.74709389,\n   \"safe_stock\": -69085799,\n   \"period_threshold\": 52944408,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"elit qui dolor velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore in elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum\",\n  \"alias\": \"amet nisi dolor veniam consectetur\"\n },\n \"payload\": {\n  \"company_id\": 24895101,\n  \"integration_data\": {},\n  \"company_name\": \"sed Ut incididunt sunt irure\",\n  \"task_details\": {\n   \"type\": -7068122,\n   \"group_list\": [\n    {\n     \"text\": \"aliquip nostrud consequat adipisicing\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"et dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 68928772.97019124,\n   \"safe_stock\": -71477854,\n   \"period_threshold\": -85984296,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"commodo nulla Excepteur magna dolor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolor exercitati\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Excepteur et ut ad\",\n  \"alias\": \"nulla do non enim\"\n },\n \"trace_id\": \"sed consequat irure sint\",\n \"page\": {\n  \"type\": \"anim mollit laboru\",\n  \"size\": -69683997,\n  \"current\": -11616910,\n  \"has_next\": true,\n  \"item_total\": 38244293,\n  \"next_id\": \"ipsum Ut elit magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "44d42930-5cc8-4547-b976-00e8854a3a7a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-08-26T02:05:05.694Z\",\n \"status\": -81007614,\n \"error\": \"sed ipsum sunt et elit\",\n \"exception\": \"esse exercitation amet laboris id\",\n \"message\": \"incididunt adipisicin\",\n \"total_time_taken_in_millis\": -33319195,\n \"http_status\": \"302 FOUND\",\n \"items\": {\n  \"company_id\": 99818234,\n  \"integration_data\": {},\n  \"company_name\": \"id reprehenderit voluptate\",\n  \"task_details\": {\n   \"type\": -9547080,\n   \"group_list\": [\n    {\n     \"text\": \"incididunt elit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet veniam minim cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -80221331.74709389,\n   \"safe_stock\": -69085799,\n   \"period_threshold\": 52944408,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"elit qui dolor velit\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore in elit\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"laborum\",\n  \"alias\": \"amet nisi dolor veniam consectetur\"\n },\n \"payload\": {\n  \"company_id\": 24895101,\n  \"integration_data\": {},\n  \"company_name\": \"sed Ut incididunt sunt irure\",\n  \"task_details\": {\n   \"type\": -7068122,\n   \"group_list\": [\n    {\n     \"text\": \"aliquip nostrud consequat adipisicing\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"et dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 68928772.97019124,\n   \"safe_stock\": -71477854,\n   \"period_threshold\": -85984296,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"commodo nulla Excepteur magna dolor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolor exercitati\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"Excepteur et ut ad\",\n  \"alias\": \"nulla do non enim\"\n },\n \"trace_id\": \"sed consequat irure sint\",\n \"page\": {\n  \"type\": \"anim mollit laboru\",\n  \"size\": -69683997,\n  \"current\": -11616910,\n  \"has_next\": true,\n  \"item_total\": 38244293,\n  \"next_id\": \"ipsum Ut elit magna\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d4bea592-9f20-4804-8ec3-7a280b0d7d37",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "65c38758-c990-4da2-b774-2c5fb0b19081",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-11-18T14:26:14.457Z\",\n \"status\": -60662980,\n \"error\": \"nostrud elit\",\n \"exception\": \"id nulla volupt\",\n \"message\": \"enim dolor oc\",\n \"total_time_taken_in_millis\": -15918077,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": -24866929,\n   \"integration_data\": {},\n   \"company_name\": \"irure ut id\",\n   \"task_details\": {\n    \"type\": 84389591,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat Duis enim tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt ipsum dol\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 6672208.128832042,\n    \"safe_stock\": -36489482,\n    \"period_threshold\": -3659501,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse nos\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex ea ullamc\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Lorem velit proident\",\n   \"alias\": \"qui\"\n  },\n  {\n   \"company_id\": -27081347,\n   \"integration_data\": {},\n   \"company_name\": \"proident occaecat ut dolor\",\n   \"task_details\": {\n    \"type\": -64131370,\n    \"group_list\": [\n     {\n      \"text\": \"magna do velit tempor in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt est proident minim ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 42031446.587809116,\n    \"safe_stock\": 77280899,\n    \"period_threshold\": 18791849,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco tempor veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident non commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit incididunt\",\n   \"alias\": \"Lorem\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -13439061,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud anim deserunt\",\n   \"task_details\": {\n    \"type\": -75708713,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 94817541.56474599,\n    \"safe_stock\": 85789457,\n    \"period_threshold\": -44435726,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum sunt aliquip elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet minim\",\n   \"alias\": \"reprehenderit do minim\"\n  },\n  {\n   \"company_id\": -43757243,\n   \"integration_data\": {},\n   \"company_name\": \"sed commod\",\n   \"task_details\": {\n    \"type\": -7026543,\n    \"group_list\": [\n     {\n      \"text\": \"sit dolore pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua ipsum dolore minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 11969581.36970441,\n    \"safe_stock\": 72107596,\n    \"period_threshold\": 7077880,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut ad id eiusmod pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore ut\",\n   \"alias\": \"consectetur ei\"\n  }\n ],\n \"trace_id\": \"reprehenderit in Excepteur eu\",\n \"page\": {\n  \"type\": \"incididunt dolor nulla mollit\",\n  \"size\": 78531580,\n  \"current\": 88241265,\n  \"has_next\": true,\n  \"item_total\": -95510720,\n  \"next_id\": \"non i\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4a0145e7-5b6d-445c-a095-4b6ee50cf9a7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-03T17:44:42.934Z\",\n \"status\": 36079178,\n \"error\": \"pariatur laborum Ut\",\n \"exception\": \"cillum eu dolor\",\n \"message\": \"do eu\",\n \"total_time_taken_in_millis\": 34914473,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -19587755,\n   \"integration_data\": {},\n   \"company_name\": \"velit Duis ut\",\n   \"task_details\": {\n    \"type\": -8723920,\n    \"group_list\": [\n     {\n      \"text\": \"anim amet commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat voluptate cupidatat irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 63881793.02128413,\n    \"safe_stock\": 19323279,\n    \"period_threshold\": -4788233,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor ad laborum enim sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu incididunt veniam in\",\n   \"alias\": \"aute consectetur minim ad\"\n  },\n  {\n   \"company_id\": -12863278,\n   \"integration_data\": {},\n   \"company_name\": \"laboris consectetur dolor\",\n   \"task_details\": {\n    \"type\": 76735148,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip in nul\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat id consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34087315.705657154,\n    \"safe_stock\": 49906464,\n    \"period_threshold\": 99484871,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa nostrud ad deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in reprehenderit\",\n   \"alias\": \"\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 62630252,\n   \"integration_data\": {},\n   \"company_name\": \"culpa deserunt cupidatat consectetur\",\n   \"task_details\": {\n    \"type\": -50584904,\n    \"group_list\": [\n     {\n      \"text\": \"proident labore Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id e\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 8581650.598775208,\n    \"safe_stock\": 14457853,\n    \"period_threshold\": -50872578,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt nostr\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam dolore ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip irure in\",\n   \"alias\": \"cupidatat incididunt sint nisi\"\n  },\n  {\n   \"company_id\": -21497773,\n   \"integration_data\": {},\n   \"company_name\": \"nisi Excepteur commodo\",\n   \"task_details\": {\n    \"type\": 98445264,\n    \"group_list\": [\n     {\n      \"text\": \"in elit cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 55805337.72287071,\n    \"safe_stock\": 18788610,\n    \"period_threshold\": 74356124,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"temp\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est\",\n   \"alias\": \"incididunt eu nulla Ut\"\n  }\n ],\n \"trace_id\": \"pariatur aliquip\",\n \"page\": {\n  \"type\": \"Ut exercitation adipisicing\",\n  \"size\": 30876870,\n  \"current\": 74118793,\n  \"has_next\": false,\n  \"item_total\": 2727543,\n  \"next_id\": \"ex\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a5146d40-8b8f-4ac1-8702-38b03a4c4320",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-03T17:44:42.934Z\",\n \"status\": 36079178,\n \"error\": \"pariatur laborum Ut\",\n \"exception\": \"cillum eu dolor\",\n \"message\": \"do eu\",\n \"total_time_taken_in_millis\": 34914473,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -19587755,\n   \"integration_data\": {},\n   \"company_name\": \"velit Duis ut\",\n   \"task_details\": {\n    \"type\": -8723920,\n    \"group_list\": [\n     {\n      \"text\": \"anim amet commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat voluptate cupidatat irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 63881793.02128413,\n    \"safe_stock\": 19323279,\n    \"period_threshold\": -4788233,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor ad laborum enim sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu incididunt veniam in\",\n   \"alias\": \"aute consectetur minim ad\"\n  },\n  {\n   \"company_id\": -12863278,\n   \"integration_data\": {},\n   \"company_name\": \"laboris consectetur dolor\",\n   \"task_details\": {\n    \"type\": 76735148,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip in nul\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat id consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34087315.705657154,\n    \"safe_stock\": 49906464,\n    \"period_threshold\": 99484871,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa nostrud ad deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in reprehenderit\",\n   \"alias\": \"\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 62630252,\n   \"integration_data\": {},\n   \"company_name\": \"culpa deserunt cupidatat consectetur\",\n   \"task_details\": {\n    \"type\": -50584904,\n    \"group_list\": [\n     {\n      \"text\": \"proident labore Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id e\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 8581650.598775208,\n    \"safe_stock\": 14457853,\n    \"period_threshold\": -50872578,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt nostr\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam dolore ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip irure in\",\n   \"alias\": \"cupidatat incididunt sint nisi\"\n  },\n  {\n   \"company_id\": -21497773,\n   \"integration_data\": {},\n   \"company_name\": \"nisi Excepteur commodo\",\n   \"task_details\": {\n    \"type\": 98445264,\n    \"group_list\": [\n     {\n      \"text\": \"in elit cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 55805337.72287071,\n    \"safe_stock\": 18788610,\n    \"period_threshold\": 74356124,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"temp\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est\",\n   \"alias\": \"incididunt eu nulla Ut\"\n  }\n ],\n \"trace_id\": \"pariatur aliquip\",\n \"page\": {\n  \"type\": \"Ut exercitation adipisicing\",\n  \"size\": 30876870,\n  \"current\": 74118793,\n  \"has_next\": false,\n  \"item_total\": 2727543,\n  \"next_id\": \"ex\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d4aced5f-028a-4b97-a17a-05f6243c03a9",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3097f1ce-7799-4f3e-88ac-43e4c21b318b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-08-05T03:40:57.670Z\",\n \"status\": 70597097,\n \"error\": \"Excepteur aliqu\",\n \"exception\": \"labore laborum\",\n \"message\": \"commodo qu\",\n \"total_time_taken_in_millis\": -74219336,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nostrud velit\",\n \"page\": {\n  \"type\": \"occaecat et\",\n  \"size\": 76888369,\n  \"current\": 67915188,\n  \"has_next\": false,\n  \"item_total\": 27615624,\n  \"next_id\": \"amet esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8da7c7a3-da0d-434c-9d6e-cf767b18ea2f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-08-05T03:40:57.670Z\",\n \"status\": 70597097,\n \"error\": \"Excepteur aliqu\",\n \"exception\": \"labore laborum\",\n \"message\": \"commodo qu\",\n \"total_time_taken_in_millis\": -74219336,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nostrud velit\",\n \"page\": {\n  \"type\": \"occaecat et\",\n  \"size\": 76888369,\n  \"current\": 67915188,\n  \"has_next\": false,\n  \"item_total\": 27615624,\n  \"next_id\": \"amet esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3b37fbc9-f68f-407a-a973-53787eab3881",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-08-05T03:40:57.670Z\",\n \"status\": 70597097,\n \"error\": \"Excepteur aliqu\",\n \"exception\": \"labore laborum\",\n \"message\": \"commodo qu\",\n \"total_time_taken_in_millis\": -74219336,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"nostrud velit\",\n \"page\": {\n  \"type\": \"occaecat et\",\n  \"size\": 76888369,\n  \"current\": 67915188,\n  \"has_next\": false,\n  \"item_total\": 27615624,\n  \"next_id\": \"amet esse\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "4b929457-545f-4e8f-96c2-d36643777b91",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "37224f79-957e-40fa-92db-705fdb9002c5",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-09T21:09:01.382Z\",\n \"status\": 18554491,\n \"error\": \"deserunt dolor non ex\",\n \"exception\": \"dolor in deserunt\",\n \"message\": \"do esse\",\n \"total_time_taken_in_millis\": 56182116,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad sunt non\",\n \"page\": {\n  \"type\": \"sed magna id\",\n  \"size\": 77657382,\n  \"current\": -68362701,\n  \"has_next\": true,\n  \"item_total\": -83839551,\n  \"next_id\": \"voluptate ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7777d342-0822-4aa1-9f7b-1bfabdbca370",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-09T21:09:01.382Z\",\n \"status\": 18554491,\n \"error\": \"deserunt dolor non ex\",\n \"exception\": \"dolor in deserunt\",\n \"message\": \"do esse\",\n \"total_time_taken_in_millis\": 56182116,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad sunt non\",\n \"page\": {\n  \"type\": \"sed magna id\",\n  \"size\": 77657382,\n  \"current\": -68362701,\n  \"has_next\": true,\n  \"item_total\": -83839551,\n  \"next_id\": \"voluptate ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3a7f1b63-1f7d-48af-9990-957c5c874c0c",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-09T21:09:01.382Z\",\n \"status\": 18554491,\n \"error\": \"deserunt dolor non ex\",\n \"exception\": \"dolor in deserunt\",\n \"message\": \"do esse\",\n \"total_time_taken_in_millis\": 56182116,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad sunt non\",\n \"page\": {\n  \"type\": \"sed magna id\",\n  \"size\": 77657382,\n  \"current\": -68362701,\n  \"has_next\": true,\n  \"item_total\": -83839551,\n  \"next_id\": \"voluptate ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "93df5dd7-3157-41a0-abac-951ba7265357",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-09T21:09:01.382Z\",\n \"status\": 18554491,\n \"error\": \"deserunt dolor non ex\",\n \"exception\": \"dolor in deserunt\",\n \"message\": \"do esse\",\n \"total_time_taken_in_millis\": 56182116,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad sunt non\",\n \"page\": {\n  \"type\": \"sed magna id\",\n  \"size\": 77657382,\n  \"current\": -68362701,\n  \"has_next\": true,\n  \"item_total\": -83839551,\n  \"next_id\": \"voluptate ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0ec8a48f-0e21-46f1-bb17-36e6fce939b2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-09T21:09:01.382Z\",\n \"status\": 18554491,\n \"error\": \"deserunt dolor non ex\",\n \"exception\": \"dolor in deserunt\",\n \"message\": \"do esse\",\n \"total_time_taken_in_millis\": 56182116,\n \"http_status\": \"307 TEMPORARY_REDIRECT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ad sunt non\",\n \"page\": {\n  \"type\": \"sed magna id\",\n  \"size\": 77657382,\n  \"current\": -68362701,\n  \"has_next\": true,\n  \"item_total\": -83839551,\n  \"next_id\": \"voluptate ut in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.tiraz0.de"
    }
  ],
  "info": {
    "_postman_id": "dae23272-3be9-44fa-98e1-905d159c2e1a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
