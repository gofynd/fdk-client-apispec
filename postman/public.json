{
  "item": [
    {
      "id": "14f5deeb-3313-4657-bf27-dda1a7939b79",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "94c6e12d-0cc9-437e-bf23-8c6183583433",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0b2c9ada-0b0b-4045-a07c-cd334fdc6f43",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "70ba5a75-191b-4c16-bd74-a341cceb3dfb",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "c1261acb-fe7d-4fab-adaf-6827ce93c534",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "06b9163c-a8cd-469c-8f30-730124498cb7",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ad2424ce-39d0-4d04-991f-64978b0dfe36",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f2a2051c-2cf1-4f4b-ad74-3a041c8181cf",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "abbc3a4a-b060-4bab-ad30-acda875aa118",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ba25ef9d-268f-4fb2-96ca-82ab5e2155bf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 27252206,\n   \"event_name\": \"Lorem sint\",\n   \"event_type\": \"ut incididunt Excepteur minim ullamco\",\n   \"event_category\": \"sint laborum cupidatat\",\n   \"version\": \"mollit in\",\n   \"display_name\": \"Duis ipsum laboris\",\n   \"description\": \"amet ex tempor\",\n   \"created_on\": \"consectetur deserunt ut minim\"\n  },\n  {\n   \"id\": -92386925,\n   \"event_name\": \"pariatur reprehenderit ipsum voluptate\",\n   \"event_type\": \"tempor sit nostrud\",\n   \"event_category\": \"ut aute eu id Ut\",\n   \"version\": \"officia dolor anim esse\",\n   \"display_name\": \"magna ullamco adipisicing\",\n   \"description\": \"sit in id nulla quis\",\n   \"created_on\": \"in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "70c75e1b-3232-4eb9-a8be-cdd669fa4270",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "dbbeeeb3-5a4d-43e7-91c6-6f74cc38b75e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 31355346,\n   \"event_name\": \"dolore ut sit nulla fugiat\",\n   \"event_type\": \"cillum consectetur in ea culpa\",\n   \"event_category\": \"in in\",\n   \"version\": \"nisi ex do\",\n   \"display_name\": \"cillum\",\n   \"description\": \"commodo officia sint\",\n   \"created_on\": \"dolore est\"\n  },\n  {\n   \"id\": -94262460,\n   \"event_name\": \"re\",\n   \"event_type\": \"\",\n   \"event_category\": \"dolore\",\n   \"version\": \"dolore quis minim\",\n   \"display_name\": \"consequat ut in U\",\n   \"description\": \"cupidatat officia\",\n   \"created_on\": \"amet adipisicing\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "1643cd5f-6f91-4cbd-b18a-7a77921d6566",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1143b956-455a-4dfa-b3de-760dd3b3b290",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "72e9421b-067d-4ca8-912b-c6e39b515c4b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-07-03T20:44:42.384Z\",\n \"status\": -44913788,\n \"error\": \"amet ut\",\n \"exception\": \"exercitation labore ea amet\",\n \"message\": \"proident dolore\",\n \"total_time_taken_in_millis\": -67012015,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"company_id\": 63615760,\n  \"integration_data\": {},\n  \"company_name\": \"Duis quis\",\n  \"task_details\": {\n   \"type\": -98588971,\n   \"group_list\": [\n    {\n     \"text\": \"in tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"tempor non amet irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -76658316.30895767,\n   \"safe_stock\": 59409401,\n   \"period_threshold\": -95466806,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consequat anim dolore pariatur magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit Duis dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"cillum voluptate occaecat\",\n  \"alias\": \"ad commodo proident Excepteur eu\"\n },\n \"payload\": {\n  \"company_id\": -12261619,\n  \"integration_data\": {},\n  \"company_name\": \"non ut consectetur magna\",\n  \"task_details\": {\n   \"type\": 46831641,\n   \"group_list\": [\n    {\n     \"text\": \"labore culpa Ut deserunt in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud Ut incididunt pariatur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 48071020.79613492,\n   \"safe_stock\": 20860212,\n   \"period_threshold\": -69792280,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cupidatat eu nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sunt nostrud do dolor nisi\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non cillum Ut\",\n  \"alias\": \"dolore\"\n },\n \"trace_id\": \"id eu\",\n \"page\": {\n  \"type\": \"laborum Excepteur\",\n  \"size\": 60159045,\n  \"current\": -34358440,\n  \"has_next\": true,\n  \"item_total\": -89186876,\n  \"next_id\": \"incididunt dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "215cbe6c-5a7a-44c4-b52e-6eb327d5ed97",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-07-03T20:44:42.384Z\",\n \"status\": -44913788,\n \"error\": \"amet ut\",\n \"exception\": \"exercitation labore ea amet\",\n \"message\": \"proident dolore\",\n \"total_time_taken_in_millis\": -67012015,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"company_id\": 63615760,\n  \"integration_data\": {},\n  \"company_name\": \"Duis quis\",\n  \"task_details\": {\n   \"type\": -98588971,\n   \"group_list\": [\n    {\n     \"text\": \"in tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"tempor non amet irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -76658316.30895767,\n   \"safe_stock\": 59409401,\n   \"period_threshold\": -95466806,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consequat anim dolore pariatur magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit Duis dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"cillum voluptate occaecat\",\n  \"alias\": \"ad commodo proident Excepteur eu\"\n },\n \"payload\": {\n  \"company_id\": -12261619,\n  \"integration_data\": {},\n  \"company_name\": \"non ut consectetur magna\",\n  \"task_details\": {\n   \"type\": 46831641,\n   \"group_list\": [\n    {\n     \"text\": \"labore culpa Ut deserunt in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud Ut incididunt pariatur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 48071020.79613492,\n   \"safe_stock\": 20860212,\n   \"period_threshold\": -69792280,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cupidatat eu nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sunt nostrud do dolor nisi\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non cillum Ut\",\n  \"alias\": \"dolore\"\n },\n \"trace_id\": \"id eu\",\n \"page\": {\n  \"type\": \"laborum Excepteur\",\n  \"size\": 60159045,\n  \"current\": -34358440,\n  \"has_next\": true,\n  \"item_total\": -89186876,\n  \"next_id\": \"incididunt dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ed2c7fa3-44ec-45ad-b437-58f49054f7e3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-07-03T20:44:42.384Z\",\n \"status\": -44913788,\n \"error\": \"amet ut\",\n \"exception\": \"exercitation labore ea amet\",\n \"message\": \"proident dolore\",\n \"total_time_taken_in_millis\": -67012015,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"company_id\": 63615760,\n  \"integration_data\": {},\n  \"company_name\": \"Duis quis\",\n  \"task_details\": {\n   \"type\": -98588971,\n   \"group_list\": [\n    {\n     \"text\": \"in tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"tempor non amet irure\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -76658316.30895767,\n   \"safe_stock\": 59409401,\n   \"period_threshold\": -95466806,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"consequat anim dolore pariatur magna\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"elit Duis dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"cillum voluptate occaecat\",\n  \"alias\": \"ad commodo proident Excepteur eu\"\n },\n \"payload\": {\n  \"company_id\": -12261619,\n  \"integration_data\": {},\n  \"company_name\": \"non ut consectetur magna\",\n  \"task_details\": {\n   \"type\": 46831641,\n   \"group_list\": [\n    {\n     \"text\": \"labore culpa Ut deserunt in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud Ut incididunt pariatur\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 48071020.79613492,\n   \"safe_stock\": 20860212,\n   \"period_threshold\": -69792280,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"cupidatat eu nostrud\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sunt nostrud do dolor nisi\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"non cillum Ut\",\n  \"alias\": \"dolore\"\n },\n \"trace_id\": \"id eu\",\n \"page\": {\n  \"type\": \"laborum Excepteur\",\n  \"size\": 60159045,\n  \"current\": -34358440,\n  \"has_next\": true,\n  \"item_total\": -89186876,\n  \"next_id\": \"incididunt dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2157a77a-b31e-4cbc-9f0d-2f4e6bbdd900",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c5dd975d-c2d9-4522-89ab-537162fe4d93",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1955-07-16T20:59:28.604Z\",\n \"status\": 91668824,\n \"error\": \"consectetur\",\n \"exception\": \"labore sint et\",\n \"message\": \"elit sed irure magna\",\n \"total_time_taken_in_millis\": -50300235,\n \"http_status\": \"200 OK\",\n \"items\": [\n  {\n   \"company_id\": 84392567,\n   \"integration_data\": {},\n   \"company_name\": \"dolore sit tempor\",\n   \"task_details\": {\n    \"type\": -24166671,\n    \"group_list\": [\n     {\n      \"text\": \"ut voluptate dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu id Duis adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 11216853.2545764,\n    \"safe_stock\": -91102379,\n    \"period_threshold\": 59220727,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliqua ullamco \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt laboris ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"labore\",\n   \"alias\": \"ex cillum\"\n  },\n  {\n   \"company_id\": 90321171,\n   \"integration_data\": {},\n   \"company_name\": \"in nisi et amet\",\n   \"task_details\": {\n    \"type\": 43748723,\n    \"group_list\": [\n     {\n      \"text\": \"veniam commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt esse enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -88286863.40686338,\n    \"safe_stock\": -2265152,\n    \"period_threshold\": 58465582,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation ad in nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod dolore quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"reprehenderit eu laboris dolore\",\n   \"alias\": \"anim laboris\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -84183895,\n   \"integration_data\": {},\n   \"company_name\": \"eu consectetur consequat officia\",\n   \"task_details\": {\n    \"type\": -65803762,\n    \"group_list\": [\n     {\n      \"text\": \"in Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum occaecat mollit consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48072563.64538905,\n    \"safe_stock\": -84588039,\n    \"period_threshold\": 92179959,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"voluptate nisi\",\n   \"alias\": \"nulla in magna\"\n  },\n  {\n   \"company_id\": -85176293,\n   \"integration_data\": {},\n   \"company_name\": \"et sed qui nulla veniam\",\n   \"task_details\": {\n    \"type\": 82754461,\n    \"group_list\": [\n     {\n      \"text\": \"in aute ut dolor Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate irure sint aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -18974935.336093515,\n    \"safe_stock\": 55629672,\n    \"period_threshold\": -41148278,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et irure esse culpa sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo\",\n   \"alias\": \"elit in nostrud nulla mollit\"\n  }\n ],\n \"trace_id\": \"ut\",\n \"page\": {\n  \"type\": \"dolore\",\n  \"size\": -67919934,\n  \"current\": -3447952,\n  \"has_next\": true,\n  \"item_total\": -69822866,\n  \"next_id\": \"consequat ad eu dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ea552fc1-b63b-4ef0-b907-45b6e59cc149",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-05-02T02:04:08.438Z\",\n \"status\": 82629135,\n \"error\": \"Excepteur enim\",\n \"exception\": \"non Lorem\",\n \"message\": \"cillum consequat\",\n \"total_time_taken_in_millis\": 47792636,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": [\n  {\n   \"company_id\": -57690940,\n   \"integration_data\": {},\n   \"company_name\": \"in nulla fugiat culpa sit\",\n   \"task_details\": {\n    \"type\": 89844905,\n    \"group_list\": [\n     {\n      \"text\": \"do et qui commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud elit Excepteur sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 81007266.37483633,\n    \"safe_stock\": -15195474,\n    \"period_threshold\": 16828218,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi sunt Excepteur cupidatat veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo fugiat\",\n   \"alias\": \"Excepteur commodo officia\"\n  },\n  {\n   \"company_id\": -26823887,\n   \"integration_data\": {},\n   \"company_name\": \"in in\",\n   \"task_details\": {\n    \"type\": -69183284,\n    \"group_list\": [\n     {\n      \"text\": \"nulla non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt labore adipisicing qui in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 72453594.84554604,\n    \"safe_stock\": -84522548,\n    \"period_threshold\": 9388106,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu sed ex fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in elit eiusmod\",\n   \"alias\": \"nisi dolore proident\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -55550701,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum sit\",\n   \"task_details\": {\n    \"type\": 82845506,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate esse tempor cillum elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat laborum Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -23937308.906790912,\n    \"safe_stock\": 29296641,\n    \"period_threshold\": -22933667,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit pariatur ipsum labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt nulla\",\n   \"alias\": \"aliqua do pariatur sunt\"\n  },\n  {\n   \"company_id\": 38296852,\n   \"integration_data\": {},\n   \"company_name\": \"culpa adipisici\",\n   \"task_details\": {\n    \"type\": -41566758,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem magna sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor lab\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -37818652.73440426,\n    \"safe_stock\": -51256193,\n    \"period_threshold\": -93355000,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui elit culpa\",\n   \"alias\": \"consectetur do\"\n  }\n ],\n \"trace_id\": \"deserunt amet dolore\",\n \"page\": {\n  \"type\": \"sint veniam ullamco cillum minim\",\n  \"size\": -39066170,\n  \"current\": 24999649,\n  \"has_next\": false,\n  \"item_total\": 56569729,\n  \"next_id\": \"reprehenderit proident aliquip amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "46a3623b-f86c-4fd9-9338-dd5f07894131",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-05-02T02:04:08.438Z\",\n \"status\": 82629135,\n \"error\": \"Excepteur enim\",\n \"exception\": \"non Lorem\",\n \"message\": \"cillum consequat\",\n \"total_time_taken_in_millis\": 47792636,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": [\n  {\n   \"company_id\": -57690940,\n   \"integration_data\": {},\n   \"company_name\": \"in nulla fugiat culpa sit\",\n   \"task_details\": {\n    \"type\": 89844905,\n    \"group_list\": [\n     {\n      \"text\": \"do et qui commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud elit Excepteur sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 81007266.37483633,\n    \"safe_stock\": -15195474,\n    \"period_threshold\": 16828218,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi sunt Excepteur cupidatat veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laboris ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo fugiat\",\n   \"alias\": \"Excepteur commodo officia\"\n  },\n  {\n   \"company_id\": -26823887,\n   \"integration_data\": {},\n   \"company_name\": \"in in\",\n   \"task_details\": {\n    \"type\": -69183284,\n    \"group_list\": [\n     {\n      \"text\": \"nulla non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt labore adipisicing qui in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 72453594.84554604,\n    \"safe_stock\": -84522548,\n    \"period_threshold\": 9388106,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cupidatat anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu sed ex fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in elit eiusmod\",\n   \"alias\": \"nisi dolore proident\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -55550701,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum sit\",\n   \"task_details\": {\n    \"type\": 82845506,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate esse tempor cillum elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat laborum Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -23937308.906790912,\n    \"safe_stock\": 29296641,\n    \"period_threshold\": -22933667,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"tempor sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit pariatur ipsum labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt nulla\",\n   \"alias\": \"aliqua do pariatur sunt\"\n  },\n  {\n   \"company_id\": 38296852,\n   \"integration_data\": {},\n   \"company_name\": \"culpa adipisici\",\n   \"task_details\": {\n    \"type\": -41566758,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem magna sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor lab\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -37818652.73440426,\n    \"safe_stock\": -51256193,\n    \"period_threshold\": -93355000,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui elit culpa\",\n   \"alias\": \"consectetur do\"\n  }\n ],\n \"trace_id\": \"deserunt amet dolore\",\n \"page\": {\n  \"type\": \"sint veniam ullamco cillum minim\",\n  \"size\": -39066170,\n  \"current\": 24999649,\n  \"has_next\": false,\n  \"item_total\": 56569729,\n  \"next_id\": \"reprehenderit proident aliquip amet\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ce5c8783-383f-435d-a59a-c8d94399fd7d",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9eade244-ae6d-4bb3-aef6-b326256e1b34",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-07-22T04:38:02.782Z\",\n \"status\": -17170314,\n \"error\": \"reprehenderit\",\n \"exception\": \"fugiat do\",\n \"message\": \"consequat amet in Lorem\",\n \"total_time_taken_in_millis\": -38538010,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliquip ex elit deserunt\",\n \"page\": {\n  \"type\": \"Duis ex\",\n  \"size\": -18696204,\n  \"current\": 97077478,\n  \"has_next\": false,\n  \"item_total\": -94836519,\n  \"next_id\": \"minim culpa dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1ea453c1-28d0-4a8e-bf5d-29652d7db543",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-07-22T04:38:02.782Z\",\n \"status\": -17170314,\n \"error\": \"reprehenderit\",\n \"exception\": \"fugiat do\",\n \"message\": \"consequat amet in Lorem\",\n \"total_time_taken_in_millis\": -38538010,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliquip ex elit deserunt\",\n \"page\": {\n  \"type\": \"Duis ex\",\n  \"size\": -18696204,\n  \"current\": 97077478,\n  \"has_next\": false,\n  \"item_total\": -94836519,\n  \"next_id\": \"minim culpa dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6996f85e-5870-468c-9fbc-9fae91f455f5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1966-07-22T04:38:02.782Z\",\n \"status\": -17170314,\n \"error\": \"reprehenderit\",\n \"exception\": \"fugiat do\",\n \"message\": \"consequat amet in Lorem\",\n \"total_time_taken_in_millis\": -38538010,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"aliquip ex elit deserunt\",\n \"page\": {\n  \"type\": \"Duis ex\",\n  \"size\": -18696204,\n  \"current\": 97077478,\n  \"has_next\": false,\n  \"item_total\": -94836519,\n  \"next_id\": \"minim culpa dolore\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "4f6531f2-50e0-4764-b6d8-fa334164426b",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "e05beb2a-aa3e-466c-86cd-454d528324ff",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-07T19:03:00.232Z\",\n \"status\": -57373235,\n \"error\": \"et do dolor velit\",\n \"exception\": \"in elit velit ea\",\n \"message\": \"officia ut aute magna\",\n \"total_time_taken_in_millis\": 20925631,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis consequat Ut non\",\n \"page\": {\n  \"type\": \"nisi irure\",\n  \"size\": 18389170,\n  \"current\": -58079888,\n  \"has_next\": true,\n  \"item_total\": 3924106,\n  \"next_id\": \"sint e\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c109139c-468e-42c8-bdeb-b1bf479d7a9b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-07T19:03:00.232Z\",\n \"status\": -57373235,\n \"error\": \"et do dolor velit\",\n \"exception\": \"in elit velit ea\",\n \"message\": \"officia ut aute magna\",\n \"total_time_taken_in_millis\": 20925631,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis consequat Ut non\",\n \"page\": {\n  \"type\": \"nisi irure\",\n  \"size\": 18389170,\n  \"current\": -58079888,\n  \"has_next\": true,\n  \"item_total\": 3924106,\n  \"next_id\": \"sint e\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26e003c4-175f-42d0-b010-0aec82e4c27b",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-07T19:03:00.232Z\",\n \"status\": -57373235,\n \"error\": \"et do dolor velit\",\n \"exception\": \"in elit velit ea\",\n \"message\": \"officia ut aute magna\",\n \"total_time_taken_in_millis\": 20925631,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis consequat Ut non\",\n \"page\": {\n  \"type\": \"nisi irure\",\n  \"size\": 18389170,\n  \"current\": -58079888,\n  \"has_next\": true,\n  \"item_total\": 3924106,\n  \"next_id\": \"sint e\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c410dfc7-a40c-4606-bc41-27d3978410c7",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-07T19:03:00.232Z\",\n \"status\": -57373235,\n \"error\": \"et do dolor velit\",\n \"exception\": \"in elit velit ea\",\n \"message\": \"officia ut aute magna\",\n \"total_time_taken_in_millis\": 20925631,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis consequat Ut non\",\n \"page\": {\n  \"type\": \"nisi irure\",\n  \"size\": 18389170,\n  \"current\": -58079888,\n  \"has_next\": true,\n  \"item_total\": 3924106,\n  \"next_id\": \"sint e\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bb52d9a7-ab12-4508-aa99-314d9b354ec8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-02-07T19:03:00.232Z\",\n \"status\": -57373235,\n \"error\": \"et do dolor velit\",\n \"exception\": \"in elit velit ea\",\n \"message\": \"officia ut aute magna\",\n \"total_time_taken_in_millis\": 20925631,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"Duis consequat Ut non\",\n \"page\": {\n  \"type\": \"nisi irure\",\n  \"size\": 18389170,\n  \"current\": -58079888,\n  \"has_next\": true,\n  \"item_total\": 3924106,\n  \"next_id\": \"sint e\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jiomartpartners.com"
    }
  ],
  "info": {
    "_postman_id": "0b992149-da41-472f-8ace-0c0085707b59",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
