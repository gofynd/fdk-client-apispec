{
  "item": [
    {
      "id": "a33c07ce-7658-45f1-9e33-82ebf14a4010",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e8555eb9-2a6f-4ee8-84e6-e572e38088bc",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6aad3782-9d6f-4202-b46a-399c310fbc64",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat commodo",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "21b003fa-7364-4c6c-a0e7-56b5572016c8",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat commodo",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "c9460d60-9de8-4216-ab80-3e7983c9c729",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "occaecat commodo",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e72b4caf-6ad0-4850-848e-5b76786218fc",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "defb4dca-0b8f-4cd4-92ec-8123770af3fc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "a4258f91-b46c-48d1-a5f3-5c08215c9e0d",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5d8d79fe-e22e-421d-baee-a2c94ba3a93b",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a8b52d28-6fac-4ec0-b55b-9a50309061fe",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 68679916,\n   \"event_name\": \"voluptate esse dolore veniam\",\n   \"event_type\": \"magna ad velit incididunt sed\",\n   \"event_category\": \"officia quis sit non\",\n   \"version\": \"ad ipsum non\",\n   \"display_name\": \"id ipsum cillum\",\n   \"description\": \"culpa consequat nisi\",\n   \"created_on\": \"laborum ad mollit\"\n  },\n  {\n   \"id\": 36095768,\n   \"event_name\": \"officia sed quis ex\",\n   \"event_type\": \"officia enim\",\n   \"event_category\": \"deserunt sint\",\n   \"version\": \"officia voluptate\",\n   \"display_name\": \"magna Duis dolor cupidatat\",\n   \"description\": \"labore Duis\",\n   \"created_on\": \"labore veniam\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bdce948a-8c10-4ffc-a89c-6759a75e3ddd",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "9de60919-d60c-4ca8-8e16-7a60b742ceec",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -59240663,\n   \"event_name\": \"cupidatat\",\n   \"event_type\": \"nisi\",\n   \"event_category\": \"officia ex\",\n   \"version\": \"ut ullamco null\",\n   \"display_name\": \"dolore consequat la\",\n   \"description\": \"irure sed id\",\n   \"created_on\": \"ad non\"\n  },\n  {\n   \"id\": -45028529,\n   \"event_name\": \"et ex non consequat\",\n   \"event_type\": \"eu\",\n   \"event_category\": \"non eiusmod sit sed\",\n   \"version\": \"deserunt id dolore elit\",\n   \"display_name\": \"in adipisicing minim est aliquip\",\n   \"description\": \"dolor nulla\",\n   \"created_on\": \"est nostrud Duis\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c3de51dd-e38c-495d-8ba7-7999ee01e100",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "de115a5a-d875-4ce1-8546-23af93ad1682",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2d774c94-29dd-42d0-95c0-97f7648c5d3c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-05-30T17:57:17.971Z\",\n \"status\": -26582483,\n \"error\": \"irure commodo\",\n \"exception\": \"dolore in veniam\",\n \"message\": \"velit non fugiat\",\n \"total_time_taken_in_millis\": 74248686,\n \"http_status\": \"504 GATEWAY_TIMEOUT\",\n \"items\": [\n  {\n   \"company_id\": 53698106,\n   \"integration_data\": {},\n   \"company_name\": \"dolor labore ipsum ea aute\",\n   \"task_details\": {\n    \"type\": -29266087,\n    \"group_list\": [\n     {\n      \"text\": \"sunt voluptate cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis es\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -86528914.7920461,\n    \"safe_stock\": -29881972,\n    \"period_threshold\": 98129736,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat sint\",\n   \"alias\": \"aute sint tempor\"\n  },\n  {\n   \"company_id\": 89570241,\n   \"integration_data\": {},\n   \"company_name\": \"eiusmod consequat ipsum\",\n   \"task_details\": {\n    \"type\": 95917059,\n    \"group_list\": [\n     {\n      \"text\": \"ad anim nisi ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 89044548.62843055,\n    \"safe_stock\": -55923186,\n    \"period_threshold\": 54767553,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis incididunt fugiat qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat et laborum qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing do\",\n   \"alias\": \"esse est aliqua mollit dolore\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 76894078,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt eiusmod ut\",\n   \"task_details\": {\n    \"type\": 4809513,\n    \"group_list\": [\n     {\n      \"text\": \"sint tempor voluptate adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet deserunt mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40867821.0837202,\n    \"safe_stock\": 56362487,\n    \"period_threshold\": 20137080,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"irure qui consequat pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa ipsum in in laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pari\",\n   \"alias\": \"eu velit ea officia\"\n  },\n  {\n   \"company_id\": -11564970,\n   \"integration_data\": {},\n   \"company_name\": \"dolore amet non\",\n   \"task_details\": {\n    \"type\": -27268400,\n    \"group_list\": [\n     {\n      \"text\": \"in ut velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit est officia Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 6848520.124884993,\n    \"safe_stock\": -1843684,\n    \"period_threshold\": 75316722,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"proident eu nulla\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit aliq\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip reprehenderit ut\",\n   \"alias\": \"cillum\"\n  }\n ],\n \"trace_id\": \"eu amet sed\",\n \"page\": {\n  \"type\": \"id consequat ipsum tempor\",\n  \"size\": -88500774,\n  \"current\": 46337028,\n  \"has_next\": true,\n  \"item_total\": -46544893,\n  \"next_id\": \"sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "25734c28-98ab-4906-917a-4dcdda5b692f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-01-03T06:41:37.486Z\",\n \"status\": -56335853,\n \"error\": \"ullamco officia cupidatat nisi fugiat\",\n \"exception\": \"exercita\",\n \"message\": \"elit aute\",\n \"total_time_taken_in_millis\": 64601075,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": 87431480,\n   \"integration_data\": {},\n   \"company_name\": \"laborum quis Duis officia\",\n   \"task_details\": {\n    \"type\": 17051402,\n    \"group_list\": [\n     {\n      \"text\": \"laboris esse cillum est consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim sit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -75322746.12788674,\n    \"safe_stock\": 99860568,\n    \"period_threshold\": -24481394,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"d\",\n   \"alias\": \"sunt ut anim non veni\"\n  },\n  {\n   \"company_id\": 87911575,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip\",\n   \"task_details\": {\n    \"type\": 79835934,\n    \"group_list\": [\n     {\n      \"text\": \"in labore nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eu proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -86724848.56063995,\n    \"safe_stock\": 57512209,\n    \"period_threshold\": -81494765,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit aute eiusmod sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do incididunt aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim qui Excepteur culpa\",\n   \"alias\": \"eu sed\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -85894325,\n   \"integration_data\": {},\n   \"company_name\": \"officia veniam amet\",\n   \"task_details\": {\n    \"type\": 23850102,\n    \"group_list\": [\n     {\n      \"text\": \"consequat tempor sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea ut cup\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78453343.83677503,\n    \"safe_stock\": 90750364,\n    \"period_threshold\": -94145755,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip non id adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim culpa consequat laborum exercitation\",\n   \"alias\": \"conse\"\n  },\n  {\n   \"company_id\": 63167632,\n   \"integration_data\": {},\n   \"company_name\": \"sint est elit sit\",\n   \"task_details\": {\n    \"type\": -87141791,\n    \"group_list\": [\n     {\n      \"text\": \"ipsum reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt sit Duis nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 4663400.589012355,\n    \"safe_stock\": 31128829,\n    \"period_threshold\": -96545853,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat eu voluptate non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea in \",\n   \"alias\": \"sed ex enim ut consequat\"\n  }\n ],\n \"trace_id\": \"anim\",\n \"page\": {\n  \"type\": \"irure in minim quis\",\n  \"size\": -30409845,\n  \"current\": 42301786,\n  \"has_next\": true,\n  \"item_total\": -48405044,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "62d09cdc-d71c-4b46-8c6e-be392399ca7b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-01-03T06:41:37.486Z\",\n \"status\": -56335853,\n \"error\": \"ullamco officia cupidatat nisi fugiat\",\n \"exception\": \"exercita\",\n \"message\": \"elit aute\",\n \"total_time_taken_in_millis\": 64601075,\n \"http_status\": \"308 PERMANENT_REDIRECT\",\n \"items\": [\n  {\n   \"company_id\": 87431480,\n   \"integration_data\": {},\n   \"company_name\": \"laborum quis Duis officia\",\n   \"task_details\": {\n    \"type\": 17051402,\n    \"group_list\": [\n     {\n      \"text\": \"laboris esse cillum est consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"enim sit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -75322746.12788674,\n    \"safe_stock\": 99860568,\n    \"period_threshold\": -24481394,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"d\",\n   \"alias\": \"sunt ut anim non veni\"\n  },\n  {\n   \"company_id\": 87911575,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip\",\n   \"task_details\": {\n    \"type\": 79835934,\n    \"group_list\": [\n     {\n      \"text\": \"in labore nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur eu proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -86724848.56063995,\n    \"safe_stock\": 57512209,\n    \"period_threshold\": -81494765,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit aute eiusmod sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do incididunt aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim qui Excepteur culpa\",\n   \"alias\": \"eu sed\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -85894325,\n   \"integration_data\": {},\n   \"company_name\": \"officia veniam amet\",\n   \"task_details\": {\n    \"type\": 23850102,\n    \"group_list\": [\n     {\n      \"text\": \"consequat tempor sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea ut cup\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78453343.83677503,\n    \"safe_stock\": 90750364,\n    \"period_threshold\": -94145755,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip non id adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim culpa consequat laborum exercitation\",\n   \"alias\": \"conse\"\n  },\n  {\n   \"company_id\": 63167632,\n   \"integration_data\": {},\n   \"company_name\": \"sint est elit sit\",\n   \"task_details\": {\n    \"type\": -87141791,\n    \"group_list\": [\n     {\n      \"text\": \"ipsum reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sunt sit Duis nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 4663400.589012355,\n    \"safe_stock\": 31128829,\n    \"period_threshold\": -96545853,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"do anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat eu voluptate non\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea in \",\n   \"alias\": \"sed ex enim ut consequat\"\n  }\n ],\n \"trace_id\": \"anim\",\n \"page\": {\n  \"type\": \"irure in minim quis\",\n  \"size\": -30409845,\n  \"current\": 42301786,\n  \"has_next\": true,\n  \"item_total\": -48405044,\n  \"next_id\": \"dolor\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d329865b-06df-4398-b7b5-c371c1d56274",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c9327f6d-c30f-4949-a930-c0bbfba49d9c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-08-06T16:31:22.225Z\",\n \"status\": 51124251,\n \"error\": \"aliquip aute dolor Duis\",\n \"exception\": \"aliqua irure labore\",\n \"message\": \"fugiat i\",\n \"total_time_taken_in_millis\": -39663686,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo adipisicing\",\n \"page\": {\n  \"type\": \"eiusmod c\",\n  \"size\": -96925711,\n  \"current\": 92399183,\n  \"has_next\": false,\n  \"item_total\": -41168012,\n  \"next_id\": \"in adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e919d82a-b486-4d0e-81b6-878738e95d68",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-08-06T16:31:22.225Z\",\n \"status\": 51124251,\n \"error\": \"aliquip aute dolor Duis\",\n \"exception\": \"aliqua irure labore\",\n \"message\": \"fugiat i\",\n \"total_time_taken_in_millis\": -39663686,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo adipisicing\",\n \"page\": {\n  \"type\": \"eiusmod c\",\n  \"size\": -96925711,\n  \"current\": 92399183,\n  \"has_next\": false,\n  \"item_total\": -41168012,\n  \"next_id\": \"in adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "26533d44-4944-4e8f-9c1c-b03e1a04fdff",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-08-06T16:31:22.225Z\",\n \"status\": 51124251,\n \"error\": \"aliquip aute dolor Duis\",\n \"exception\": \"aliqua irure labore\",\n \"message\": \"fugiat i\",\n \"total_time_taken_in_millis\": -39663686,\n \"http_status\": \"424 FAILED_DEPENDENCY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo adipisicing\",\n \"page\": {\n  \"type\": \"eiusmod c\",\n  \"size\": -96925711,\n  \"current\": 92399183,\n  \"has_next\": false,\n  \"item_total\": -41168012,\n  \"next_id\": \"in adipisicing\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cd95e6da-f797-4246-8783-c7ecd1e31be7",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "ff94bc42-b9c6-4b17-baf6-d6d004c11327",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-01T04:32:56.389Z\",\n \"status\": -86113205,\n \"error\": \"incididunt veniam conse\",\n \"exception\": \"non dolore pariatur id ut\",\n \"message\": \"mollit fugiat\",\n \"total_time_taken_in_millis\": -10359392,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ipsum Lorem\",\n \"page\": {\n  \"type\": \"elit ullamco enim irure\",\n  \"size\": 68949207,\n  \"current\": 5511109,\n  \"has_next\": false,\n  \"item_total\": -86435326,\n  \"next_id\": \"esse do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5f5d9d33-2a7d-49b7-978b-a01616146400",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-01T04:32:56.389Z\",\n \"status\": -86113205,\n \"error\": \"incididunt veniam conse\",\n \"exception\": \"non dolore pariatur id ut\",\n \"message\": \"mollit fugiat\",\n \"total_time_taken_in_millis\": -10359392,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ipsum Lorem\",\n \"page\": {\n  \"type\": \"elit ullamco enim irure\",\n  \"size\": 68949207,\n  \"current\": 5511109,\n  \"has_next\": false,\n  \"item_total\": -86435326,\n  \"next_id\": \"esse do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "72acb0cb-f5e0-4c86-8c04-516d1bf0acc7",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-01T04:32:56.389Z\",\n \"status\": -86113205,\n \"error\": \"incididunt veniam conse\",\n \"exception\": \"non dolore pariatur id ut\",\n \"message\": \"mollit fugiat\",\n \"total_time_taken_in_millis\": -10359392,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ipsum Lorem\",\n \"page\": {\n  \"type\": \"elit ullamco enim irure\",\n  \"size\": 68949207,\n  \"current\": 5511109,\n  \"has_next\": false,\n  \"item_total\": -86435326,\n  \"next_id\": \"esse do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "de4617e9-11c5-442c-9a84-cbff0697a987",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-01T04:32:56.389Z\",\n \"status\": -86113205,\n \"error\": \"incididunt veniam conse\",\n \"exception\": \"non dolore pariatur id ut\",\n \"message\": \"mollit fugiat\",\n \"total_time_taken_in_millis\": -10359392,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ipsum Lorem\",\n \"page\": {\n  \"type\": \"elit ullamco enim irure\",\n  \"size\": 68949207,\n  \"current\": 5511109,\n  \"has_next\": false,\n  \"item_total\": -86435326,\n  \"next_id\": \"esse do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3cc412be-e044-4e90-8ffe-6d1b0e42dca6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-03-01T04:32:56.389Z\",\n \"status\": -86113205,\n \"error\": \"incididunt veniam conse\",\n \"exception\": \"non dolore pariatur id ut\",\n \"message\": \"mollit fugiat\",\n \"total_time_taken_in_millis\": -10359392,\n \"http_status\": \"300 MULTIPLE_CHOICES\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ipsum Lorem\",\n \"page\": {\n  \"type\": \"elit ullamco enim irure\",\n  \"size\": 68949207,\n  \"current\": 5511109,\n  \"has_next\": false,\n  \"item_total\": -86435326,\n  \"next_id\": \"esse do\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "c25323a4-0d62-42b3-8f4e-ccea55568a5f",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
