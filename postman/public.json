{
  "item": [
    {
      "id": "1b40aee5-b026-40c1-a114-495220397e9e",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bfc593e6-5fab-4c96-8683-181bfee78f6a",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "083aff39-0923-40b0-8023-e5916bd74a15",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sint",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "41dfd2b2-93ab-4094-b48a-7ff78c91a2f7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sint",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9e6153c4-38bf-4550-a464-80ed989ac046",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "sint",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d2463816-3df0-433f-b1de-ecfbc392b79f",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "26f1fcbf-0504-4cfe-884a-d2706be7cf75",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c1a98525-9a98-4d67-9c5b-693ce2081892",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "65cf1335-feac-4ba7-9757-c0ac6ec158ca",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "481c14a4-9545-4334-ba13-cb88751adf63",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -62103566,\n   \"event_name\": \"ad occaecat magna\",\n   \"event_type\": \"esse\",\n   \"event_category\": \"do eiusmod in dolore\",\n   \"version\": \"sunt pariatur ex commodo\",\n   \"display_name\": \"laboris\",\n   \"description\": \"dolor sint\",\n   \"created_on\": \"elit\"\n  },\n  {\n   \"id\": 72693313,\n   \"event_name\": \"cupidatat ipsum commodo voluptate non\",\n   \"event_type\": \"non enim sed\",\n   \"event_category\": \"tempor labore in\",\n   \"version\": \"m\",\n   \"display_name\": \"et ut eiusmod\",\n   \"description\": \"amet sit\",\n   \"created_on\": \"exercitation sed dolore\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5fdb7e94-82f8-4f9d-805d-749caab837e4",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "01b533dd-6897-4749-93f0-b396e5294172",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 85210383,\n   \"event_name\": \"proident deserunt minim quis\",\n   \"event_type\": \"ut id in\",\n   \"event_category\": \"amet irure adipisicing commodo\",\n   \"version\": \"elit nostrud id ad dolore\",\n   \"display_name\": \"nisi sunt dolore\",\n   \"description\": \"a\",\n   \"created_on\": \"pariatur\"\n  },\n  {\n   \"id\": -74600304,\n   \"event_name\": \"mollit incididunt\",\n   \"event_type\": \"officia reprehenderit et\",\n   \"event_category\": \"voluptate qu\",\n   \"version\": \"elit amet\",\n   \"display_name\": \"dolor occaecat\",\n   \"description\": \"ut laborum irure\",\n   \"created_on\": \"sed aliquip in\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3598deb6-1bbf-45a9-a0c8-1be9d36a643b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "66326189-da57-4d48-b23d-a8e555ebe169",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "802f7856-e226-484c-a800-f927f40e3348",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1958-06-15T14:04:27.553Z\",\n \"status\": 24406123,\n \"error\": \"in laboris\",\n \"exception\": \"pariatur anim in\",\n \"message\": \"Duis est proident\",\n \"total_time_taken_in_millis\": 46178581,\n \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -64312394,\n   \"integration_data\": {},\n   \"company_name\": \"sit Excepteur\",\n   \"task_details\": {\n    \"type\": -78323651,\n    \"group_list\": [\n     {\n      \"text\": \"veniam labore magna ipsum dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore magna voluptate proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -91434612.15142326,\n    \"safe_stock\": 19058824,\n    \"period_threshold\": -68882982,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco sint ex sunt cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa\",\n   \"alias\": \"ea nisi ut Excepteur dolore\"\n  },\n  {\n   \"company_id\": -99536248,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat irure Duis\",\n   \"task_details\": {\n    \"type\": 43396629,\n    \"group_list\": [\n     {\n      \"text\": \"ullamco adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 85827615.83635366,\n    \"safe_stock\": 30343657,\n    \"period_threshold\": 35900317,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ea ullamco pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse labore officia sit elit\",\n   \"alias\": \"ullamco aliquip et\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -47938683,\n   \"integration_data\": {},\n   \"company_name\": \"ut cillum\",\n   \"task_details\": {\n    \"type\": -61238415,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate ea dolor aute eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure eiusmod tempor adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 57341709.33780432,\n    \"safe_stock\": -95103937,\n    \"period_threshold\": -53158435,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt eu do\",\n   \"alias\": \"velit fugiat\"\n  },\n  {\n   \"company_id\": -9730223,\n   \"integration_data\": {},\n   \"company_name\": \"i\",\n   \"task_details\": {\n    \"type\": -16946787,\n    \"group_list\": [\n     {\n      \"text\": \"qui incididunt deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore eiusmod id amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 1912867.6584198326,\n    \"safe_stock\": -45516612,\n    \"period_threshold\": 7150012,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sint qui ullamco esse ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id reprehenderit Lorem pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea nostrud\",\n   \"alias\": \"qui exercitation proident sed\"\n  }\n ],\n \"trace_id\": \"dolore pariatur occaecat\",\n \"page\": {\n  \"type\": \"labore\",\n  \"size\": 21467091,\n  \"current\": 66670369,\n  \"has_next\": true,\n  \"item_total\": 2218832,\n  \"next_id\": \"consectetur et occaecat c\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0d30434e-01c1-447b-94f2-e63d348e572a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-04-11T14:09:54.663Z\",\n \"status\": 55953661,\n \"error\": \"in ea ut dolor\",\n \"exception\": \"irure\",\n \"message\": \"incididunt irure\",\n \"total_time_taken_in_millis\": 45191455,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": [\n  {\n   \"company_id\": -2287021,\n   \"integration_data\": {},\n   \"company_name\": \"ut consequat\",\n   \"task_details\": {\n    \"type\": -7981074,\n    \"group_list\": [\n     {\n      \"text\": \"culpa dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ni\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19970833.73168093,\n    \"safe_stock\": -44593482,\n    \"period_threshold\": 24516915,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo in exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet voluptate exercitation Excepteur aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim ut com\",\n   \"alias\": \"labore aliqua officia Excepteur sunt\"\n  },\n  {\n   \"company_id\": 27134995,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation\",\n   \"task_details\": {\n    \"type\": 73456732,\n    \"group_list\": [\n     {\n      \"text\": \"sint ipsum aliquip voluptate ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id esse Ut culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82535150.22084114,\n    \"safe_stock\": -22857281,\n    \"period_threshold\": -21440008,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore aliquip do laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum voluptate ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud quis dolore\",\n   \"alias\": \"id\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -28463852,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur culpa ex Lorem\",\n   \"task_details\": {\n    \"type\": 4256815,\n    \"group_list\": [\n     {\n      \"text\": \"non Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna incididunt ex laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14864348.561934814,\n    \"safe_stock\": 5706500,\n    \"period_threshold\": -77884118,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit sit amet qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod elit veniam\",\n   \"alias\": \"dolor voluptate sed incididunt\"\n  },\n  {\n   \"company_id\": 81578974,\n   \"integration_data\": {},\n   \"company_name\": \"in cillum minim\",\n   \"task_details\": {\n    \"type\": 7279064,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat irure in officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -62183076.236226276,\n    \"safe_stock\": -68157861,\n    \"period_threshold\": 53755697,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et esse mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi do est\",\n   \"alias\": \"reprehenderit sed ut\"\n  }\n ],\n \"trace_id\": \"quis aute sed Excepteur\",\n \"page\": {\n  \"type\": \"nisi magna ipsum elit\",\n  \"size\": 48931695,\n  \"current\": 56929976,\n  \"has_next\": true,\n  \"item_total\": 27701858,\n  \"next_id\": \"magna nisi Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a83547eb-bd79-42c6-8535-0ca287b38f67",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1979-04-11T14:09:54.663Z\",\n \"status\": 55953661,\n \"error\": \"in ea ut dolor\",\n \"exception\": \"irure\",\n \"message\": \"incididunt irure\",\n \"total_time_taken_in_millis\": 45191455,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": [\n  {\n   \"company_id\": -2287021,\n   \"integration_data\": {},\n   \"company_name\": \"ut consequat\",\n   \"task_details\": {\n    \"type\": -7981074,\n    \"group_list\": [\n     {\n      \"text\": \"culpa dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in ni\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19970833.73168093,\n    \"safe_stock\": -44593482,\n    \"period_threshold\": 24516915,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo in exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet voluptate exercitation Excepteur aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim ut com\",\n   \"alias\": \"labore aliqua officia Excepteur sunt\"\n  },\n  {\n   \"company_id\": 27134995,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation\",\n   \"task_details\": {\n    \"type\": 73456732,\n    \"group_list\": [\n     {\n      \"text\": \"sint ipsum aliquip voluptate ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id esse Ut culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 82535150.22084114,\n    \"safe_stock\": -22857281,\n    \"period_threshold\": -21440008,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore aliquip do laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum voluptate ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud quis dolore\",\n   \"alias\": \"id\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -28463852,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur culpa ex Lorem\",\n   \"task_details\": {\n    \"type\": 4256815,\n    \"group_list\": [\n     {\n      \"text\": \"non Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna incididunt ex laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14864348.561934814,\n    \"safe_stock\": 5706500,\n    \"period_threshold\": -77884118,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit sit amet qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod elit veniam\",\n   \"alias\": \"dolor voluptate sed incididunt\"\n  },\n  {\n   \"company_id\": 81578974,\n   \"integration_data\": {},\n   \"company_name\": \"in cillum minim\",\n   \"task_details\": {\n    \"type\": 7279064,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat irure in officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -62183076.236226276,\n    \"safe_stock\": -68157861,\n    \"period_threshold\": 53755697,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et esse mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nisi do est\",\n   \"alias\": \"reprehenderit sed ut\"\n  }\n ],\n \"trace_id\": \"quis aute sed Excepteur\",\n \"page\": {\n  \"type\": \"nisi magna ipsum elit\",\n  \"size\": 48931695,\n  \"current\": 56929976,\n  \"has_next\": true,\n  \"item_total\": 27701858,\n  \"next_id\": \"magna nisi Duis\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0ff80ce2-755d-47a1-a350-c96f2c9b167e",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2a51cc61-b1fe-4e39-98c9-74b25883e033",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-03-02T20:55:33.664Z\",\n \"status\": 14627125,\n \"error\": \"id\",\n \"exception\": \"fugiat incididunt\",\n \"message\": \"dolor \",\n \"total_time_taken_in_millis\": 29105964,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"enim qui\",\n \"page\": {\n  \"type\": \"officia tempor aute reprehenderit\",\n  \"size\": 36123997,\n  \"current\": 66102673,\n  \"has_next\": false,\n  \"item_total\": 53680232,\n  \"next_id\": \"magna anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0882f23c-0cd9-48b0-8b2f-64624c0fb3b4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-03-02T20:55:33.664Z\",\n \"status\": 14627125,\n \"error\": \"id\",\n \"exception\": \"fugiat incididunt\",\n \"message\": \"dolor \",\n \"total_time_taken_in_millis\": 29105964,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"enim qui\",\n \"page\": {\n  \"type\": \"officia tempor aute reprehenderit\",\n  \"size\": 36123997,\n  \"current\": 66102673,\n  \"has_next\": false,\n  \"item_total\": 53680232,\n  \"next_id\": \"magna anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "81f18c9e-61d3-403a-b69a-4852a719a028",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-03-02T20:55:33.664Z\",\n \"status\": 14627125,\n \"error\": \"id\",\n \"exception\": \"fugiat incididunt\",\n \"message\": \"dolor \",\n \"total_time_taken_in_millis\": 29105964,\n \"http_status\": \"507 INSUFFICIENT_STORAGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"enim qui\",\n \"page\": {\n  \"type\": \"officia tempor aute reprehenderit\",\n  \"size\": 36123997,\n  \"current\": 66102673,\n  \"has_next\": false,\n  \"item_total\": 53680232,\n  \"next_id\": \"magna anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "faf79952-c557-4715-9cb5-be956f293dfb",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "2b2d3911-0b97-4f90-a2ec-90e22714f432",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-23T10:00:09.894Z\",\n \"status\": 73449421,\n \"error\": \"in incididunt\",\n \"exception\": \"dolore ex adipisicing et q\",\n \"message\": \"consectetur\",\n \"total_time_taken_in_millis\": -43470860,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"adipisicing ut elit\",\n \"page\": {\n  \"type\": \"Ut ut anim\",\n  \"size\": -6331602,\n  \"current\": -25191385,\n  \"has_next\": false,\n  \"item_total\": -20623930,\n  \"next_id\": \"ad id dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f5f34073-9194-48f1-afba-b1fd9e9a7d6a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-23T10:00:09.894Z\",\n \"status\": 73449421,\n \"error\": \"in incididunt\",\n \"exception\": \"dolore ex adipisicing et q\",\n \"message\": \"consectetur\",\n \"total_time_taken_in_millis\": -43470860,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"adipisicing ut elit\",\n \"page\": {\n  \"type\": \"Ut ut anim\",\n  \"size\": -6331602,\n  \"current\": -25191385,\n  \"has_next\": false,\n  \"item_total\": -20623930,\n  \"next_id\": \"ad id dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9ba3fe20-901a-4ed9-bc1e-704bb11290c1",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-23T10:00:09.894Z\",\n \"status\": 73449421,\n \"error\": \"in incididunt\",\n \"exception\": \"dolore ex adipisicing et q\",\n \"message\": \"consectetur\",\n \"total_time_taken_in_millis\": -43470860,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"adipisicing ut elit\",\n \"page\": {\n  \"type\": \"Ut ut anim\",\n  \"size\": -6331602,\n  \"current\": -25191385,\n  \"has_next\": false,\n  \"item_total\": -20623930,\n  \"next_id\": \"ad id dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7b6837fe-4506-4fd7-9335-32915badd215",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-23T10:00:09.894Z\",\n \"status\": 73449421,\n \"error\": \"in incididunt\",\n \"exception\": \"dolore ex adipisicing et q\",\n \"message\": \"consectetur\",\n \"total_time_taken_in_millis\": -43470860,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"adipisicing ut elit\",\n \"page\": {\n  \"type\": \"Ut ut anim\",\n  \"size\": -6331602,\n  \"current\": -25191385,\n  \"has_next\": false,\n  \"item_total\": -20623930,\n  \"next_id\": \"ad id dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "007cae04-af39-4814-bd3b-ee58e9e4ac6a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-23T10:00:09.894Z\",\n \"status\": 73449421,\n \"error\": \"in incididunt\",\n \"exception\": \"dolore ex adipisicing et q\",\n \"message\": \"consectetur\",\n \"total_time_taken_in_millis\": -43470860,\n \"http_status\": \"200 OK\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"adipisicing ut elit\",\n \"page\": {\n  \"type\": \"Ut ut anim\",\n  \"size\": -6331602,\n  \"current\": -25191385,\n  \"has_next\": false,\n  \"item_total\": -20623930,\n  \"next_id\": \"ad id dolor\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "9cc0ba5c-0bc6-45f7-b348-29fa0bb82adc",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
