{
  "item": [
    {
      "id": "ca9e4263-8bdc-4b1d-a691-110a5013fbbd",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e31516bb-8ef6-4f63-bed5-8fbbe2232889",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d62b9f42-fdca-45bf-b1a1-9a39b2bd5116",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "culpa nostrud proident nulla adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "20dd08be-4212-4176-bbf4-7eb8d7f56af2",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "culpa nostrud proident nulla adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "16823133-ce97-478c-8783-1f7308a061dc",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "culpa nostrud proident nulla adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7688bf31-3fa6-4738-9cbf-4799e2a09b27",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fc678592-4171-47cc-ace5-e35b7732c601",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "4f2d1dbe-91bf-4361-980d-540008437716",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "01a0c52d-b3da-465e-97c9-e8394ebd8ecb",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "646fa72d-1aa4-490d-b29e-65a5438b2637",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -48954777,\n   \"event_name\": \"culpa quis laborum ut\",\n   \"event_type\": \"do ea veniam\",\n   \"event_category\": \"aliqua nisi deserunt\",\n   \"version\": \"nulla non\",\n   \"display_name\": \"eiusmod aute mollit\",\n   \"description\": \"dolore\",\n   \"created_on\": \"nisi\"\n  },\n  {\n   \"id\": 61944539,\n   \"event_name\": \"sunt labore\",\n   \"event_type\": \"nisi Duis\",\n   \"event_category\": \"Ut enim\",\n   \"version\": \"aute culpa Lorem commodo\",\n   \"display_name\": \"occaecat dolore\",\n   \"description\": \"occaecat Lorem aute\",\n   \"created_on\": \"ipsum consectetur aliqua\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cd41e75b-5b0b-4261-b7cf-f6f3c6325896",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "922777b2-0566-46d8-869d-8591efffb1da",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -45480352,\n   \"event_name\": \"in\",\n   \"event_type\": \"ea reprehenderit et incididunt d\",\n   \"event_category\": \"laboris\",\n   \"version\": \"in ut sint aliquip\",\n   \"display_name\": \"Ut fugiat ullamco mollit\",\n   \"description\": \"enim est anim id\",\n   \"created_on\": \"aliqua exercitation quis ea\"\n  },\n  {\n   \"id\": 35802309,\n   \"event_name\": \"deserunt mollit\",\n   \"event_type\": \"officia est\",\n   \"event_category\": \"elit consequat ullamco Duis\",\n   \"version\": \"qui nostrud ad\",\n   \"display_name\": \"cillum non minim qui\",\n   \"description\": \"ex irure Lorem\",\n   \"created_on\": \"aute esse laborum sed\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6324c537-eeea-4045-94e6-f0a7ff85d8a9",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "760854e0-9b23-44ae-81f0-03a6f5a89566",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cee9b134-a5f4-420b-927d-24bf8872fafb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-04-30T11:53:25.702Z\",\n \"status\": 75750927,\n \"error\": \"mollit laborum\",\n \"exception\": \"laborum labore\",\n \"message\": \"eiusmod est officia\",\n \"total_time_taken_in_millis\": 2117367,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"company_id\": 65941698,\n  \"integration_data\": {},\n  \"company_name\": \"eu ut deserunt officia nostrud\",\n  \"task_details\": {\n   \"type\": -3949046,\n   \"group_list\": [\n    {\n     \"text\": \"minim labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"fugiat ad cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -14062139.817414865,\n   \"safe_stock\": 31378600,\n   \"period_threshold\": 15743054,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud voluptate in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sit sint a\",\n  \"alias\": \"minim\"\n },\n \"payload\": {\n  \"company_id\": -44302091,\n  \"integration_data\": {},\n  \"company_name\": \"Ut pariatur mollit\",\n  \"task_details\": {\n   \"type\": -99174073,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur et Duis dolore in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est Duis quis cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 10078675.72554551,\n   \"safe_stock\": -57348727,\n   \"period_threshold\": -27783048,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex Lorem\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut aute eu labore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"est in dolore esse proident\",\n  \"alias\": \"nulla aute consectetur\"\n },\n \"trace_id\": \"cillum minim\",\n \"page\": {\n  \"type\": \"enim ex id fugiat\",\n  \"size\": 44767193,\n  \"current\": 63859096,\n  \"has_next\": false,\n  \"item_total\": 34180623,\n  \"next_id\": \"ut in commodo sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "417c1120-67a6-4d98-8532-65681a0af92d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-04-30T11:53:25.702Z\",\n \"status\": 75750927,\n \"error\": \"mollit laborum\",\n \"exception\": \"laborum labore\",\n \"message\": \"eiusmod est officia\",\n \"total_time_taken_in_millis\": 2117367,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"company_id\": 65941698,\n  \"integration_data\": {},\n  \"company_name\": \"eu ut deserunt officia nostrud\",\n  \"task_details\": {\n   \"type\": -3949046,\n   \"group_list\": [\n    {\n     \"text\": \"minim labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"fugiat ad cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -14062139.817414865,\n   \"safe_stock\": 31378600,\n   \"period_threshold\": 15743054,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud voluptate in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sit sint a\",\n  \"alias\": \"minim\"\n },\n \"payload\": {\n  \"company_id\": -44302091,\n  \"integration_data\": {},\n  \"company_name\": \"Ut pariatur mollit\",\n  \"task_details\": {\n   \"type\": -99174073,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur et Duis dolore in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est Duis quis cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 10078675.72554551,\n   \"safe_stock\": -57348727,\n   \"period_threshold\": -27783048,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex Lorem\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut aute eu labore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"est in dolore esse proident\",\n  \"alias\": \"nulla aute consectetur\"\n },\n \"trace_id\": \"cillum minim\",\n \"page\": {\n  \"type\": \"enim ex id fugiat\",\n  \"size\": 44767193,\n  \"current\": 63859096,\n  \"has_next\": false,\n  \"item_total\": 34180623,\n  \"next_id\": \"ut in commodo sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "aeb97f4c-2829-4a86-9190-e6ca8b865c9f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-04-30T11:53:25.702Z\",\n \"status\": 75750927,\n \"error\": \"mollit laborum\",\n \"exception\": \"laborum labore\",\n \"message\": \"eiusmod est officia\",\n \"total_time_taken_in_millis\": 2117367,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": {\n  \"company_id\": 65941698,\n  \"integration_data\": {},\n  \"company_name\": \"eu ut deserunt officia nostrud\",\n  \"task_details\": {\n   \"type\": -3949046,\n   \"group_list\": [\n    {\n     \"text\": \"minim labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"fugiat ad cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -14062139.817414865,\n   \"safe_stock\": 31378600,\n   \"period_threshold\": 15743054,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud voluptate in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sit sint a\",\n  \"alias\": \"minim\"\n },\n \"payload\": {\n  \"company_id\": -44302091,\n  \"integration_data\": {},\n  \"company_name\": \"Ut pariatur mollit\",\n  \"task_details\": {\n   \"type\": -99174073,\n   \"group_list\": [\n    {\n     \"text\": \"pariatur et Duis dolore in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"est Duis quis cillum\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 10078675.72554551,\n   \"safe_stock\": -57348727,\n   \"period_threshold\": -27783048,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"ex Lorem\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ut aute eu labore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"est in dolore esse proident\",\n  \"alias\": \"nulla aute consectetur\"\n },\n \"trace_id\": \"cillum minim\",\n \"page\": {\n  \"type\": \"enim ex id fugiat\",\n  \"size\": 44767193,\n  \"current\": 63859096,\n  \"has_next\": false,\n  \"item_total\": 34180623,\n  \"next_id\": \"ut in commodo sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d89bed6d-a467-4939-b0ca-c056fb704300",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "687198ed-5f4d-48fb-8821-212c103360bf",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2014-12-29T00:18:02.830Z\",\n \"status\": 40240472,\n \"error\": \"ipsum do proident\",\n \"exception\": \"Lorem\",\n \"message\": \"pariatur\",\n \"total_time_taken_in_millis\": 22129250,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": 21294150,\n   \"integration_data\": {},\n   \"company_name\": \"commodo adipisic\",\n   \"task_details\": {\n    \"type\": -73419810,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur qui mollit nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 77248346.4116979,\n    \"safe_stock\": 98161655,\n    \"period_threshold\": 76454504,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis in laborum Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eiusmod aliqua deserunt\",\n   \"alias\": \"commodo aute minim\"\n  },\n  {\n   \"company_id\": 25496016,\n   \"integration_data\": {},\n   \"company_name\": \"et\",\n   \"task_details\": {\n    \"type\": -11723124,\n    \"group_list\": [\n     {\n      \"text\": \"laborum Excepteur deserunt et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29138493.313927725,\n    \"safe_stock\": 25399294,\n    \"period_threshold\": -49147392,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum ea occaecat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur esse incididunt si\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim cupidatat\",\n   \"alias\": \"aute occaecat dolore nulla c\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 35377422,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua Excepteur mollit\",\n   \"task_details\": {\n    \"type\": -91994950,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod incididunt id deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64368292.47980307,\n    \"safe_stock\": -3716607,\n    \"period_threshold\": 67722461,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"est laboris dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation est Ut aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo\",\n   \"alias\": \"dolore\"\n  },\n  {\n   \"company_id\": -30477334,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation pariatur tempor\",\n   \"task_details\": {\n    \"type\": 26978664,\n    \"group_list\": [\n     {\n      \"text\": \"laboris in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 84824162.28172073,\n    \"safe_stock\": -61707706,\n    \"period_threshold\": -59002906,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Lorem qui ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur exercitation\",\n   \"alias\": \"pariatur voluptate\"\n  }\n ],\n \"trace_id\": \"Excepteur ut est do\",\n \"page\": {\n  \"type\": \"mollit sed in dolor\",\n  \"size\": -62399891,\n  \"current\": -20578106,\n  \"has_next\": false,\n  \"item_total\": -9587969,\n  \"next_id\": \"dolore sed Duis Lorem\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c245c221-387d-4787-b474-b0f2da255f98",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-06-05T06:44:12.639Z\",\n \"status\": -98289616,\n \"error\": \"tempor id cillum pariatur ea\",\n \"exception\": \"fugiat elit sed consequat deserunt\",\n \"message\": \"ea\",\n \"total_time_taken_in_millis\": 40606540,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": -14903531,\n   \"integration_data\": {},\n   \"company_name\": \"dolor dolor est ullamco consequat\",\n   \"task_details\": {\n    \"type\": -79464592,\n    \"group_list\": [\n     {\n      \"text\": \"mollit in deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam adipisicing commodo exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 6372902.92095156,\n    \"safe_stock\": 17116484,\n    \"period_threshold\": -84551175,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor aliqua fugiat cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat\",\n   \"alias\": \"adipisicing qui fugiat cillum deserunt\"\n  },\n  {\n   \"company_id\": -26830595,\n   \"integration_data\": {},\n   \"company_name\": \"labore \",\n   \"task_details\": {\n    \"type\": 61703025,\n    \"group_list\": [\n     {\n      \"text\": \"et in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur elit quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71981322.13093492,\n    \"safe_stock\": -23392581,\n    \"period_threshold\": 86470032,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate nostrud esse do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui\",\n   \"alias\": \"qui occaecat enim\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 71331591,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat irure nulla\",\n   \"task_details\": {\n    \"type\": -40959114,\n    \"group_list\": [\n     {\n      \"text\": \"id minim nisi laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89848157.74721353,\n    \"safe_stock\": 52274804,\n    \"period_threshold\": 83863368,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna voluptate fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis adipisicing consectetur qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est Lorem id sed\",\n   \"alias\": \"sed ipsum\"\n  },\n  {\n   \"company_id\": -5284838,\n   \"integration_data\": {},\n   \"company_name\": \"ex ipsum\",\n   \"task_details\": {\n    \"type\": 91291333,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31753196.942839295,\n    \"safe_stock\": -27133705,\n    \"period_threshold\": 24788657,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit Duis esse quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor veniam\",\n   \"alias\": \"sunt dolore labore\"\n  }\n ],\n \"trace_id\": \"eiusmod\",\n \"page\": {\n  \"type\": \"commodo deserunt amet laboris\",\n  \"size\": -19729694,\n  \"current\": -17460157,\n  \"has_next\": false,\n  \"item_total\": 32948203,\n  \"next_id\": \"in in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7624d4da-ca21-437c-b185-a0652ed79568",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2009-06-05T06:44:12.639Z\",\n \"status\": -98289616,\n \"error\": \"tempor id cillum pariatur ea\",\n \"exception\": \"fugiat elit sed consequat deserunt\",\n \"message\": \"ea\",\n \"total_time_taken_in_millis\": 40606540,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": -14903531,\n   \"integration_data\": {},\n   \"company_name\": \"dolor dolor est ullamco consequat\",\n   \"task_details\": {\n    \"type\": -79464592,\n    \"group_list\": [\n     {\n      \"text\": \"mollit in deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam adipisicing commodo exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 6372902.92095156,\n    \"safe_stock\": 17116484,\n    \"period_threshold\": -84551175,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor aliqua fugiat cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat\",\n   \"alias\": \"adipisicing qui fugiat cillum deserunt\"\n  },\n  {\n   \"company_id\": -26830595,\n   \"integration_data\": {},\n   \"company_name\": \"labore \",\n   \"task_details\": {\n    \"type\": 61703025,\n    \"group_list\": [\n     {\n      \"text\": \"et in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur elit quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 71981322.13093492,\n    \"safe_stock\": -23392581,\n    \"period_threshold\": 86470032,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate nostrud esse do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui\",\n   \"alias\": \"qui occaecat enim\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 71331591,\n   \"integration_data\": {},\n   \"company_name\": \"occaecat irure nulla\",\n   \"task_details\": {\n    \"type\": -40959114,\n    \"group_list\": [\n     {\n      \"text\": \"id minim nisi laboris\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -89848157.74721353,\n    \"safe_stock\": 52274804,\n    \"period_threshold\": 83863368,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna voluptate fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis adipisicing consectetur qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est Lorem id sed\",\n   \"alias\": \"sed ipsum\"\n  },\n  {\n   \"company_id\": -5284838,\n   \"integration_data\": {},\n   \"company_name\": \"ex ipsum\",\n   \"task_details\": {\n    \"type\": 91291333,\n    \"group_list\": [\n     {\n      \"text\": \"aliqua aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do elit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 31753196.942839295,\n    \"safe_stock\": -27133705,\n    \"period_threshold\": 24788657,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit Duis esse quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor veniam\",\n   \"alias\": \"sunt dolore labore\"\n  }\n ],\n \"trace_id\": \"eiusmod\",\n \"page\": {\n  \"type\": \"commodo deserunt amet laboris\",\n  \"size\": -19729694,\n  \"current\": -17460157,\n  \"has_next\": false,\n  \"item_total\": 32948203,\n  \"next_id\": \"in in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1f264304-e2f0-4c31-b019-9d047c8553ff",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8d39eea1-989d-423a-bda3-c615c8552113",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-04-16T18:04:57.005Z\",\n \"status\": -68810282,\n \"error\": \"occaecat eiusmod cupidatat pariatur in\",\n \"exception\": \"aliquip c\",\n \"message\": \"voluptate ut nulla\",\n \"total_time_taken_in_millis\": 88318801,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"occaecat reprehenderit anim comm\",\n \"page\": {\n  \"type\": \"eiusmod tempor enim\",\n  \"size\": -88226472,\n  \"current\": 27199798,\n  \"has_next\": true,\n  \"item_total\": 47039814,\n  \"next_id\": \"ea sint reprehenderit qui irure\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "310de83d-a4a8-4b39-9bbd-378dd254731e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-04-16T18:04:57.005Z\",\n \"status\": -68810282,\n \"error\": \"occaecat eiusmod cupidatat pariatur in\",\n \"exception\": \"aliquip c\",\n \"message\": \"voluptate ut nulla\",\n \"total_time_taken_in_millis\": 88318801,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"occaecat reprehenderit anim comm\",\n \"page\": {\n  \"type\": \"eiusmod tempor enim\",\n  \"size\": -88226472,\n  \"current\": 27199798,\n  \"has_next\": true,\n  \"item_total\": 47039814,\n  \"next_id\": \"ea sint reprehenderit qui irure\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "af1d238d-4572-43e1-ba81-93d3bfc07273",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-04-16T18:04:57.005Z\",\n \"status\": -68810282,\n \"error\": \"occaecat eiusmod cupidatat pariatur in\",\n \"exception\": \"aliquip c\",\n \"message\": \"voluptate ut nulla\",\n \"total_time_taken_in_millis\": 88318801,\n \"http_status\": \"203 NON_AUTHORITATIVE_INFORMATION\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"occaecat reprehenderit anim comm\",\n \"page\": {\n  \"type\": \"eiusmod tempor enim\",\n  \"size\": -88226472,\n  \"current\": 27199798,\n  \"has_next\": true,\n  \"item_total\": 47039814,\n  \"next_id\": \"ea sint reprehenderit qui irure\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d3a74568-5436-4b08-bd42-f6504c1883d3",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "b4f60e6e-bbe6-43ec-8433-068004ced80e",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-06-26T02:26:47.392Z\",\n \"status\": 46188588,\n \"error\": \"ea\",\n \"exception\": \"in exercitation minim qui\",\n \"message\": \"dolor in dolore\",\n \"total_time_taken_in_millis\": 65518602,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum ut veniam aliquip\",\n \"page\": {\n  \"type\": \"cillum fugiat voluptate velit\",\n  \"size\": -39208813,\n  \"current\": -20981547,\n  \"has_next\": false,\n  \"item_total\": -47073077,\n  \"next_id\": \"culpa id deserunt proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "89b9712d-35c8-4dbc-8b81-31adfb36643d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-06-26T02:26:47.392Z\",\n \"status\": 46188588,\n \"error\": \"ea\",\n \"exception\": \"in exercitation minim qui\",\n \"message\": \"dolor in dolore\",\n \"total_time_taken_in_millis\": 65518602,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum ut veniam aliquip\",\n \"page\": {\n  \"type\": \"cillum fugiat voluptate velit\",\n  \"size\": -39208813,\n  \"current\": -20981547,\n  \"has_next\": false,\n  \"item_total\": -47073077,\n  \"next_id\": \"culpa id deserunt proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a98c6786-ecb2-4303-919c-c9cefa1b8188",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-06-26T02:26:47.392Z\",\n \"status\": 46188588,\n \"error\": \"ea\",\n \"exception\": \"in exercitation minim qui\",\n \"message\": \"dolor in dolore\",\n \"total_time_taken_in_millis\": 65518602,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum ut veniam aliquip\",\n \"page\": {\n  \"type\": \"cillum fugiat voluptate velit\",\n  \"size\": -39208813,\n  \"current\": -20981547,\n  \"has_next\": false,\n  \"item_total\": -47073077,\n  \"next_id\": \"culpa id deserunt proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a8aa0f0-898a-4799-8934-d5e172a77c87",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-06-26T02:26:47.392Z\",\n \"status\": 46188588,\n \"error\": \"ea\",\n \"exception\": \"in exercitation minim qui\",\n \"message\": \"dolor in dolore\",\n \"total_time_taken_in_millis\": 65518602,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum ut veniam aliquip\",\n \"page\": {\n  \"type\": \"cillum fugiat voluptate velit\",\n  \"size\": -39208813,\n  \"current\": -20981547,\n  \"has_next\": false,\n  \"item_total\": -47073077,\n  \"next_id\": \"culpa id deserunt proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a06d9328-4e71-4298-b111-14485983b9b3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1976-06-26T02:26:47.392Z\",\n \"status\": 46188588,\n \"error\": \"ea\",\n \"exception\": \"in exercitation minim qui\",\n \"message\": \"dolor in dolore\",\n \"total_time_taken_in_millis\": 65518602,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laborum ut veniam aliquip\",\n \"page\": {\n  \"type\": \"cillum fugiat voluptate velit\",\n  \"size\": -39208813,\n  \"current\": -20981547,\n  \"has_next\": false,\n  \"item_total\": -47073077,\n  \"next_id\": \"culpa id deserunt proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "e9545df9-db04-4370-bb94-970546b67174",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
