{
  "item": [
    {
      "id": "b0319983-8bd1-4d52-8231-7f0d39d4793f",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2e76bbc2-2f31-4021-9d7f-ba86600835a2",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform_type",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d9d73668-7960-454f-8f83-c9fafe17439a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"\",\n        \"cillum nisi exercitation qui sit\"\n      ],\n      \"tags\": [\n        \"ipsum consectetur minim dolor enim\",\n        \"sit Dui\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"deserunt ipsum sed\",\n        \"cupidatat fugiat Ut\"\n      ],\n      \"tags\": [\n        \"pariatur qui nisi in\",\n        \"ipsum irure ut dolor\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"ut mollit eu est\",\n      \"adipisicing est\"\n    ],\n    \"tags\": [\n      \"occaecat Lorem\",\n      \"adipisicing mollit dolore\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fd3d45e6-780e-4796-ae63-79e4fb982ea7",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9f289847-39ea-4af0-882a-4f80f776e96f",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e007ae39-18b6-4799-b11b-0a561968ea5c",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "46a3d8f1-03dc-40b5-bdfc-96afdf1e638e",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d0d7761f-841a-4ce9-83d6-a9f767d9da53",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "170e58fe-9b3a-4084-9f97-c00ea93f6131",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "051b1a86-d2cc-4736-9d96-a6c4ba0b9ae1",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9c30d8b5-44a0-44d9-9bae-6ff5776364ed",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5fc55a65-8972-4c0a-a869-d2054a17728d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"aliquip in in\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"esse in\",\n      \"country_code\": \"ad\",\n      \"latitude\": \"sunt commodo aliqua minim\",\n      \"longitude\": \"consequat aute eiusmod enim\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"dolore ad eu\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"ut dolor enim et\",\n      \"country_code\": \"ex\",\n      \"latitude\": \"laboris in ut qui ad\",\n      \"longitude\": \"mollit laborum elit\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "cf3cc179-dc6b-465b-882b-77181a967c97",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0eabdcd5-bbbd-4780-bd58-d74b6f127740",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "84e0379b-2311-4aeb-b570-e2f4266f334c",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e5fa8ebe-3021-4a51-bafd-4438a9c9b437",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "57bb9502-1b25-43f5-8c31-a2c7b7272884",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d328c9e2-c269-45a5-8876-35fe4ab674ba",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "748d1c4a-f4a5-49f9-bf7b-d1eb6217ac11",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-01-30T15:24:55.414Z\",\n  \"status\": -33815182,\n  \"error\": \"quis amet dolor pariatur deserunt\",\n  \"exception\": \"eu\",\n  \"message\": \"ut culpa incididunt cupidatat\",\n  \"total_time_taken_in_millis\": 66974530,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"est qui aliqua sed minim\",\n  \"page\": {\n    \"type\": \"ipsum cupidatat in\",\n    \"size\": -68889701,\n    \"current\": -14310938,\n    \"has_next\": false,\n    \"item_total\": 10843605,\n    \"next_id\": \"nisi ex\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e7e9e614-8a39-451a-bce3-cd8fa6c76448",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-01-30T15:24:55.414Z\",\n  \"status\": -33815182,\n  \"error\": \"quis amet dolor pariatur deserunt\",\n  \"exception\": \"eu\",\n  \"message\": \"ut culpa incididunt cupidatat\",\n  \"total_time_taken_in_millis\": 66974530,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"est qui aliqua sed minim\",\n  \"page\": {\n    \"type\": \"ipsum cupidatat in\",\n    \"size\": -68889701,\n    \"current\": -14310938,\n    \"has_next\": false,\n    \"item_total\": 10843605,\n    \"next_id\": \"nisi ex\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "110a50cc-cb38-4aa3-a73f-168d30a2d378",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1956-01-30T15:24:55.414Z\",\n  \"status\": -33815182,\n  \"error\": \"quis amet dolor pariatur deserunt\",\n  \"exception\": \"eu\",\n  \"message\": \"ut culpa incididunt cupidatat\",\n  \"total_time_taken_in_millis\": 66974530,\n  \"http_status\": \"300 MULTIPLE_CHOICES\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"est qui aliqua sed minim\",\n  \"page\": {\n    \"type\": \"ipsum cupidatat in\",\n    \"size\": -68889701,\n    \"current\": -14310938,\n    \"has_next\": false,\n    \"item_total\": 10843605,\n    \"next_id\": \"nisi ex\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8c2a6ebc-770a-446d-9b4b-67c70ff07f04",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "ece25f17-b333-4d6e-b0fd-3b27690440a4",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-10-20T07:40:44.514Z\",\n  \"status\": -29253162,\n  \"error\": \"consequat voluptate\",\n  \"exception\": \"enim reprehenderit laborum\",\n  \"message\": \"voluptate nostrud nulla ex\",\n  \"total_time_taken_in_millis\": 27404553,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ut Ut\",\n  \"page\": {\n    \"type\": \"id in enim\",\n    \"size\": -28983308,\n    \"current\": -33337326,\n    \"has_next\": true,\n    \"item_total\": 30934789,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "aefd4f4f-65aa-4500-b7e1-d28d546ed288",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-10-20T07:40:44.514Z\",\n  \"status\": -29253162,\n  \"error\": \"consequat voluptate\",\n  \"exception\": \"enim reprehenderit laborum\",\n  \"message\": \"voluptate nostrud nulla ex\",\n  \"total_time_taken_in_millis\": 27404553,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ut Ut\",\n  \"page\": {\n    \"type\": \"id in enim\",\n    \"size\": -28983308,\n    \"current\": -33337326,\n    \"has_next\": true,\n    \"item_total\": 30934789,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b5b3d0f1-006e-4d01-b422-0a36e6f084dd",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-10-20T07:40:44.514Z\",\n  \"status\": -29253162,\n  \"error\": \"consequat voluptate\",\n  \"exception\": \"enim reprehenderit laborum\",\n  \"message\": \"voluptate nostrud nulla ex\",\n  \"total_time_taken_in_millis\": 27404553,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ut Ut\",\n  \"page\": {\n    \"type\": \"id in enim\",\n    \"size\": -28983308,\n    \"current\": -33337326,\n    \"has_next\": true,\n    \"item_total\": 30934789,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3a3d8fa3-6d17-4bf8-b6ab-b59ca64239c3",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-10-20T07:40:44.514Z\",\n  \"status\": -29253162,\n  \"error\": \"consequat voluptate\",\n  \"exception\": \"enim reprehenderit laborum\",\n  \"message\": \"voluptate nostrud nulla ex\",\n  \"total_time_taken_in_millis\": 27404553,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ut Ut\",\n  \"page\": {\n    \"type\": \"id in enim\",\n    \"size\": -28983308,\n    \"current\": -33337326,\n    \"has_next\": true,\n    \"item_total\": 30934789,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d8e95876-bbc7-479c-ba26-1d3f1f2e58b8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-10-20T07:40:44.514Z\",\n  \"status\": -29253162,\n  \"error\": \"consequat voluptate\",\n  \"exception\": \"enim reprehenderit laborum\",\n  \"message\": \"voluptate nostrud nulla ex\",\n  \"total_time_taken_in_millis\": 27404553,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ut Ut\",\n  \"page\": {\n    \"type\": \"id in enim\",\n    \"size\": -28983308,\n    \"current\": -33337326,\n    \"has_next\": true,\n    \"item_total\": 30934789,\n    \"next_id\": \"ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f802038e-fd96-4930-81ab-4085b11966db",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bcbc572a-24b4-4b45-9376-b448196e0569",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-06-28T01:35:32.459Z\",\n  \"status\": -65821091,\n  \"error\": \"nisi ipsum voluptate fugiat\",\n  \"exception\": \"laboris sunt irure ullamco\",\n  \"message\": \"conseq\",\n  \"total_time_taken_in_millis\": -58471932,\n  \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"occaecat ullamco dolor\",\n      \"description\": \"consequat labore cillum ea adipisicing\",\n      \"name\": \"\",\n      \"slug\": \"aliquip\",\n      \"meta\": [\n        {\n          \"_id\": \"eiusmod do adipisicing dolor dolore\",\n          \"name\": \"fugiat\",\n          \"value\": \"consequat\"\n        },\n        {\n          \"_id\": \"elit officia voluptate ut aliqua\",\n          \"name\": \"Excepteur\",\n          \"value\": \"dolore nulla\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consectetu\",\n        \"integration\": \"culpa eiusmod dolor\",\n        \"level\": \"quis aute\",\n        \"uid\": 27268777,\n        \"opted\": false,\n        \"permissions\": [\n          \"ex ad\",\n          \"proident minim\"\n        ],\n        \"token\": \"anim nisi mollit deserunt\",\n        \"name\": \"veniam exercitation Excepteur ad\",\n        \"stores\": [\n          {\n            \"_id\": \"Duis magna consectetur labore\",\n            \"integration\": \"consequat\",\n            \"level\": \"esse incididunt cillum minim\",\n            \"uid\": -16068554,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"irure magna sunt culpa\",\n            \"code\": \"irure Ut Lorem esse\",\n            \"name\": \"nisi consectetur ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aute in elit proident\",\n            \"integration\": \"dolore pariatur\",\n            \"level\": \"consectetur Duis Ut Excepteur\",\n            \"uid\": 90500712,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad\",\n            \"code\": \"eu\",\n            \"name\": \"laboris incididunt reprehend\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"velit non Duis mollit\",\n        \"integration\": \"tempor occaecat labore ea\",\n        \"level\": \"ex dolore amet incididunt\",\n        \"uid\": -79717929,\n        \"opted\": false,\n        \"permissions\": [\n          \"minim aliquip magna\",\n          \"dolore Duis et\"\n        ],\n        \"token\": \"amet minim\",\n        \"name\": \"cillum officia laborum\",\n        \"stores\": [\n          {\n            \"_id\": \"tempor pariatur quis occaecat\",\n            \"integration\": \"incidid\",\n            \"level\": \"laboris in anim\",\n            \"uid\": -48392734,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"officia Ut ut Duis et\",\n            \"code\": \"pariatur occaecat adipisicing ea\",\n            \"name\": \"ullamco proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aute ut\",\n            \"integration\": \"labore cillum deserunt\",\n            \"level\": \"cillum anim \",\n            \"uid\": 78452169,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris ut\",\n            \"code\": \"et exercitation\",\n            \"name\": \"eiusmod in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Lorem id\",\n      \"description\": \"sit irure aute aliquip\",\n      \"name\": \"est commodo ex id\",\n      \"slug\": \"dolore qui nulla\",\n      \"meta\": [\n        {\n          \"_id\": \"pariatur non\",\n          \"name\": \"do cupidatat\",\n          \"value\": \"inci\"\n        },\n        {\n          \"_id\": \"ea aliquip\",\n          \"name\": \"ut non aliquip ipsum\",\n          \"value\": \"aliqua Excepteur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Lorem\",\n        \"integration\": \"in ipsum\",\n        \"level\": \"consequat exercitation\",\n        \"uid\": -1473674,\n        \"opted\": false,\n        \"permissions\": [\n          \"commo\",\n          \"pariatur consectetur Lorem ea\"\n        ],\n        \"token\": \"incididunt\",\n        \"name\": \"labore enim proident et\",\n        \"stores\": [\n          {\n            \"_id\": \"ut nulla\",\n            \"integration\": \"in ex\",\n            \"level\": \"veniam officia nostrud velit ut\",\n            \"uid\": 27175144,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ad\",\n            \"code\": \"Ut nulla consequat adipisicing o\",\n            \"name\": \"cillum ea in elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ut Lorem commodo\",\n            \"integration\": \"nulla laboris in eu\",\n            \"level\": \"cupidatat non magna\",\n            \"uid\": 74674514,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud enim consectetur sed reprehenderit\",\n            \"code\": \"irure est velit elit\",\n            \"name\": \"nostrud non \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"sint magna\",\n        \"integration\": \"conse\",\n        \"level\": \"dolore commodo est nisi\",\n        \"uid\": 39880144,\n        \"opted\": true,\n        \"permissions\": [\n          \"adipisicing\",\n          \"qui do\"\n        ],\n        \"token\": \"mollit dolor dolore\",\n        \"name\": \"ea\",\n        \"stores\": [\n          {\n            \"_id\": \"sit voluptate ut\",\n            \"integration\": \"magna quis ullamco\",\n            \"level\": \"incididunt elit dolore\",\n            \"uid\": -17785366,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"id minim aliquip\",\n            \"code\": \"occaecat nostrud aliquip\",\n            \"name\": \"Duis aliquip laboris\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"eiusmod\",\n            \"integration\": \"sed elit\",\n            \"level\": \"culpa ad\",\n            \"uid\": 86453454,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliquip magna qui Excepteur\",\n            \"code\": \"incididunt\",\n            \"name\": \"eiusmod amet laboris\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"consequat velit eiusmod\",\n  \"page\": {\n    \"type\": \"cupidatat Duis laboris aliqua elit\",\n    \"size\": -82773423,\n    \"current\": 72089847,\n    \"has_next\": false,\n    \"item_total\": -40140091,\n    \"next_id\": \"sint voluptate\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "046f2d86-97d7-400b-9480-50b970464339",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-10-27T10:24:40.111Z\",\n  \"status\": -11072807,\n  \"error\": \"occaecat quis commodo\",\n  \"exception\": \"veniam Excepteur dolor sunt\",\n  \"message\": \"in pari\",\n  \"total_time_taken_in_millis\": -32700353,\n  \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"enim proident\",\n      \"description\": \"voluptate nulla incididunt\",\n      \"name\": \"fugiat ut nostrud consequat pariatur\",\n      \"slug\": \"ea ullamco nostrud ipsum eu\",\n      \"meta\": [\n        {\n          \"_id\": \"ut eu\",\n          \"name\": \"dolore eu non\",\n          \"value\": \"incididunt deserunt aliqua\"\n        },\n        {\n          \"_id\": \"tempor ad\",\n          \"name\": \"cillum in enim\",\n          \"value\": \"irure sit esse dolor nisi\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eiusmod quis occaecat consectetur\",\n        \"integration\": \"et \",\n        \"level\": \"Ut do id cillum ut\",\n        \"uid\": 62880700,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupida\",\n          \"pariatur\"\n        ],\n        \"token\": \"cillum consequat\",\n        \"name\": \"ea\",\n        \"stores\": [\n          {\n            \"_id\": \"ullamco \",\n            \"integration\": \"mollit voluptate ad nostrud\",\n            \"level\": \"fugiat ut anim\",\n            \"uid\": 92656923,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consecte\",\n            \"code\": \"ex veniam laboris irure\",\n            \"name\": \"quis voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Lorem labore\",\n            \"integration\": \"dolor sit minim id eiusmod\",\n            \"level\": \"anim cillum\",\n            \"uid\": 61616525,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum culpa proident ea\",\n            \"code\": \"elit\",\n            \"name\": \"proident cillum aliquip do id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ut\",\n        \"integration\": \"ex do aliquip dolore velit\",\n        \"level\": \"nisi culpa\",\n        \"uid\": 65322140,\n        \"opted\": false,\n        \"permissions\": [\n          \"mollit do fugiat repr\",\n          \"aute dolore labore quis\"\n        ],\n        \"token\": \"\",\n        \"name\": \"ipsum in minim\",\n        \"stores\": [\n          {\n            \"_id\": \"anim nisi\",\n            \"integration\": \"dolore occaecat dolore\",\n            \"level\": \"voluptate exercitation fugiat\",\n            \"uid\": 31656620,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"commodo enim labore\",\n            \"code\": \"enim id culpa\",\n            \"name\": \"ut minim reprehenderit occaecat esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consequat\",\n            \"integration\": \"esse veniam eu elit\",\n            \"level\": \"voluptate dolore in\",\n            \"uid\": -92369012,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat elit Excepteu\",\n            \"code\": \"Lorem labore\",\n            \"name\": \"ali\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"aliqua sunt\",\n      \"description\": \"reprehenderit amet sed ut\",\n      \"name\": \"ad incididunt laborum c\",\n      \"slug\": \"Ut elit mollit\",\n      \"meta\": [\n        {\n          \"_id\": \"do nostrud velit enim\",\n          \"name\": \"sed nisi in eu\",\n          \"value\": \"aute aliquip dolore eu\"\n        },\n        {\n          \"_id\": \"et\",\n          \"name\": \"ex\",\n          \"value\": \"in dolore et sunt\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"et\",\n        \"integration\": \"ut incididunt et ad\",\n        \"level\": \"proide\",\n        \"uid\": 86284051,\n        \"opted\": false,\n        \"permissions\": [\n          \"fugiat\",\n          \"in qui Lorem\"\n        ],\n        \"token\": \"tempor commodo officia laborum consequat\",\n        \"name\": \"Excepteur aliquip\",\n        \"stores\": [\n          {\n            \"_id\": \"laboris laborum veniam ullamco\",\n            \"integration\": \"non amet minim incididunt\",\n            \"level\": \"do\",\n            \"uid\": -34688695,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nisi voluptate\",\n            \"code\": \"consequat cupidatat\",\n            \"name\": \"a\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore laborum\",\n            \"integration\": \"adipisicing\",\n            \"level\": \"sunt in laboris nisi ea\",\n            \"uid\": -5765415,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sit adipisicing cupidatat\",\n            \"code\": \"labore\",\n            \"name\": \"magna ex dolor aute e\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"amet ullamco enim\",\n        \"integration\": \"qui\",\n        \"level\": \"labore aliquip\",\n        \"uid\": -46216746,\n        \"opted\": true,\n        \"permissions\": [\n          \"in velit\",\n          \"anim exercitation\"\n        ],\n        \"token\": \"Excepteur reprehenderit\",\n        \"name\": \"nostrud laborum\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut aliqua laborum\",\n            \"integration\": \"quis officia eiusmod fugiat occaecat\",\n            \"level\": \"nostrud laboris dolore anim Lorem\",\n            \"uid\": -87812098,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit \",\n            \"code\": \"sunt d\",\n            \"name\": \"cillum Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut\",\n            \"integration\": \"sit\",\n            \"level\": \"ut sint minim eu \",\n            \"uid\": -70701263,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aute adipisicing mollit ad sed\",\n            \"code\": \"aliqua\",\n            \"name\": \"aliqua aute occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"Lorem mollit amet minim\",\n  \"page\": {\n    \"type\": \"cupidatat est mollit\",\n    \"size\": 69192711,\n    \"current\": -96608363,\n    \"has_next\": false,\n    \"item_total\": -9323818,\n    \"next_id\": \"in do voluptate\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ff1020e6-01ee-44f2-b829-b3e44d4f06d8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-10-27T10:24:40.111Z\",\n  \"status\": -11072807,\n  \"error\": \"occaecat quis commodo\",\n  \"exception\": \"veniam Excepteur dolor sunt\",\n  \"message\": \"in pari\",\n  \"total_time_taken_in_millis\": -32700353,\n  \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"enim proident\",\n      \"description\": \"voluptate nulla incididunt\",\n      \"name\": \"fugiat ut nostrud consequat pariatur\",\n      \"slug\": \"ea ullamco nostrud ipsum eu\",\n      \"meta\": [\n        {\n          \"_id\": \"ut eu\",\n          \"name\": \"dolore eu non\",\n          \"value\": \"incididunt deserunt aliqua\"\n        },\n        {\n          \"_id\": \"tempor ad\",\n          \"name\": \"cillum in enim\",\n          \"value\": \"irure sit esse dolor nisi\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eiusmod quis occaecat consectetur\",\n        \"integration\": \"et \",\n        \"level\": \"Ut do id cillum ut\",\n        \"uid\": 62880700,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupida\",\n          \"pariatur\"\n        ],\n        \"token\": \"cillum consequat\",\n        \"name\": \"ea\",\n        \"stores\": [\n          {\n            \"_id\": \"ullamco \",\n            \"integration\": \"mollit voluptate ad nostrud\",\n            \"level\": \"fugiat ut anim\",\n            \"uid\": 92656923,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consecte\",\n            \"code\": \"ex veniam laboris irure\",\n            \"name\": \"quis voluptate\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Lorem labore\",\n            \"integration\": \"dolor sit minim id eiusmod\",\n            \"level\": \"anim cillum\",\n            \"uid\": 61616525,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum culpa proident ea\",\n            \"code\": \"elit\",\n            \"name\": \"proident cillum aliquip do id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ut\",\n        \"integration\": \"ex do aliquip dolore velit\",\n        \"level\": \"nisi culpa\",\n        \"uid\": 65322140,\n        \"opted\": false,\n        \"permissions\": [\n          \"mollit do fugiat repr\",\n          \"aute dolore labore quis\"\n        ],\n        \"token\": \"\",\n        \"name\": \"ipsum in minim\",\n        \"stores\": [\n          {\n            \"_id\": \"anim nisi\",\n            \"integration\": \"dolore occaecat dolore\",\n            \"level\": \"voluptate exercitation fugiat\",\n            \"uid\": 31656620,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"commodo enim labore\",\n            \"code\": \"enim id culpa\",\n            \"name\": \"ut minim reprehenderit occaecat esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consequat\",\n            \"integration\": \"esse veniam eu elit\",\n            \"level\": \"voluptate dolore in\",\n            \"uid\": -92369012,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"fugiat elit Excepteu\",\n            \"code\": \"Lorem labore\",\n            \"name\": \"ali\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"aliqua sunt\",\n      \"description\": \"reprehenderit amet sed ut\",\n      \"name\": \"ad incididunt laborum c\",\n      \"slug\": \"Ut elit mollit\",\n      \"meta\": [\n        {\n          \"_id\": \"do nostrud velit enim\",\n          \"name\": \"sed nisi in eu\",\n          \"value\": \"aute aliquip dolore eu\"\n        },\n        {\n          \"_id\": \"et\",\n          \"name\": \"ex\",\n          \"value\": \"in dolore et sunt\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"et\",\n        \"integration\": \"ut incididunt et ad\",\n        \"level\": \"proide\",\n        \"uid\": 86284051,\n        \"opted\": false,\n        \"permissions\": [\n          \"fugiat\",\n          \"in qui Lorem\"\n        ],\n        \"token\": \"tempor commodo officia laborum consequat\",\n        \"name\": \"Excepteur aliquip\",\n        \"stores\": [\n          {\n            \"_id\": \"laboris laborum veniam ullamco\",\n            \"integration\": \"non amet minim incididunt\",\n            \"level\": \"do\",\n            \"uid\": -34688695,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nisi voluptate\",\n            \"code\": \"consequat cupidatat\",\n            \"name\": \"a\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore laborum\",\n            \"integration\": \"adipisicing\",\n            \"level\": \"sunt in laboris nisi ea\",\n            \"uid\": -5765415,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sit adipisicing cupidatat\",\n            \"code\": \"labore\",\n            \"name\": \"magna ex dolor aute e\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"amet ullamco enim\",\n        \"integration\": \"qui\",\n        \"level\": \"labore aliquip\",\n        \"uid\": -46216746,\n        \"opted\": true,\n        \"permissions\": [\n          \"in velit\",\n          \"anim exercitation\"\n        ],\n        \"token\": \"Excepteur reprehenderit\",\n        \"name\": \"nostrud laborum\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut aliqua laborum\",\n            \"integration\": \"quis officia eiusmod fugiat occaecat\",\n            \"level\": \"nostrud laboris dolore anim Lorem\",\n            \"uid\": -87812098,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit \",\n            \"code\": \"sunt d\",\n            \"name\": \"cillum Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut\",\n            \"integration\": \"sit\",\n            \"level\": \"ut sint minim eu \",\n            \"uid\": -70701263,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aute adipisicing mollit ad sed\",\n            \"code\": \"aliqua\",\n            \"name\": \"aliqua aute occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"Lorem mollit amet minim\",\n  \"page\": {\n    \"type\": \"cupidatat est mollit\",\n    \"size\": 69192711,\n    \"current\": -96608363,\n    \"has_next\": false,\n    \"item_total\": -9323818,\n    \"next_id\": \"in do voluptate\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "990c3bd4-4fad-4a59-b844-aca32495fbfd",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "832489c3-6bb7-4dd3-92c4-fe34e4d162c6",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2014-06-12T05:07:49.912Z\",\n  \"status\": -21089549,\n  \"error\": \"nulla eiusmod ipsum\",\n  \"exception\": \"laborum qui et\",\n  \"message\": \"et irure\",\n  \"total_time_taken_in_millis\": 59442557,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": {\n    \"session_id\": \"ex occaecat sed\",\n    \"error_message\": \"nulla quis cillum\"\n  },\n  \"payload\": {\n    \"session_id\": \"ipsum deserunt\",\n    \"error_message\": \"eu nulla aliqua anim labore\"\n  },\n  \"trace_id\": \"et repr\",\n  \"page\": {\n    \"type\": \"nulla id aliqua\",\n    \"size\": -48890494,\n    \"current\": -99077301,\n    \"has_next\": false,\n    \"item_total\": -6034224,\n    \"next_id\": \"ullamco fugiat enim\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "052e4c83-96b0-4e13-ab26-0a562c6915dc",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2014-06-12T05:07:49.912Z\",\n  \"status\": -21089549,\n  \"error\": \"nulla eiusmod ipsum\",\n  \"exception\": \"laborum qui et\",\n  \"message\": \"et irure\",\n  \"total_time_taken_in_millis\": 59442557,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": {\n    \"session_id\": \"ex occaecat sed\",\n    \"error_message\": \"nulla quis cillum\"\n  },\n  \"payload\": {\n    \"session_id\": \"ipsum deserunt\",\n    \"error_message\": \"eu nulla aliqua anim labore\"\n  },\n  \"trace_id\": \"et repr\",\n  \"page\": {\n    \"type\": \"nulla id aliqua\",\n    \"size\": -48890494,\n    \"current\": -99077301,\n    \"has_next\": false,\n    \"item_total\": -6034224,\n    \"next_id\": \"ullamco fugiat enim\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b9761d36-c89a-4baf-84fa-d0ff8937de12",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2014-06-12T05:07:49.912Z\",\n  \"status\": -21089549,\n  \"error\": \"nulla eiusmod ipsum\",\n  \"exception\": \"laborum qui et\",\n  \"message\": \"et irure\",\n  \"total_time_taken_in_millis\": 59442557,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": {\n    \"session_id\": \"ex occaecat sed\",\n    \"error_message\": \"nulla quis cillum\"\n  },\n  \"payload\": {\n    \"session_id\": \"ipsum deserunt\",\n    \"error_message\": \"eu nulla aliqua anim labore\"\n  },\n  \"trace_id\": \"et repr\",\n  \"page\": {\n    \"type\": \"nulla id aliqua\",\n    \"size\": -48890494,\n    \"current\": -99077301,\n    \"has_next\": false,\n    \"item_total\": -6034224,\n    \"next_id\": \"ullamco fugiat enim\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "149d9962-faf2-420d-b6eb-5edfecd11e00",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b297aee5-5752-4e42-9c5c-a8a0fdbc4013",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1998-08-31T01:38:27.518Z\",\n  \"status\": -5606071,\n  \"error\": \"\",\n  \"exception\": \"esse cupidatat\",\n  \"message\": \"nisi eiusmod incididunt veniam ad\",\n  \"total_time_taken_in_millis\": -14819177,\n  \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n  \"items\": {\n    \"company_id\": -20659324,\n    \"integration_data\": {\n      \"nulla3\": {},\n      \"amet79e\": {}\n    },\n    \"company_name\": \"occaecat\",\n    \"task_details\": {\n      \"type\": -12766844,\n      \"group_list\": [\n        {\n          \"text\": \"dolore consequat dolore et\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Ut mollit ea Duis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 92943160.02425972,\n      \"safe_stock\": 6834780,\n      \"period_threshold\": 90405030,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eiusmod\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"Lorem aliquip laboris dolore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in nulla in\",\n    \"alias\": \"sit voluptate incididunt ex\"\n  },\n  \"payload\": {\n    \"company_id\": -53799580,\n    \"integration_data\": {\n      \"aliqua_78\": {}\n    },\n    \"company_name\": \"ullamc\",\n    \"task_details\": {\n      \"type\": -70545380,\n      \"group_list\": [\n        {\n          \"text\": \"voluptate reprehe\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 58081741.801737905,\n      \"safe_stock\": 65124383,\n      \"period_threshold\": 11930086,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"velit elit\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"irure ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"occaecat in in ea\",\n    \"alias\": \"mollit magna aute\"\n  },\n  \"trace_id\": \"fugiat Lorem\",\n  \"page\": {\n    \"type\": \"reprehenderit ex\",\n    \"size\": -25582736,\n    \"current\": -88612749,\n    \"has_next\": false,\n    \"item_total\": 94790874,\n    \"next_id\": \"exercitation quis dolore magn\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c6a1dc50-ec4a-42c1-b494-7c4e6fa0e31a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-01-22T04:45:34.154Z\",\n  \"status\": -99885336,\n  \"error\": \"velit consectetur culpa\",\n  \"exception\": \"deserunt minim pariatur cu\",\n  \"message\": \"officia nulla\",\n  \"total_time_taken_in_millis\": 92327528,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": {\n    \"company_id\": 942523,\n    \"integration_data\": {\n      \"Ute\": {},\n      \"laboreb\": {},\n      \"ut9\": {},\n      \"dolore868\": {},\n      \"in0\": {}\n    },\n    \"company_name\": \"voluptate cillum enim ut non\",\n    \"task_details\": {\n      \"type\": 18209847,\n      \"group_list\": [\n        {\n          \"text\": \"in est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est nostrud magna aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -5803197.482062444,\n      \"safe_stock\": -71115272,\n      \"period_threshold\": -789621,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cupidatat consequat aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"commodo dolore eu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aute Lorem occaeca\",\n    \"alias\": \"mollit laboru\"\n  },\n  \"payload\": {\n    \"company_id\": -75899478,\n    \"integration_data\": {\n      \"ea2\": {},\n      \"elit_7\": {}\n    },\n    \"company_name\": \"id enim\",\n    \"task_details\": {\n      \"type\": -25517041,\n      \"group_list\": [\n        {\n          \"text\": \"ad minim officia nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"exercitation magna \",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -79736098.44247398,\n      \"safe_stock\": 9265315,\n      \"period_threshold\": -51811370,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cillum in aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"amet\",\n    \"alias\": \"eu\"\n  },\n  \"trace_id\": \"eiusmod minim consequat\",\n  \"page\": {\n    \"type\": \"laboris occaecat\",\n    \"size\": 15013677,\n    \"current\": 91621481,\n    \"has_next\": true,\n    \"item_total\": -87388511,\n    \"next_id\": \"sed dolore velit sint\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dc21fba8-a2c9-461f-9fb7-41d3d3ce6035",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1960-01-22T04:45:34.154Z\",\n  \"status\": -99885336,\n  \"error\": \"velit consectetur culpa\",\n  \"exception\": \"deserunt minim pariatur cu\",\n  \"message\": \"officia nulla\",\n  \"total_time_taken_in_millis\": 92327528,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": {\n    \"company_id\": 942523,\n    \"integration_data\": {\n      \"Ute\": {},\n      \"laboreb\": {},\n      \"ut9\": {},\n      \"dolore868\": {},\n      \"in0\": {}\n    },\n    \"company_name\": \"voluptate cillum enim ut non\",\n    \"task_details\": {\n      \"type\": 18209847,\n      \"group_list\": [\n        {\n          \"text\": \"in est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"est nostrud magna aliqua\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -5803197.482062444,\n      \"safe_stock\": -71115272,\n      \"period_threshold\": -789621,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cupidatat consequat aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"commodo dolore eu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aute Lorem occaeca\",\n    \"alias\": \"mollit laboru\"\n  },\n  \"payload\": {\n    \"company_id\": -75899478,\n    \"integration_data\": {\n      \"ea2\": {},\n      \"elit_7\": {}\n    },\n    \"company_name\": \"id enim\",\n    \"task_details\": {\n      \"type\": -25517041,\n      \"group_list\": [\n        {\n          \"text\": \"ad minim officia nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"exercitation magna \",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -79736098.44247398,\n      \"safe_stock\": 9265315,\n      \"period_threshold\": -51811370,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"cillum in aliqua\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nu\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"amet\",\n    \"alias\": \"eu\"\n  },\n  \"trace_id\": \"eiusmod minim consequat\",\n  \"page\": {\n    \"type\": \"laboris occaecat\",\n    \"size\": 15013677,\n    \"current\": 91621481,\n    \"has_next\": true,\n    \"item_total\": -87388511,\n    \"next_id\": \"sed dolore velit sint\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c4e5a86a-ebf1-4722-8411-f21a0c0e9d34",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "63f3ea7c-353b-49f1-998f-c1873bf7c21a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1953-10-16T18:47:57.404Z\",\n  \"status\": 12592247,\n  \"error\": \"dolore qui\",\n  \"exception\": \"Lorem\",\n  \"message\": \"sit aute cillum aliqua\",\n  \"total_time_taken_in_millis\": 91879789,\n  \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n  \"items\": [\n    {\n      \"company_id\": -54337896,\n      \"integration_data\": {\n        \"in91\": {},\n        \"irurec5\": {}\n      },\n      \"company_name\": \"dol\",\n      \"task_details\": {\n        \"type\": -66609964,\n        \"group_list\": [\n          {\n            \"text\": \"do ut laborum eu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aute est ipsum esse\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 99040718.82489723,\n        \"safe_stock\": 50122105,\n        \"period_threshold\": 87687183,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ex id pariatur aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur proident Duis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"deserunt laboris ex aliquip\",\n      \"alias\": \"exercitation sunt amet\"\n    },\n    {\n      \"company_id\": 78253647,\n      \"integration_data\": {\n        \"sit__\": {},\n        \"sunt_22\": {}\n      },\n      \"company_name\": \"eiusmod\",\n      \"task_details\": {\n        \"type\": 64885104,\n        \"group_list\": [\n          {\n            \"text\": \"aute ex Exce\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod oc\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 63624537.927864075,\n        \"safe_stock\": 94999895,\n        \"period_threshold\": 85018651,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do sit ipsum proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nisi tempor incididunt\",\n      \"alias\": \"officia sunt consectetur\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -81804540,\n      \"integration_data\": {\n        \"adipisicing3f\": {}\n      },\n      \"company_name\": \"culpa occaecat\",\n      \"task_details\": {\n        \"type\": -71494731,\n        \"group_list\": [\n          {\n            \"text\": \"aliqua quis dolore la\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in ut dolor eu laborum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -8688788.318765402,\n        \"safe_stock\": -84210349,\n        \"period_threshold\": -94481021,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"cillum dolor velit magna q\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate consequat ipsum ad\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"adipisicing consequat\",\n      \"alias\": \"anim labore ad aliquip incididunt\"\n    },\n    {\n      \"company_id\": -31772027,\n      \"integration_data\": {\n        \"sit_97\": {},\n        \"amet4ad\": {},\n        \"dolorad\": {},\n        \"animd4\": {}\n      },\n      \"company_name\": \"eu quis consequat\",\n      \"task_details\": {\n        \"type\": -59529954,\n        \"group_list\": [\n          {\n            \"text\": \"laboris culpa\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"incididunt ut dolore magna nisi\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 69413993.63794857,\n        \"safe_stock\": -5456920,\n        \"period_threshold\": 25316495,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore m\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"non pariatur labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"voluptate dolore cillum exercitation aute\",\n      \"alias\": \"aliqua Duis nulla Ut aute\"\n    }\n  ],\n  \"trace_id\": \"reprehenderit cupidatat occaecat dolor\",\n  \"page\": {\n    \"type\": \"elit enim ullamco\",\n    \"size\": -51027522,\n    \"current\": 56622605,\n    \"has_next\": false,\n    \"item_total\": 89933899,\n    \"next_id\": \"ullamco reprehenderit\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1b220b88-ad53-4e21-8ecd-3d0722002347",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-07-28T05:47:07.725Z\",\n  \"status\": -22923867,\n  \"error\": \"deserunt Excepteur eiusmod quis aliqua\",\n  \"exception\": \"aute aliqua ullamco\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": -64598802,\n  \"http_status\": \"424 FAILED_DEPENDENCY\",\n  \"items\": [\n    {\n      \"company_id\": 39869416,\n      \"integration_data\": {\n        \"deserunt15e\": {},\n        \"in2cd\": {}\n      },\n      \"company_name\": \"Lorem id cillum ea\",\n      \"task_details\": {\n        \"type\": 34156265,\n        \"group_list\": [\n          {\n            \"text\": \"mollit exercitation\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7126356.980710387,\n        \"safe_stock\": 24757102,\n        \"period_threshold\": -70099029,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"do culpa esse\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis enim nostrud nisi consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut\",\n      \"alias\": \"dolore consequat\"\n    },\n    {\n      \"company_id\": -9755056,\n      \"integration_data\": {\n        \"inc\": {}\n      },\n      \"company_name\": \"nostrud sit e\",\n      \"task_details\": {\n        \"type\": -24651024,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation elit dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 13751714.973281577,\n        \"safe_stock\": -12633636,\n        \"period_threshold\": -47299084,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ut laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sit ipsum\",\n      \"alias\": \"magna ulla\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 34738862,\n      \"integration_data\": {\n        \"in_2\": {},\n        \"ipsum_4\": {}\n      },\n      \"company_name\": \"in reprehenderit\",\n      \"task_details\": {\n        \"type\": 61136766,\n        \"group_list\": [\n          {\n            \"text\": \"est non id enim ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat quis voluptate a\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -14563622.527271122,\n        \"safe_stock\": -95640816,\n        \"period_threshold\": -4717894,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur ut aliquip voluptate aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat qui sint veniam ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"enim irure dolore culpa\",\n      \"alias\": \"Ut\"\n    },\n    {\n      \"company_id\": 18805305,\n      \"integration_data\": {\n        \"in_2e\": {},\n        \"laboris_e\": {},\n        \"nisi_aa3\": {}\n      },\n      \"company_name\": \"sit dolor\",\n      \"task_details\": {\n        \"type\": -88674123,\n        \"group_list\": [\n          {\n            \"text\": \"proident consequat dolor aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aute in culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -2963830.0793768764,\n        \"safe_stock\": -4486750,\n        \"period_threshold\": -49838097,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nostrud exercitation Duis ut\",\n      \"alias\": \"commodo anim\"\n    }\n  ],\n  \"trace_id\": \"culpa sunt dolor\",\n  \"page\": {\n    \"type\": \"dolore consequat nostrud\",\n    \"size\": 77796669,\n    \"current\": 72004421,\n    \"has_next\": false,\n    \"item_total\": 80748223,\n    \"next_id\": \"proident Ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3f205c3e-30be-4dea-984d-c4517e24d43a",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2022-07-28T05:47:07.725Z\",\n  \"status\": -22923867,\n  \"error\": \"deserunt Excepteur eiusmod quis aliqua\",\n  \"exception\": \"aute aliqua ullamco\",\n  \"message\": \"ut\",\n  \"total_time_taken_in_millis\": -64598802,\n  \"http_status\": \"424 FAILED_DEPENDENCY\",\n  \"items\": [\n    {\n      \"company_id\": 39869416,\n      \"integration_data\": {\n        \"deserunt15e\": {},\n        \"in2cd\": {}\n      },\n      \"company_name\": \"Lorem id cillum ea\",\n      \"task_details\": {\n        \"type\": 34156265,\n        \"group_list\": [\n          {\n            \"text\": \"mollit exercitation\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7126356.980710387,\n        \"safe_stock\": 24757102,\n        \"period_threshold\": -70099029,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"do culpa esse\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Duis enim nostrud nisi consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut\",\n      \"alias\": \"dolore consequat\"\n    },\n    {\n      \"company_id\": -9755056,\n      \"integration_data\": {\n        \"inc\": {}\n      },\n      \"company_name\": \"nostrud sit e\",\n      \"task_details\": {\n        \"type\": -24651024,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation elit dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 13751714.973281577,\n        \"safe_stock\": -12633636,\n        \"period_threshold\": -47299084,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ut laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sit ipsum\",\n      \"alias\": \"magna ulla\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 34738862,\n      \"integration_data\": {\n        \"in_2\": {},\n        \"ipsum_4\": {}\n      },\n      \"company_name\": \"in reprehenderit\",\n      \"task_details\": {\n        \"type\": 61136766,\n        \"group_list\": [\n          {\n            \"text\": \"est non id enim ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat quis voluptate a\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -14563622.527271122,\n        \"safe_stock\": -95640816,\n        \"period_threshold\": -4717894,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur ut aliquip voluptate aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"fugiat qui sint veniam ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"enim irure dolore culpa\",\n      \"alias\": \"Ut\"\n    },\n    {\n      \"company_id\": 18805305,\n      \"integration_data\": {\n        \"in_2e\": {},\n        \"laboris_e\": {},\n        \"nisi_aa3\": {}\n      },\n      \"company_name\": \"sit dolor\",\n      \"task_details\": {\n        \"type\": -88674123,\n        \"group_list\": [\n          {\n            \"text\": \"proident consequat dolor aliqua\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aute in culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -2963830.0793768764,\n        \"safe_stock\": -4486750,\n        \"period_threshold\": -49838097,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"commodo reprehenderit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"nostrud exercitation Duis ut\",\n      \"alias\": \"commodo anim\"\n    }\n  ],\n  \"trace_id\": \"culpa sunt dolor\",\n  \"page\": {\n    \"type\": \"dolore consequat nostrud\",\n    \"size\": 77796669,\n    \"current\": 72004421,\n    \"has_next\": false,\n    \"item_total\": 80748223,\n    \"next_id\": \"proident Ut\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7a0a35f1-a10f-4396-a971-5093e28d8098",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "4c297c10-1588-490a-a82e-bf298e80f87d",
          "name": "getPanelExtensionDetails | Get extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get extension details",
            "description": {
              "content": "Use this API to get extension details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "858cc0ee-cab4-4492-b5d1-2e377c783b33",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "55d32a18-7784-4632-9b63-4c2ef708b1ac",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b6b09993-5923-43ac-87fc-4d40c40f1b06",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cb1a9b7c-6a83-4bad-b441-5ef06e587437",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f24e068c-348f-4985-8f97-f5e132355f0f",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "03e47509-cb14-4f7d-8fe8-520190ab422e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4cba4b0c-3958-4c9b-967a-f0ee45088ee5",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6746cf21-550f-4041-931d-2acbd46fc148",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f0f94cd0-1db8-4e42-9bee-3ba0f2ec92bc",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"consequat0\": 80758907.61986187,\n      \"culpa__1\": 17487087.762287736,\n      \"irure34b\": -92004533.8847295\n    },\n    \"meta\": {\n      \"esse4_\": -73004534,\n      \"deserunt_72d\": \"et minim ipsum aute pariatur\",\n      \"commodo_ce2\": \"adipisicing anim laborum\"\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "32e0585a-0587-4fbd-b473-e0ac710cb7de",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4e26e0a3-e40f-4c01-959f-e327ed4dec8e",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"minim8e\": -35682209.931666486,\n      \"tempor_0a\": -48814881\n    },\n    \"meta\": {\n      \"adipisicing_3d\": false,\n      \"esse_9f\": 90577343.68230611\n    }\n  },\n  \"event_schema\": {\n    \"cupidatat_8\": 81957959.83196309,\n    \"aute18\": -50023072\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "c26c76df-1cb7-4e0d-87f1-8f8addfc3fc1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "77577755-30f1-4c5d-8628-377731f6507d",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
