{
  "item": [
    {
      "id": "10f54ea7-7db7-449e-9d71-e0b072346917",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c5eef3a8-beb6-4459-a55c-f47aad52c54d",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7d2de151-04ce-4511-8efc-245f4a818cf1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "commodo dolore qui culpa",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e33a81cd-7163-4a7b-a409-90dbc1a61b7f",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "commodo dolore qui culpa",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "4a02f9e6-b6bb-4c3a-aeeb-d80a4b9f9f73",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "commodo dolore qui culpa",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a43e8b21-7575-4ac5-a4ff-9067407f23e9",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "328dffac-ce0e-4196-8b20-743cd17c6cad",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "b41d2d1a-30f9-4d03-8fb2-2c8e1ae2e08a",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "21913405-75f0-4219-aa7c-44a9d92dab44",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "680e2992-55b5-4c49-944c-8d730b051ab1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -8817162,\n   \"event_name\": \"mollit ipsum\",\n   \"event_type\": \"deserunt cupidatat\",\n   \"event_category\": \"in do\",\n   \"version\": \"est id\",\n   \"display_name\": \"incididunt Duis\",\n   \"description\": \"ex magna incididunt Lorem est\",\n   \"created_on\": \"sed ut in esse\"\n  },\n  {\n   \"id\": -79326891,\n   \"event_name\": \"amet dolor consec\",\n   \"event_type\": \"minim et velit qui\",\n   \"event_category\": \"proident do sed\",\n   \"version\": \"incididunt laborum adipisicing anim ipsum\",\n   \"display_name\": \"qui adipisicing dolor incididunt\",\n   \"description\": \"nulla Ut enim cillum\",\n   \"created_on\": \"ipsum nulla ut nisi\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8b522906-d2db-4172-904a-5e8ba60edecd",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "8a51e666-55a1-494b-bd33-86282c8552f6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 24010251,\n   \"event_name\": \"irure dolore\",\n   \"event_type\": \"id \",\n   \"event_category\": \"ad adipisicing ullamco ipsum\",\n   \"version\": \"aute reprehenderit quis\",\n   \"display_name\": \"ex in laboris est\",\n   \"description\": \"adipisicing sit et proident\",\n   \"created_on\": \"aute cupidatat fugiat consequat\"\n  },\n  {\n   \"id\": -28345997,\n   \"event_name\": \"sint anim irure\",\n   \"event_type\": \"proident ex elit culpa\",\n   \"event_category\": \"Duis\",\n   \"version\": \"sunt ad anim\",\n   \"display_name\": \"nulla ut\",\n   \"description\": \"non voluptate labore consectetur\",\n   \"created_on\": \"elit ad pariatur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "8d4937fb-cf84-4ade-a94e-f347055238e0",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2e199baf-2034-4445-b982-d0cae368f476",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cddb29bf-bddd-4705-a9d8-8511b0ac62a7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2011-02-05T11:24:57.889Z\",\n \"status\": -99664258,\n \"error\": \"voluptate ad sit\",\n \"exception\": \"aute Excepteur Lorem voluptate\",\n \"message\": \"id anim Duis eiusmod\",\n \"total_time_taken_in_millis\": -47833644,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": [\n  {\n   \"company_id\": 11803259,\n   \"integration_data\": {},\n   \"company_name\": \"id eu in enim\",\n   \"task_details\": {\n    \"type\": 75652642,\n    \"group_list\": [\n     {\n      \"text\": \"nulla dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"non Lorem sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66160597.44334506,\n    \"safe_stock\": -61830688,\n    \"period_threshold\": 91556940,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in nostrud ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in aute\",\n   \"alias\": \"ut consequat commodo\"\n  },\n  {\n   \"company_id\": -46481983,\n   \"integration_data\": {},\n   \"company_name\": \"laboris sint dolore\",\n   \"task_details\": {\n    \"type\": 66135514,\n    \"group_list\": [\n     {\n      \"text\": \"i\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -40101001.31218306,\n    \"safe_stock\": -38970233,\n    \"period_threshold\": 46151744,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris ad ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt quis dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu ut sunt\",\n   \"alias\": \"pariatur aute amet\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -93516611,\n   \"integration_data\": {},\n   \"company_name\": \"magna labore\",\n   \"task_details\": {\n    \"type\": 84462666,\n    \"group_list\": [\n     {\n      \"text\": \"cupid\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam nulla nostrud sint\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 27102678.37439005,\n    \"safe_stock\": -21534506,\n    \"period_threshold\": 62929105,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequat velit Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor non nulla commodo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"min\",\n   \"alias\": \"minim sit nulla incididunt\"\n  },\n  {\n   \"company_id\": 99732898,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation\",\n   \"task_details\": {\n    \"type\": -15625793,\n    \"group_list\": [\n     {\n      \"text\": \"dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo officia minim reprehenderit dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -66712051.55304847,\n    \"safe_stock\": -89358166,\n    \"period_threshold\": -98376406,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit occaecat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sunt\",\n   \"alias\": \"in ut eiusmod minim ea\"\n  }\n ],\n \"trace_id\": \"irure sed in \",\n \"page\": {\n  \"type\": \"fugiat aliqua ex laboris\",\n  \"size\": 94489708,\n  \"current\": -43127729,\n  \"has_next\": true,\n  \"item_total\": -11083059,\n  \"next_id\": \"eu consectetur et\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e97b6494-de99-477c-b151-7ea36d21a4ad",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-11-21T11:17:29.510Z\",\n \"status\": -34005051,\n \"error\": \"molli\",\n \"exception\": \"Excepteur anim\",\n \"message\": \"aliqua exercitation fugiat magna dolore\",\n \"total_time_taken_in_millis\": -69214510,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": [\n  {\n   \"company_id\": -78286577,\n   \"integration_data\": {},\n   \"company_name\": \"ex proident consequat dolor et\",\n   \"task_details\": {\n    \"type\": 63405604,\n    \"group_list\": [\n     {\n      \"text\": \"do Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum ad sint aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 27804540.132992536,\n    \"safe_stock\": 9985076,\n    \"period_threshold\": -33900040,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod in consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat est nisi ess\",\n   \"alias\": \"fugiat pariatur nulla\"\n  },\n  {\n   \"company_id\": -46553027,\n   \"integration_data\": {},\n   \"company_name\": \"ea officia consequat\",\n   \"task_details\": {\n    \"type\": -20108116,\n    \"group_list\": [\n     {\n      \"text\": \"eu proident irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 665570.6111088991,\n    \"safe_stock\": 46425822,\n    \"period_threshold\": 79058375,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"non sunt adipisicing fugiat voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit\",\n   \"alias\": \"in ullamco velit aute mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -66049179,\n   \"integration_data\": {},\n   \"company_name\": \"ex tempor\",\n   \"task_details\": {\n    \"type\": -69527494,\n    \"group_list\": [\n     {\n      \"text\": \"sit ex exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit ea dolore amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78936866.51938617,\n    \"safe_stock\": -16640694,\n    \"period_threshold\": 32536271,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa sit aliquip sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum\",\n   \"alias\": \"enim voluptate\"\n  },\n  {\n   \"company_id\": 48886930,\n   \"integration_data\": {},\n   \"company_name\": \"aute eu\",\n   \"task_details\": {\n    \"type\": 85086591,\n    \"group_list\": [\n     {\n      \"text\": \"nisi et Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat officia minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -41345772.65561661,\n    \"safe_stock\": -95204559,\n    \"period_threshold\": -56481784,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation magna non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse nulla enim laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum dolor ut\",\n   \"alias\": \"nostrud consectetur\"\n  }\n ],\n \"trace_id\": \"sit veniam\",\n \"page\": {\n  \"type\": \"nisi est\",\n  \"size\": -41053707,\n  \"current\": 13620311,\n  \"has_next\": false,\n  \"item_total\": 41859336,\n  \"next_id\": \"Duis sint deserunt pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "55b4f049-d280-46b9-9d99-295893d511c2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2015-11-21T11:17:29.510Z\",\n \"status\": -34005051,\n \"error\": \"molli\",\n \"exception\": \"Excepteur anim\",\n \"message\": \"aliqua exercitation fugiat magna dolore\",\n \"total_time_taken_in_millis\": -69214510,\n \"http_status\": \"418 I_AM_A_TEAPOT\",\n \"items\": [\n  {\n   \"company_id\": -78286577,\n   \"integration_data\": {},\n   \"company_name\": \"ex proident consequat dolor et\",\n   \"task_details\": {\n    \"type\": 63405604,\n    \"group_list\": [\n     {\n      \"text\": \"do Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum ad sint aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 27804540.132992536,\n    \"safe_stock\": 9985076,\n    \"period_threshold\": -33900040,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod in consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consequat est nisi ess\",\n   \"alias\": \"fugiat pariatur nulla\"\n  },\n  {\n   \"company_id\": -46553027,\n   \"integration_data\": {},\n   \"company_name\": \"ea officia consequat\",\n   \"task_details\": {\n    \"type\": -20108116,\n    \"group_list\": [\n     {\n      \"text\": \"eu proident irure\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 665570.6111088991,\n    \"safe_stock\": 46425822,\n    \"period_threshold\": 79058375,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"non sunt adipisicing fugiat voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"mollit\",\n   \"alias\": \"in ullamco velit aute mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -66049179,\n   \"integration_data\": {},\n   \"company_name\": \"ex tempor\",\n   \"task_details\": {\n    \"type\": -69527494,\n    \"group_list\": [\n     {\n      \"text\": \"sit ex exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit ea dolore amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78936866.51938617,\n    \"safe_stock\": -16640694,\n    \"period_threshold\": 32536271,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa sit aliquip sunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum\",\n   \"alias\": \"enim voluptate\"\n  },\n  {\n   \"company_id\": 48886930,\n   \"integration_data\": {},\n   \"company_name\": \"aute eu\",\n   \"task_details\": {\n    \"type\": 85086591,\n    \"group_list\": [\n     {\n      \"text\": \"nisi et Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat officia minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -41345772.65561661,\n    \"safe_stock\": -95204559,\n    \"period_threshold\": -56481784,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"exercitation magna non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse nulla enim laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ipsum dolor ut\",\n   \"alias\": \"nostrud consectetur\"\n  }\n ],\n \"trace_id\": \"sit veniam\",\n \"page\": {\n  \"type\": \"nisi est\",\n  \"size\": -41053707,\n  \"current\": 13620311,\n  \"has_next\": false,\n  \"item_total\": 41859336,\n  \"next_id\": \"Duis sint deserunt pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "96451e5d-b3ce-43ba-b3c4-4ff2de7c9a07",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "39161eec-12a6-4cb3-8660-21ec3724508b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-06-23T12:31:30.728Z\",\n \"status\": 36211752,\n \"error\": \"fugiat dolore\",\n \"exception\": \"veniam eiusmod\",\n \"message\": \"Lorem occaecat velit do\",\n \"total_time_taken_in_millis\": -53257918,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in null\",\n \"page\": {\n  \"type\": \"minim non fugiat\",\n  \"size\": 17170836,\n  \"current\": 82696195,\n  \"has_next\": false,\n  \"item_total\": -68461542,\n  \"next_id\": \"dolore in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8b31084b-0cf8-4769-8da5-a7b54db63c33",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-06-23T12:31:30.728Z\",\n \"status\": 36211752,\n \"error\": \"fugiat dolore\",\n \"exception\": \"veniam eiusmod\",\n \"message\": \"Lorem occaecat velit do\",\n \"total_time_taken_in_millis\": -53257918,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in null\",\n \"page\": {\n  \"type\": \"minim non fugiat\",\n  \"size\": 17170836,\n  \"current\": 82696195,\n  \"has_next\": false,\n  \"item_total\": -68461542,\n  \"next_id\": \"dolore in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "df2d85b2-b94e-4a54-85a2-13fad136a100",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-06-23T12:31:30.728Z\",\n \"status\": 36211752,\n \"error\": \"fugiat dolore\",\n \"exception\": \"veniam eiusmod\",\n \"message\": \"Lorem occaecat velit do\",\n \"total_time_taken_in_millis\": -53257918,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in null\",\n \"page\": {\n  \"type\": \"minim non fugiat\",\n  \"size\": 17170836,\n  \"current\": 82696195,\n  \"has_next\": false,\n  \"item_total\": -68461542,\n  \"next_id\": \"dolore in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "62a8af05-be12-4c5c-bf7f-e9b3b9dc6169",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "9466e41a-888a-4187-baa3-5dbf5ac62153",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-08-05T03:16:57.381Z\",\n \"status\": -57651316,\n \"error\": \"sint laboris commodo ullamco\",\n \"exception\": \"sit Excepteur amet incididunt\",\n \"message\": \"ad dolor mag\",\n \"total_time_taken_in_millis\": -33792138,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis in ipsum ut\",\n \"page\": {\n  \"type\": \"Duis\",\n  \"size\": -44101484,\n  \"current\": -41879467,\n  \"has_next\": false,\n  \"item_total\": 76205124,\n  \"next_id\": \"nisi Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "58c58cc6-8e43-472b-9d51-a596462acf6b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-08-05T03:16:57.381Z\",\n \"status\": -57651316,\n \"error\": \"sint laboris commodo ullamco\",\n \"exception\": \"sit Excepteur amet incididunt\",\n \"message\": \"ad dolor mag\",\n \"total_time_taken_in_millis\": -33792138,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis in ipsum ut\",\n \"page\": {\n  \"type\": \"Duis\",\n  \"size\": -44101484,\n  \"current\": -41879467,\n  \"has_next\": false,\n  \"item_total\": 76205124,\n  \"next_id\": \"nisi Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f0b94ff2-ee6c-4fec-9145-f2239176cf15",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-08-05T03:16:57.381Z\",\n \"status\": -57651316,\n \"error\": \"sint laboris commodo ullamco\",\n \"exception\": \"sit Excepteur amet incididunt\",\n \"message\": \"ad dolor mag\",\n \"total_time_taken_in_millis\": -33792138,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis in ipsum ut\",\n \"page\": {\n  \"type\": \"Duis\",\n  \"size\": -44101484,\n  \"current\": -41879467,\n  \"has_next\": false,\n  \"item_total\": 76205124,\n  \"next_id\": \"nisi Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d6cc5b2d-a8d2-49b6-bd4b-de6172ed054d",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-08-05T03:16:57.381Z\",\n \"status\": -57651316,\n \"error\": \"sint laboris commodo ullamco\",\n \"exception\": \"sit Excepteur amet incididunt\",\n \"message\": \"ad dolor mag\",\n \"total_time_taken_in_millis\": -33792138,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis in ipsum ut\",\n \"page\": {\n  \"type\": \"Duis\",\n  \"size\": -44101484,\n  \"current\": -41879467,\n  \"has_next\": false,\n  \"item_total\": 76205124,\n  \"next_id\": \"nisi Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1d127670-93fa-42bf-82be-5c844c94a2ad",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2012-08-05T03:16:57.381Z\",\n \"status\": -57651316,\n \"error\": \"sint laboris commodo ullamco\",\n \"exception\": \"sit Excepteur amet incididunt\",\n \"message\": \"ad dolor mag\",\n \"total_time_taken_in_millis\": -33792138,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis in ipsum ut\",\n \"page\": {\n  \"type\": \"Duis\",\n  \"size\": -44101484,\n  \"current\": -41879467,\n  \"has_next\": false,\n  \"item_total\": 76205124,\n  \"next_id\": \"nisi Lorem\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "25c3b9c1-16d3-40a7-8b10-0504c9f5101a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
