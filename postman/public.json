{
  "item": [
    {
      "id": "b170bbc4-6b66-4478-9054-7f8cf7e5fc9b",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1ceb0b95-0b84-4ba8-ad52-ef64e3c8c311",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c95b7391-2a8c-48d3-be94-94b003d1dee9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem veniam",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "34d90fd5-9aea-4d0e-a143-da8b52cdf958",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem veniam",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6a2c44d5-e33c-4539-bda9-3eec81757969",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Lorem veniam",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "25dd8991-f0be-4559-8128-aaff632bc57c",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "746ea670-12d3-45a1-9048-5dbafea63c07",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "e515ac86-0365-4f5a-b5d3-2fac564da55d",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "20900f7b-b1b0-4b8d-9461-06797bcc2367",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "5de9f2b6-816b-4068-9bcd-4d53ce33c7f4",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 33007008,\n   \"event_name\": \"et culpa\",\n   \"event_type\": \"id minim dolor velit laboris\",\n   \"event_category\": \"consequat\",\n   \"version\": \"incididunt ipsum\",\n   \"display_name\": \"aute magna esse\",\n   \"description\": \"sed in laborum dolor eiusmod\",\n   \"created_on\": \"non in\"\n  },\n  {\n   \"id\": 75190832,\n   \"event_name\": \"Ut\",\n   \"event_type\": \"ullamco ut cillum\",\n   \"event_category\": \"Ut Excepteur\",\n   \"version\": \"qui\",\n   \"display_name\": \"tempor nostrud dolore do\",\n   \"description\": \"ut ut\",\n   \"created_on\": \"sunt veniam pariatur irure\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "c2736219-f1e0-4a5d-b886-f6b526b8b1e5",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "0c05800f-9d65-4aa4-a014-bcc601654305",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -11306466,\n   \"event_name\": \"proident\",\n   \"event_type\": \"qui\",\n   \"event_category\": \"adipisicing ut dolor non\",\n   \"version\": \"quis sed\",\n   \"display_name\": \"veniam in commodo\",\n   \"description\": \"fugiat culpa consectetur id\",\n   \"created_on\": \"dolor\"\n  },\n  {\n   \"id\": -95601260,\n   \"event_name\": \"deserunt et id\",\n   \"event_type\": \"nulla minim consequat nostrud id\",\n   \"event_category\": \"culpa officia\",\n   \"version\": \"in tempor nulla dolore\",\n   \"display_name\": \"dolor ex tempor consequat non\",\n   \"description\": \"officia enim\",\n   \"created_on\": \"enim aliquip nulla consectetur\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "f0e0f7f2-fb51-438c-a914-e2b324811085",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "07e5e66e-c763-4e6e-8e30-ce8a7ec00847",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9d5f0917-f85e-41e0-a2b6-cfc0aef9ea3f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-10-16T06:42:12.114Z\",\n \"status\": 55211076,\n \"error\": \"ut\",\n \"exception\": \"culpa\",\n \"message\": \"elit\",\n \"total_time_taken_in_millis\": -33828380,\n \"http_status\": \"204 NO_CONTENT\",\n \"items\": [\n  {\n   \"company_id\": 24446015,\n   \"integration_data\": {},\n   \"company_name\": \"ut adipisicing\",\n   \"task_details\": {\n    \"type\": 72002338,\n    \"group_list\": [\n     {\n      \"text\": \"minim nisi labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor id anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 49685746.93150863,\n    \"safe_stock\": -39880383,\n    \"period_threshold\": 70270248,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore officia dolor incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"c\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur cu\",\n   \"alias\": \"Excepteur reprehenderit\"\n  },\n  {\n   \"company_id\": -64338793,\n   \"integration_data\": {},\n   \"company_name\": \"irure et\",\n   \"task_details\": {\n    \"type\": 29999147,\n    \"group_list\": [\n     {\n      \"text\": \"esse ipsum in reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui ipsum amet tempor cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 10680401.159633934,\n    \"safe_stock\": 39006219,\n    \"period_threshold\": -43047147,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eu in ut dolor veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in occaecat magna cillum\",\n   \"alias\": \"nisi\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 17967721,\n   \"integration_data\": {},\n   \"company_name\": \"q\",\n   \"task_details\": {\n    \"type\": 8508959,\n    \"group_list\": [\n     {\n      \"text\": \"est labore in sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -24010516.921722755,\n    \"safe_stock\": 83999519,\n    \"period_threshold\": 3050861,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo quis laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"veniam ex\",\n   \"alias\": \"proident in esse\"\n  },\n  {\n   \"company_id\": -66507892,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco aliqua ex dolor consectetur\",\n   \"task_details\": {\n    \"type\": -51403645,\n    \"group_list\": [\n     {\n      \"text\": \"veniam ex nulla dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod dolor consectetur ea\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -71222410.36384462,\n    \"safe_stock\": -42269105,\n    \"period_threshold\": -70886989,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"est Ut id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor amet aliqua ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut\",\n   \"alias\": \"proident\"\n  }\n ],\n \"trace_id\": \"consequat sit nostr\",\n \"page\": {\n  \"type\": \"reprehenderit ut incididunt tempor\",\n  \"size\": 41298459,\n  \"current\": 1016338,\n  \"has_next\": false,\n  \"item_total\": 43764538,\n  \"next_id\": \"culpa quis pariatur\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3df1fdd6-56a5-4564-821f-8732ea4241b0",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-07-20T01:25:52.698Z\",\n \"status\": 40418895,\n \"error\": \"elit veniam non aliquip\",\n \"exception\": \"qui Ut do\",\n \"message\": \"an\",\n \"total_time_taken_in_millis\": -94619781,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": [\n  {\n   \"company_id\": -11801914,\n   \"integration_data\": {},\n   \"company_name\": \"irure velit\",\n   \"task_details\": {\n    \"type\": -51910338,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore aliqua nulla aute \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 50488344.577699006,\n    \"safe_stock\": -51138669,\n    \"period_threshold\": -96031372,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt veniam dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam exercitation dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"voluptate sed\",\n   \"alias\": \"ullamco mollit aliquip\"\n  },\n  {\n   \"company_id\": -42907780,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum enim aliquip amet\",\n   \"task_details\": {\n    \"type\": -80071108,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur mollit fugiat do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19218214.378687873,\n    \"safe_stock\": -11871548,\n    \"period_threshold\": -24804062,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing in Excepteur ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in eu adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse sed occaecat\",\n   \"alias\": \"aliqua aute velit dolore\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 42822935,\n   \"integration_data\": {},\n   \"company_name\": \"id\",\n   \"task_details\": {\n    \"type\": -43018768,\n    \"group_list\": [\n     {\n      \"text\": \"sit aute aliquip Lorem incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercita\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -52285858.87554385,\n    \"safe_stock\": -76143685,\n    \"period_threshold\": -33144283,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur laboris eiusmod sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in et esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur eu in aute\",\n   \"alias\": \"magna laborum nost\"\n  },\n  {\n   \"company_id\": 70913269,\n   \"integration_data\": {},\n   \"company_name\": \"sed cupidatat deserunt Duis\",\n   \"task_details\": {\n    \"type\": -38518549,\n    \"group_list\": [\n     {\n      \"text\": \"mollit in proident non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed voluptate pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98258264.1928877,\n    \"safe_stock\": -18766919,\n    \"period_threshold\": 81822767,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor ut\",\n   \"alias\": \"Duis ea do\"\n  }\n ],\n \"trace_id\": \"Ut\",\n \"page\": {\n  \"type\": \"magna do Lorem\",\n  \"size\": 84429274,\n  \"current\": 88270411,\n  \"has_next\": false,\n  \"item_total\": -15288266,\n  \"next_id\": \"velit dolore officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7b298125-58eb-4565-b670-8ab3f4f7d610",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1974-07-20T01:25:52.698Z\",\n \"status\": 40418895,\n \"error\": \"elit veniam non aliquip\",\n \"exception\": \"qui Ut do\",\n \"message\": \"an\",\n \"total_time_taken_in_millis\": -94619781,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": [\n  {\n   \"company_id\": -11801914,\n   \"integration_data\": {},\n   \"company_name\": \"irure velit\",\n   \"task_details\": {\n    \"type\": -51910338,\n    \"group_list\": [\n     {\n      \"text\": \"Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore aliqua nulla aute \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 50488344.577699006,\n    \"safe_stock\": -51138669,\n    \"period_threshold\": -96031372,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt veniam dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam exercitation dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"voluptate sed\",\n   \"alias\": \"ullamco mollit aliquip\"\n  },\n  {\n   \"company_id\": -42907780,\n   \"integration_data\": {},\n   \"company_name\": \"ipsum enim aliquip amet\",\n   \"task_details\": {\n    \"type\": -80071108,\n    \"group_list\": [\n     {\n      \"text\": \"consectetur mollit fugiat do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Excepteur nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 19218214.378687873,\n    \"safe_stock\": -11871548,\n    \"period_threshold\": -24804062,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"adipisicing in Excepteur ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in eu adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse sed occaecat\",\n   \"alias\": \"aliqua aute velit dolore\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 42822935,\n   \"integration_data\": {},\n   \"company_name\": \"id\",\n   \"task_details\": {\n    \"type\": -43018768,\n    \"group_list\": [\n     {\n      \"text\": \"sit aute aliquip Lorem incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercita\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -52285858.87554385,\n    \"safe_stock\": -76143685,\n    \"period_threshold\": -33144283,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur laboris eiusmod sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in et esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur eu in aute\",\n   \"alias\": \"magna laborum nost\"\n  },\n  {\n   \"company_id\": 70913269,\n   \"integration_data\": {},\n   \"company_name\": \"sed cupidatat deserunt Duis\",\n   \"task_details\": {\n    \"type\": -38518549,\n    \"group_list\": [\n     {\n      \"text\": \"mollit in proident non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed voluptate pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -98258264.1928877,\n    \"safe_stock\": -18766919,\n    \"period_threshold\": 81822767,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"dolor ut\",\n   \"alias\": \"Duis ea do\"\n  }\n ],\n \"trace_id\": \"Ut\",\n \"page\": {\n  \"type\": \"magna do Lorem\",\n  \"size\": 84429274,\n  \"current\": 88270411,\n  \"has_next\": false,\n  \"item_total\": -15288266,\n  \"next_id\": \"velit dolore officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2b2752c7-8046-4f37-bfac-c3feb443cf7b",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "722ef9e7-e822-4177-8cd0-9e1da7bfd2ff",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-08-19T05:19:45.826Z\",\n \"status\": 92081898,\n \"error\": \"aliquip ut ullamco minim\",\n \"exception\": \"eu officia veniam\",\n \"message\": \"eu qui est velit\",\n \"total_time_taken_in_millis\": 96873685,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consequat est\",\n \"page\": {\n  \"type\": \"pariatur cupidatat Lorem\",\n  \"size\": 72721614,\n  \"current\": -77393008,\n  \"has_next\": false,\n  \"item_total\": 96251635,\n  \"next_id\": \"et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b28ea73b-b396-44b4-9fbd-a5eeaa152e1f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-08-19T05:19:45.826Z\",\n \"status\": 92081898,\n \"error\": \"aliquip ut ullamco minim\",\n \"exception\": \"eu officia veniam\",\n \"message\": \"eu qui est velit\",\n \"total_time_taken_in_millis\": 96873685,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consequat est\",\n \"page\": {\n  \"type\": \"pariatur cupidatat Lorem\",\n  \"size\": 72721614,\n  \"current\": -77393008,\n  \"has_next\": false,\n  \"item_total\": 96251635,\n  \"next_id\": \"et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9930534d-0244-4fd9-a6d4-7b3986a7ff8f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1945-08-19T05:19:45.826Z\",\n \"status\": 92081898,\n \"error\": \"aliquip ut ullamco minim\",\n \"exception\": \"eu officia veniam\",\n \"message\": \"eu qui est velit\",\n \"total_time_taken_in_millis\": 96873685,\n \"http_status\": \"102 PROCESSING\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"consequat est\",\n \"page\": {\n  \"type\": \"pariatur cupidatat Lorem\",\n  \"size\": 72721614,\n  \"current\": -77393008,\n  \"has_next\": false,\n  \"item_total\": 96251635,\n  \"next_id\": \"et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "390ceb63-5334-488d-8347-4e705739319c",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "dfe857dd-b57f-4ac5-963d-bb93e36683b3",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-09-24T10:41:25.452Z\",\n \"status\": -15003826,\n \"error\": \"exercitation nulla irure minim\",\n \"exception\": \"amet id dolor\",\n \"message\": \"sunt tempor consequat\",\n \"total_time_taken_in_millis\": -84011676,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"enim laboris\",\n \"page\": {\n  \"type\": \"in irure\",\n  \"size\": -98632060,\n  \"current\": -48430179,\n  \"has_next\": false,\n  \"item_total\": -54472168,\n  \"next_id\": \"ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3e472f31-438c-42b0-89f0-08ea10858397",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-09-24T10:41:25.452Z\",\n \"status\": -15003826,\n \"error\": \"exercitation nulla irure minim\",\n \"exception\": \"amet id dolor\",\n \"message\": \"sunt tempor consequat\",\n \"total_time_taken_in_millis\": -84011676,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"enim laboris\",\n \"page\": {\n  \"type\": \"in irure\",\n  \"size\": -98632060,\n  \"current\": -48430179,\n  \"has_next\": false,\n  \"item_total\": -54472168,\n  \"next_id\": \"ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fb8d9928-1c42-4b0e-91b8-0bc29fa8b5ce",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-09-24T10:41:25.452Z\",\n \"status\": -15003826,\n \"error\": \"exercitation nulla irure minim\",\n \"exception\": \"amet id dolor\",\n \"message\": \"sunt tempor consequat\",\n \"total_time_taken_in_millis\": -84011676,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"enim laboris\",\n \"page\": {\n  \"type\": \"in irure\",\n  \"size\": -98632060,\n  \"current\": -48430179,\n  \"has_next\": false,\n  \"item_total\": -54472168,\n  \"next_id\": \"ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "adb56ea3-fdea-498d-8a4b-74d151ccc522",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-09-24T10:41:25.452Z\",\n \"status\": -15003826,\n \"error\": \"exercitation nulla irure minim\",\n \"exception\": \"amet id dolor\",\n \"message\": \"sunt tempor consequat\",\n \"total_time_taken_in_millis\": -84011676,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"enim laboris\",\n \"page\": {\n  \"type\": \"in irure\",\n  \"size\": -98632060,\n  \"current\": -48430179,\n  \"has_next\": false,\n  \"item_total\": -54472168,\n  \"next_id\": \"ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fc282432-f6b8-4e07-b4f4-68bff6d6f9b1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-09-24T10:41:25.452Z\",\n \"status\": -15003826,\n \"error\": \"exercitation nulla irure minim\",\n \"exception\": \"amet id dolor\",\n \"message\": \"sunt tempor consequat\",\n \"total_time_taken_in_millis\": -84011676,\n \"http_status\": \"451 UNAVAILABLE_FOR_LEGAL_REASONS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"enim laboris\",\n \"page\": {\n  \"type\": \"in irure\",\n  \"size\": -98632060,\n  \"current\": -48430179,\n  \"has_next\": false,\n  \"item_total\": -54472168,\n  \"next_id\": \"ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "be677f79-5ee6-4ad9-b5c9-1484afebf44e",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
