{
  "item": [
    {
      "id": "c696e840-395f-45c7-bb9c-c2be086097ae",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "db6567c2-6f80-4ab5-aff5-298e72aba5ae",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2e870383-f1c6-4031-979f-770d413dffb2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"laboris\",\n        \"occaecat laborum eiusmod\"\n      ],\n      \"tags\": [\n        \"amet laboris pariatur\",\n        \"dolore proident\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"ut dolore fugiat\",\n        \"in minim\"\n      ],\n      \"tags\": [\n        \"est eiusmod amet\",\n        \"dolor pariatur ut et\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"cillum irure ullamco laboris\",\n      \"dolore esse nulla\"\n    ],\n    \"tags\": [\n      \"do commodo laboris aute\",\n      \"velit magna tempor non in\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0addb367-94dc-421e-bba1-de8cc961db5d",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6d6127c9-b28f-4140-a6aa-3e2f8ab79bd6",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1856bbbf-053e-40ec-8bd8-0f6e7d189ef1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a54720bf-14cd-452f-bcf1-e6bd7918dffc",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8f36ab71-4bcf-4628-9988-f43ebd158318",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in in ad",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "0bce0070-2d09-45cb-826d-56e2b6159ce8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in in ad",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "211dbe8a-2309-4fd5-b1a9-c8580fe58377",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in in ad",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e0599665-b727-477d-9b4c-34bd7b281776",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fdfd97f0-d632-4304-b021-7d0e0594ae2a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"sit consectetur eiusmod\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"quis cupidatat enim nulla\",\n      \"country_code\": \"tempor commodo\",\n      \"latitude\": \"dolore est amet\",\n      \"longitude\": \"laboris ipsum do veniam\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"c\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"ut aute reprehenderit elit\",\n      \"country_code\": \"labore pariatur\",\n      \"latitude\": \"sed id ipsum\",\n      \"longitude\": \"quis in nostrud cillum\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0ba1bdd9-c9fb-49c3-9b25-c5957b4743fb",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "376e2092-8162-4470-b0f8-c34ad46859d0",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "476853d9-7b48-433f-bcc6-ede8d4cdc701",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "84c55a2d-4063-430e-911d-ee11c2645739",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "0ca88036-dde7-4e9a-8511-ec99ae622d23",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2da3252a-d27b-4edc-bb01-3f6c7efb5c7b",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "119745f0-48d0-4062-ab4f-404de704bd67",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-02-06T00:38:52.353Z\",\n  \"status\": 33778284,\n  \"error\": \"est cu\",\n  \"exception\": \"eu esse irure\",\n  \"message\": \"occaecat do ut quis pariatur\",\n  \"total_time_taken_in_millis\": -15379038,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"i\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a32f4ffe-7695-4846-8ffd-36193a7c421d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-02-06T00:38:52.353Z\",\n  \"status\": 33778284,\n  \"error\": \"est cu\",\n  \"exception\": \"eu esse irure\",\n  \"message\": \"occaecat do ut quis pariatur\",\n  \"total_time_taken_in_millis\": -15379038,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"i\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e295a11c-3428-49fe-af07-223d99c79bab",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-02-06T00:38:52.353Z\",\n  \"status\": 33778284,\n  \"error\": \"est cu\",\n  \"exception\": \"eu esse irure\",\n  \"message\": \"occaecat do ut quis pariatur\",\n  \"total_time_taken_in_millis\": -15379038,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"i\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "df3f125f-3e6c-4360-8f8f-67c6a17619db",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6dc2a35e-82bd-4bf0-a80e-4719ed6ad2ba",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-10-29T17:24:27.609Z\",\n  \"status\": 99550711,\n  \"error\": \"deserunt proident incididunt pariatur ut\",\n  \"exception\": \"ut nulla cillum eiusmod\",\n  \"message\": \"aliquip Duis\",\n  \"total_time_taken_in_millis\": -77016370,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "84befe85-5da0-4b06-9fa1-4855d4f2cfd6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-10-29T17:24:27.609Z\",\n  \"status\": 99550711,\n  \"error\": \"deserunt proident incididunt pariatur ut\",\n  \"exception\": \"ut nulla cillum eiusmod\",\n  \"message\": \"aliquip Duis\",\n  \"total_time_taken_in_millis\": -77016370,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dc1d424f-ed44-4deb-b622-bce2f365ea2f",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-10-29T17:24:27.609Z\",\n  \"status\": 99550711,\n  \"error\": \"deserunt proident incididunt pariatur ut\",\n  \"exception\": \"ut nulla cillum eiusmod\",\n  \"message\": \"aliquip Duis\",\n  \"total_time_taken_in_millis\": -77016370,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ce0b65ea-66a5-4c08-8569-bc8ba816ad8e",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-10-29T17:24:27.609Z\",\n  \"status\": 99550711,\n  \"error\": \"deserunt proident incididunt pariatur ut\",\n  \"exception\": \"ut nulla cillum eiusmod\",\n  \"message\": \"aliquip Duis\",\n  \"total_time_taken_in_millis\": -77016370,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c9db8c99-78aa-4b0e-9e73-c138db98a504",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1951-10-29T17:24:27.609Z\",\n  \"status\": 99550711,\n  \"error\": \"deserunt proident incididunt pariatur ut\",\n  \"exception\": \"ut nulla cillum eiusmod\",\n  \"message\": \"aliquip Duis\",\n  \"total_time_taken_in_millis\": -77016370,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cdc2ea0c-dfe2-4d3d-81f1-d41018a50cae",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cedbcf67-8eb3-40f9-ae04-fe76f2e23767",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-10-29T23:20:20.912Z\",\n  \"status\": 59152011,\n  \"error\": \"anim minim incididunt\",\n  \"exception\": \"sed\",\n  \"message\": \"veniam\",\n  \"total_time_taken_in_millis\": 12125612,\n  \"http_status\": \"412 PRECONDITION_FAILED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"pariatur in\",\n      \"description\": \"\",\n      \"name\": \"ut adipisicing sed nostrud\",\n      \"slug\": \"mollit adipisicing ullamco\",\n      \"meta\": [\n        {\n          \"_id\": \"labore adipisicing Exce\",\n          \"name\": \"non nostrud minim occaecat aute\",\n          \"value\": \"\"\n        },\n        {\n          \"_id\": \"ea id in\",\n          \"name\": \"qui eiusmod\",\n          \"value\": \"dolore laborum in anim nulla\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"id incididunt sint veniam Lorem\",\n        \"integration\": \"sit \",\n        \"level\": \"Duis Ut consequat\",\n        \"uid\": -33820481,\n        \"opted\": true,\n        \"permissions\": [\n          \"commodo\",\n          \"ut ve\"\n        ],\n        \"token\": \"ut aliqua Ut nulla\",\n        \"name\": \"rep\",\n        \"stores\": [\n          {\n            \"_id\": \"deserunt enim\",\n            \"integration\": \"aute ut\",\n            \"level\": \"ea aute\",\n            \"uid\": 97953236,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim proident\",\n            \"code\": \"magna consequat\",\n            \"name\": \"officia eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nostrud voluptate mollit dolor occaecat\",\n            \"integration\": \"v\",\n            \"level\": \"reprehenderit et\",\n            \"uid\": 82976164,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consequat ex ipsum\",\n            \"code\": \"consequat non\",\n            \"name\": \"Lorem minim ipsum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"in Excepteur fugiat ut eiusmod\",\n        \"integration\": \"quis et\",\n        \"level\": \"ipsum\",\n        \"uid\": 35864834,\n        \"opted\": true,\n        \"permissions\": [\n          \"commodo dolore enim\",\n          \"tempor in consequat\"\n        ],\n        \"token\": \"mollit cupidatat laborum quis\",\n        \"name\": \"aliqua aut\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum non laboris fugiat\",\n            \"integration\": \"commo\",\n            \"level\": \"aliqua\",\n            \"uid\": 84758125,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nisi sint est nostrud\",\n            \"code\": \"esse anim\",\n            \"name\": \"exercitation et sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"pariatur in ve\",\n            \"integration\": \"ut ad fugiat dolore\",\n            \"level\": \"adipisicing\",\n            \"uid\": 62789135,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in commodo culpa \",\n            \"code\": \"cil\",\n            \"name\": \"veniam cup\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"Lorem ut\",\n      \"description\": \"irure proident amet\",\n      \"name\": \"dolore aute deserunt\",\n      \"slug\": \"dolor\",\n      \"meta\": [\n        {\n          \"_id\": \"laboris ut Ut nostrud velit\",\n          \"name\": \"nisi tempor deser\",\n          \"value\": \"ipsum\"\n        },\n        {\n          \"_id\": \"magna proident ullamco Lorem\",\n          \"name\": \"consectetur esse quis eiusmod\",\n          \"value\": \"exercitation cillum eu con\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"pariatur Excepteur enim\",\n        \"integration\": \"ipsum quis\",\n        \"level\": \"exercitation in\",\n        \"uid\": -7417465,\n        \"opted\": true,\n        \"permissions\": [\n          \"sint in\",\n          \"incididunt\"\n        ],\n        \"token\": \"in officia culpa\",\n        \"name\": \"ut nulla irure\",\n        \"stores\": [\n          {\n            \"_id\": \"et consectetur ullamco culpa\",\n            \"integration\": \"qui \",\n            \"level\": \"labore pariatur\",\n            \"uid\": 8722254,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"veniam consectetur laboris tempor deserunt\",\n            \"code\": \"Lorem ut e\",\n            \"name\": \"enim eu dolore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nisi dolore qui id et\",\n            \"integration\": \"irure in est\",\n            \"level\": \"quis ad laboris consectet\",\n            \"uid\": -1836106,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"reprehenderit aliqua\",\n            \"code\": \"mollit laboris ullamco laborum\",\n            \"name\": \"irure aliqua enim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"culpa sint esse ad\",\n        \"integration\": \"Excepteur nostrud in cupidatat\",\n        \"level\": \"velit enim pariatur\",\n        \"uid\": -4258005,\n        \"opted\": false,\n        \"permissions\": [\n          \"elit sit exercitation minim ea\",\n          \"dolore\"\n        ],\n        \"token\": \"enim quis dolor\",\n        \"name\": \"qui sint Excepteur\",\n        \"stores\": [\n          {\n            \"_id\": \"laboris nostrud\",\n            \"integration\": \"tempor non r\",\n            \"level\": \"ut\",\n            \"uid\": 39190591,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud aliqua culpa\",\n            \"code\": \"ipsum velit nisi in\",\n            \"name\": \"nisi enim tempor aute nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"do labore tempor consequat minim\",\n            \"integration\": \"ad\",\n            \"level\": \"nostrud nisi officia velit\",\n            \"uid\": -69485641,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut eiusmod\",\n            \"code\": \"id aliqua dolore sunt dolor\",\n            \"name\": \"aliqua ut consectetur cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"in incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "431213e2-9431-4a17-9164-a128f4378207",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1959-12-27T01:49:58.197Z\",\n  \"status\": -75911134,\n  \"error\": \"laboris\",\n  \"exception\": \"aute aliqua nisi culpa tempor\",\n  \"message\": \"eu exercitation consectetur aliquip\",\n  \"total_time_taken_in_millis\": 1035005,\n  \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"cup\",\n      \"description\": \"dolor magna\",\n      \"name\": \"consectetur incididunt aliqua\",\n      \"slug\": \"quis cillum magna\",\n      \"meta\": [\n        {\n          \"_id\": \"veniam est\",\n          \"name\": \"ut voluptate irure anim\",\n          \"value\": \"Ut ut eu\"\n        },\n        {\n          \"_id\": \"sint nulla in\",\n          \"name\": \"esse quis\",\n          \"value\": \"irure consectetur anim Ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"elit et\",\n        \"integration\": \"ipsum officia sint\",\n        \"level\": \"est dolor incididunt\",\n        \"uid\": -24441315,\n        \"opted\": true,\n        \"permissions\": [\n          \"culpa pariatur aliquip cupidatat\",\n          \"occaecat in pariatur dolor dolore\"\n        ],\n        \"token\": \"esse laboris nulla\",\n        \"name\": \"velit eiusmod sed amet\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor Lorem ullamco adipisicing\",\n            \"integration\": \"dolore dolore\",\n            \"level\": \"magna incididunt labore Lorem\",\n            \"uid\": -64908986,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing officia in aute\",\n            \"code\": \"proident\",\n            \"name\": \"eu in aute eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"a\",\n            \"level\": \"fugiat mollit in adipisicing\",\n            \"uid\": 16315264,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis eni\",\n            \"code\": \"et dolor laborum\",\n            \"name\": \"ut qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"nisi\",\n        \"integration\": \"ipsum veniam\",\n        \"level\": \"in tempor culpa ipsum\",\n        \"uid\": 28337325,\n        \"opted\": false,\n        \"permissions\": [\n          \"incididunt reprehenderit in\",\n          \"ut commodo mollit quis\"\n        ],\n        \"token\": \"ut nisi\",\n        \"name\": \"nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"adipisicing mollit et in\",\n            \"integration\": \"magna amet ullamco dolore\",\n            \"level\": \"aute tempor ex veniam\",\n            \"uid\": 74099165,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lorem id magna deserunt\",\n            \"code\": \"proident velit laboris dolore\",\n            \"name\": \"occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"est\",\n            \"integration\": \"voluptate eu veniam\",\n            \"level\": \"elit in aute eu\",\n            \"uid\": -13068224,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"est veniam \",\n            \"code\": \"nulla voluptate labore\",\n            \"name\": \"aute in sed in deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"esse irure nisi\",\n      \"description\": \"dolor do dolore\",\n      \"name\": \"quis tempor velit occaecat\",\n      \"slug\": \"sit\",\n      \"meta\": [\n        {\n          \"_id\": \"se\",\n          \"name\": \"aute do\",\n          \"value\": \"elit do in\"\n        },\n        {\n          \"_id\": \"sit conse\",\n          \"name\": \"ad ex Excepteur\",\n          \"value\": \"Ut culpa\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"proi\",\n        \"integration\": \"velit\",\n        \"level\": \"quis in elit ut\",\n        \"uid\": 31983290,\n        \"opted\": false,\n        \"permissions\": [\n          \"proident cillum laboris deserunt\",\n          \"minim dolore veniam mollit deserunt\"\n        ],\n        \"token\": \"exercitation pariatur quis\",\n        \"name\": \"non Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"Excepteur Ut Lorem aliqua\",\n            \"integration\": \"minim\",\n            \"level\": \"et\",\n            \"uid\": -30810847,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sed cillum\",\n            \"code\": \"Duis enim occaecat\",\n            \"name\": \"in sed Excepteur ullamco\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"est Excepteur eu\",\n            \"integration\": \"est labore aliquip deserunt\",\n            \"level\": \"occaecat voluptate dolore\",\n            \"uid\": 67717039,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud dolor in\",\n            \"code\": \"irure consequat ex\",\n            \"name\": \"labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"quis tempor ea\",\n        \"integration\": \"cupidat\",\n        \"level\": \"par\",\n        \"uid\": 60186877,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate ex velit\",\n          \"proident consectetur Duis\"\n        ],\n        \"token\": \"proident fugiat\",\n        \"name\": \"ex\",\n        \"stores\": [\n          {\n            \"_id\": \"aliquip velit sit ea eiusmod\",\n            \"integration\": \"Lorem\",\n            \"level\": \"Ut proident enim\",\n            \"uid\": -70196552,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu Lorem dolore\",\n            \"code\": \"laboris ad commodo\",\n            \"name\": \"labore reprehenderit Duis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"laboris irure\",\n            \"integration\": \"ut anim\",\n            \"level\": \"minim culpa aute eiu\",\n            \"uid\": -51408019,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse do\",\n            \"code\": \"officia ve\",\n            \"name\": \"pa\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ipsum occaecat ex in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7331da03-9424-471c-a427-fa420a1d2d1f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1959-12-27T01:49:58.197Z\",\n  \"status\": -75911134,\n  \"error\": \"laboris\",\n  \"exception\": \"aute aliqua nisi culpa tempor\",\n  \"message\": \"eu exercitation consectetur aliquip\",\n  \"total_time_taken_in_millis\": 1035005,\n  \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"cup\",\n      \"description\": \"dolor magna\",\n      \"name\": \"consectetur incididunt aliqua\",\n      \"slug\": \"quis cillum magna\",\n      \"meta\": [\n        {\n          \"_id\": \"veniam est\",\n          \"name\": \"ut voluptate irure anim\",\n          \"value\": \"Ut ut eu\"\n        },\n        {\n          \"_id\": \"sint nulla in\",\n          \"name\": \"esse quis\",\n          \"value\": \"irure consectetur anim Ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"elit et\",\n        \"integration\": \"ipsum officia sint\",\n        \"level\": \"est dolor incididunt\",\n        \"uid\": -24441315,\n        \"opted\": true,\n        \"permissions\": [\n          \"culpa pariatur aliquip cupidatat\",\n          \"occaecat in pariatur dolor dolore\"\n        ],\n        \"token\": \"esse laboris nulla\",\n        \"name\": \"velit eiusmod sed amet\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor Lorem ullamco adipisicing\",\n            \"integration\": \"dolore dolore\",\n            \"level\": \"magna incididunt labore Lorem\",\n            \"uid\": -64908986,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"adipisicing officia in aute\",\n            \"code\": \"proident\",\n            \"name\": \"eu in aute eiusmod\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"nulla\",\n            \"integration\": \"a\",\n            \"level\": \"fugiat mollit in adipisicing\",\n            \"uid\": 16315264,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis eni\",\n            \"code\": \"et dolor laborum\",\n            \"name\": \"ut qui\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"nisi\",\n        \"integration\": \"ipsum veniam\",\n        \"level\": \"in tempor culpa ipsum\",\n        \"uid\": 28337325,\n        \"opted\": false,\n        \"permissions\": [\n          \"incididunt reprehenderit in\",\n          \"ut commodo mollit quis\"\n        ],\n        \"token\": \"ut nisi\",\n        \"name\": \"nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"adipisicing mollit et in\",\n            \"integration\": \"magna amet ullamco dolore\",\n            \"level\": \"aute tempor ex veniam\",\n            \"uid\": 74099165,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Lorem id magna deserunt\",\n            \"code\": \"proident velit laboris dolore\",\n            \"name\": \"occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"est\",\n            \"integration\": \"voluptate eu veniam\",\n            \"level\": \"elit in aute eu\",\n            \"uid\": -13068224,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"est veniam \",\n            \"code\": \"nulla voluptate labore\",\n            \"name\": \"aute in sed in deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"esse irure nisi\",\n      \"description\": \"dolor do dolore\",\n      \"name\": \"quis tempor velit occaecat\",\n      \"slug\": \"sit\",\n      \"meta\": [\n        {\n          \"_id\": \"se\",\n          \"name\": \"aute do\",\n          \"value\": \"elit do in\"\n        },\n        {\n          \"_id\": \"sit conse\",\n          \"name\": \"ad ex Excepteur\",\n          \"value\": \"Ut culpa\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"proi\",\n        \"integration\": \"velit\",\n        \"level\": \"quis in elit ut\",\n        \"uid\": 31983290,\n        \"opted\": false,\n        \"permissions\": [\n          \"proident cillum laboris deserunt\",\n          \"minim dolore veniam mollit deserunt\"\n        ],\n        \"token\": \"exercitation pariatur quis\",\n        \"name\": \"non Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"Excepteur Ut Lorem aliqua\",\n            \"integration\": \"minim\",\n            \"level\": \"et\",\n            \"uid\": -30810847,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sed cillum\",\n            \"code\": \"Duis enim occaecat\",\n            \"name\": \"in sed Excepteur ullamco\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"est Excepteur eu\",\n            \"integration\": \"est labore aliquip deserunt\",\n            \"level\": \"occaecat voluptate dolore\",\n            \"uid\": 67717039,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"nostrud dolor in\",\n            \"code\": \"irure consequat ex\",\n            \"name\": \"labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"quis tempor ea\",\n        \"integration\": \"cupidat\",\n        \"level\": \"par\",\n        \"uid\": 60186877,\n        \"opted\": false,\n        \"permissions\": [\n          \"voluptate ex velit\",\n          \"proident consectetur Duis\"\n        ],\n        \"token\": \"proident fugiat\",\n        \"name\": \"ex\",\n        \"stores\": [\n          {\n            \"_id\": \"aliquip velit sit ea eiusmod\",\n            \"integration\": \"Lorem\",\n            \"level\": \"Ut proident enim\",\n            \"uid\": -70196552,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu Lorem dolore\",\n            \"code\": \"laboris ad commodo\",\n            \"name\": \"labore reprehenderit Duis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"laboris irure\",\n            \"integration\": \"ut anim\",\n            \"level\": \"minim culpa aute eiu\",\n            \"uid\": -51408019,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse do\",\n            \"code\": \"officia ve\",\n            \"name\": \"pa\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ipsum occaecat ex in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2e95d624-2a66-4935-9a2c-11638b6ba3ce",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6a6ac191-b56d-40ef-acd9-113b45dc3113",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2012-03-04T19:34:13.328Z\",\n  \"status\": 40297206,\n  \"error\": \"do sed nostrud\",\n  \"exception\": \"mollit enim\",\n  \"message\": \"cupidatat quis et\",\n  \"total_time_taken_in_millis\": -78105035,\n  \"http_status\": \"423 LOCKED\",\n  \"items\": {\n    \"session_id\": \"adipisicing in magna\",\n    \"error_message\": \"culpa dolore do adipisicing\"\n  },\n  \"payload\": {\n    \"session_id\": \"nisi\",\n    \"error_message\": \"aute consectetur nulla mollit\"\n  },\n  \"trace_id\": \"ex ullamco sit minim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e46f559e-2163-4b13-b32e-9421475fdc77",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2012-03-04T19:34:13.328Z\",\n  \"status\": 40297206,\n  \"error\": \"do sed nostrud\",\n  \"exception\": \"mollit enim\",\n  \"message\": \"cupidatat quis et\",\n  \"total_time_taken_in_millis\": -78105035,\n  \"http_status\": \"423 LOCKED\",\n  \"items\": {\n    \"session_id\": \"adipisicing in magna\",\n    \"error_message\": \"culpa dolore do adipisicing\"\n  },\n  \"payload\": {\n    \"session_id\": \"nisi\",\n    \"error_message\": \"aute consectetur nulla mollit\"\n  },\n  \"trace_id\": \"ex ullamco sit minim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b3d8c4a3-ede6-4bb7-bafb-28f5f0e64a21",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2012-03-04T19:34:13.328Z\",\n  \"status\": 40297206,\n  \"error\": \"do sed nostrud\",\n  \"exception\": \"mollit enim\",\n  \"message\": \"cupidatat quis et\",\n  \"total_time_taken_in_millis\": -78105035,\n  \"http_status\": \"423 LOCKED\",\n  \"items\": {\n    \"session_id\": \"adipisicing in magna\",\n    \"error_message\": \"culpa dolore do adipisicing\"\n  },\n  \"payload\": {\n    \"session_id\": \"nisi\",\n    \"error_message\": \"aute consectetur nulla mollit\"\n  },\n  \"trace_id\": \"ex ullamco sit minim\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "57947665-3ac0-4b12-aaa1-aa68cf6a6d4e",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cb9ddb18-9dc5-486c-a82f-217bf700e44a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-01-08T22:04:59.816Z\",\n  \"status\": 43948533,\n  \"error\": \"dolor occaecat aliqua Duis\",\n  \"exception\": \"consequat Duis\",\n  \"message\": \"amet\",\n  \"total_time_taken_in_millis\": 97639797,\n  \"http_status\": \"302 FOUND\",\n  \"items\": {\n    \"company_id\": -9947086,\n    \"integration_data\": {\n      \"sunt68\": {}\n    },\n    \"company_name\": \"esse veniam\",\n    \"task_details\": {\n      \"type\": 39398628,\n      \"group_list\": [\n        {\n          \"text\": \"dolor sunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"amet dol\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -10131601.254785448,\n      \"safe_stock\": -68183660,\n      \"period_threshold\": 69446383,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"irure nulla incidi\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sint ullamco sunt\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ex laborum eiusmod Ut adipisicing\",\n    \"alias\": \"laboris Lorem minim\"\n  },\n  \"payload\": {\n    \"company_id\": 66869149,\n    \"integration_data\": {\n      \"quis_3\": {},\n      \"aliqua_c0\": {}\n    },\n    \"company_name\": \"voluptate anim ea\",\n    \"task_details\": {\n      \"type\": -42661346,\n      \"group_list\": [\n        {\n          \"text\": \"aliquip Lorem proident\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit labore id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 9736569.821418509,\n      \"safe_stock\": 60237886,\n      \"period_threshold\": 3662670,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"do anim dolor in\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"exercitation aliqua magna ad qui\",\n    \"alias\": \"officia Excepteur in\"\n  },\n  \"trace_id\": \"irure in sint ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "789bd97f-e1ea-4a61-beb9-441dc27ec785",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1952-09-10T12:04:43.704Z\",\n  \"status\": -90169160,\n  \"error\": \"culpa in\",\n  \"exception\": \"reprehenderit occaecat tempor et eu\",\n  \"message\": \"Excepteur esse enim amet\",\n  \"total_time_taken_in_millis\": -86367736,\n  \"http_status\": \"424 FAILED_DEPENDENCY\",\n  \"items\": {\n    \"company_id\": 47529477,\n    \"integration_data\": {\n      \"irure_7\": {},\n      \"ex556\": {},\n      \"cillum_cb7\": {}\n    },\n    \"company_name\": \"reprehenderit exercitation ut consequat qui\",\n    \"task_details\": {\n      \"type\": -76226670,\n      \"group_list\": [\n        {\n          \"text\": \"anim id\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute nisi \",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 37766682.663475394,\n      \"safe_stock\": -67001201,\n      \"period_threshold\": 77107918,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident ullamco deserunt enim quis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"qui ex\",\n    \"alias\": \"id m\"\n  },\n  \"payload\": {\n    \"company_id\": 59943291,\n    \"integration_data\": {\n      \"occaecate08\": {}\n    },\n    \"company_name\": \"occaecat ut dolore in\",\n    \"task_details\": {\n      \"type\": 61763774,\n      \"group_list\": [\n        {\n          \"text\": \"dolor amet eiusmod\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"do ut eu magna\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -81258373.13696226,\n      \"safe_stock\": 81483321,\n      \"period_threshold\": 51398198,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ex cillum nulla sint\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut tempor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"irure\",\n    \"alias\": \"dolore\"\n  },\n  \"trace_id\": \"veniam laboris ad incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6a01bcc6-7666-48d0-b8b9-d7a5393f8c53",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1952-09-10T12:04:43.704Z\",\n  \"status\": -90169160,\n  \"error\": \"culpa in\",\n  \"exception\": \"reprehenderit occaecat tempor et eu\",\n  \"message\": \"Excepteur esse enim amet\",\n  \"total_time_taken_in_millis\": -86367736,\n  \"http_status\": \"424 FAILED_DEPENDENCY\",\n  \"items\": {\n    \"company_id\": 47529477,\n    \"integration_data\": {\n      \"irure_7\": {},\n      \"ex556\": {},\n      \"cillum_cb7\": {}\n    },\n    \"company_name\": \"reprehenderit exercitation ut consequat qui\",\n    \"task_details\": {\n      \"type\": -76226670,\n      \"group_list\": [\n        {\n          \"text\": \"anim id\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute nisi \",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 37766682.663475394,\n      \"safe_stock\": -67001201,\n      \"period_threshold\": 77107918,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in est\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident ullamco deserunt enim quis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"qui ex\",\n    \"alias\": \"id m\"\n  },\n  \"payload\": {\n    \"company_id\": 59943291,\n    \"integration_data\": {\n      \"occaecate08\": {}\n    },\n    \"company_name\": \"occaecat ut dolore in\",\n    \"task_details\": {\n      \"type\": 61763774,\n      \"group_list\": [\n        {\n          \"text\": \"dolor amet eiusmod\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"do ut eu magna\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -81258373.13696226,\n      \"safe_stock\": 81483321,\n      \"period_threshold\": 51398198,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ex cillum nulla sint\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut tempor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"irure\",\n    \"alias\": \"dolore\"\n  },\n  \"trace_id\": \"veniam laboris ad incididunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7a2b1357-f867-49ea-afd6-d2e0c7c92791",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "620e528b-6953-41fa-b666-601e5ffffc9f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-08-16T06:33:40.161Z\",\n  \"status\": -7174477,\n  \"error\": \"adipisicing in Lorem\",\n  \"exception\": \"ut in esse\",\n  \"message\": \"voluptate non sit\",\n  \"total_time_taken_in_millis\": 27986909,\n  \"http_status\": \"226 IM_USED\",\n  \"items\": [\n    {\n      \"company_id\": -6149251,\n      \"integration_data\": {\n        \"in_d7f\": {},\n        \"occaecat_80e\": {},\n        \"ina3\": {}\n      },\n      \"company_name\": \"in voluptate\",\n      \"task_details\": {\n        \"type\": 43036801,\n        \"group_list\": [\n          {\n            \"text\": \"ipsum deserunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliqua qui reprehenderit eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 65982192.88001636,\n        \"safe_stock\": 23639339,\n        \"period_threshold\": 91043061,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi dolore in ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"eu ullamco Ut ut\",\n      \"alias\": \"ex ipsum dolore\"\n    },\n    {\n      \"company_id\": 55577175,\n      \"integration_data\": {\n        \"voluptate32\": {},\n        \"dolor9b\": {}\n      },\n      \"company_name\": \"Ut Duis irure tempor\",\n      \"task_details\": {\n        \"type\": -54046336,\n        \"group_list\": [\n          {\n            \"text\": \"nulla proident exercitation\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"labore irure sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 57930610.1729736,\n        \"safe_stock\": -19848836,\n        \"period_threshold\": -48817734,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nisi minim dolore laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do esse aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"fugiat ullamco\",\n      \"alias\": \"dolore sunt pariatur amet veniam\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -37675770,\n      \"integration_data\": {\n        \"qui_d5e\": {},\n        \"pariatur_2\": {},\n        \"quis_53f\": {},\n        \"laboris_03\": {}\n      },\n      \"company_name\": \"nulla\",\n      \"task_details\": {\n        \"type\": -29825374,\n        \"group_list\": [\n          {\n            \"text\": \"dolore incididunt sit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Lorem mollit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -22233371.140846893,\n        \"safe_stock\": -92646063,\n        \"period_threshold\": -36215067,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"irure dolore \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nulla consequat anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui laborum\",\n      \"alias\": \"reprehenderit Ut\"\n    },\n    {\n      \"company_id\": 90802502,\n      \"integration_data\": {\n        \"labore0\": {}\n      },\n      \"company_name\": \"ullamco c\",\n      \"task_details\": {\n        \"type\": 42104070,\n        \"group_list\": [\n          {\n            \"text\": \"sed pariatur fugiat incididunt eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -42058764.486053854,\n        \"safe_stock\": 33807695,\n        \"period_threshold\": 24098658,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"labore officia eiusmod Lorem\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse Ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"fugiat ut paria\",\n      \"alias\": \"non et\"\n    }\n  ],\n  \"trace_id\": \"non\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e0cefe4e-39ae-4d37-8cd3-6c4f0881997e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1950-09-05T03:29:48.244Z\",\n  \"status\": -69395206,\n  \"error\": \"anim laboris amet\",\n  \"exception\": \"reprehenderit\",\n  \"message\": \"esse deserunt laboris elit\",\n  \"total_time_taken_in_millis\": -55267052,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": [\n    {\n      \"company_id\": -7155339,\n      \"integration_data\": {\n        \"inda\": {}\n      },\n      \"company_name\": \"enim veniam\",\n      \"task_details\": {\n        \"type\": -71755051,\n        \"group_list\": [\n          {\n            \"text\": \"quis ipsum in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 87221502.53607807,\n        \"safe_stock\": -41773840,\n        \"period_threshold\": -89609527,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ea exercitation occaecat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ad Duis eu fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolore officia esse\",\n      \"alias\": \"amet\"\n    },\n    {\n      \"company_id\": -40960952,\n      \"integration_data\": {\n        \"incididunt0\": {},\n        \"cillum5\": {}\n      },\n      \"company_name\": \"labor\",\n      \"task_details\": {\n        \"type\": 2845836,\n        \"group_list\": [\n          {\n            \"text\": \"culpa laborum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris in ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -84554731.87500294,\n        \"safe_stock\": -22513955,\n        \"period_threshold\": -84295914,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ullamco nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua in aliquip exer\",\n      \"alias\": \"qui fugi\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -65451538,\n      \"integration_data\": {\n        \"Excepteur_36\": {}\n      },\n      \"company_name\": \"deserunt cupidatat repreh\",\n      \"task_details\": {\n        \"type\": 66335140,\n        \"group_list\": [\n          {\n            \"text\": \"consectetur in id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim non nisi do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -60650456.08325006,\n        \"safe_stock\": 93810553,\n        \"period_threshold\": -76965046,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore qui\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in esse dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis aliquip\",\n      \"alias\": \"amet enim dolor\"\n    },\n    {\n      \"company_id\": -62223959,\n      \"integration_data\": {\n        \"inf\": {}\n      },\n      \"company_name\": \"irure dolore mollit\",\n      \"task_details\": {\n        \"type\": -91793225,\n        \"group_list\": [\n          {\n            \"text\": \"fugiat in adipisicing deserunt et\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa dolor elit occaecat enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -53997580.89495736,\n        \"safe_stock\": 86741319,\n        \"period_threshold\": -55525063,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing amet fu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur in incididunt quis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor fugiat sed amet sint\",\n      \"alias\": \"sint do officia voluptate\"\n    }\n  ],\n  \"trace_id\": \"min\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "181f2d0c-a806-44af-a58f-bfe209156ed5",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1950-09-05T03:29:48.244Z\",\n  \"status\": -69395206,\n  \"error\": \"anim laboris amet\",\n  \"exception\": \"reprehenderit\",\n  \"message\": \"esse deserunt laboris elit\",\n  \"total_time_taken_in_millis\": -55267052,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": [\n    {\n      \"company_id\": -7155339,\n      \"integration_data\": {\n        \"inda\": {}\n      },\n      \"company_name\": \"enim veniam\",\n      \"task_details\": {\n        \"type\": -71755051,\n        \"group_list\": [\n          {\n            \"text\": \"quis ipsum in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore minim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 87221502.53607807,\n        \"safe_stock\": -41773840,\n        \"period_threshold\": -89609527,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ea exercitation occaecat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ad Duis eu fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolore officia esse\",\n      \"alias\": \"amet\"\n    },\n    {\n      \"company_id\": -40960952,\n      \"integration_data\": {\n        \"incididunt0\": {},\n        \"cillum5\": {}\n      },\n      \"company_name\": \"labor\",\n      \"task_details\": {\n        \"type\": 2845836,\n        \"group_list\": [\n          {\n            \"text\": \"culpa laborum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris in ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -84554731.87500294,\n        \"safe_stock\": -22513955,\n        \"period_threshold\": -84295914,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ullamco nostrud\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"aliqua in aliquip exer\",\n      \"alias\": \"qui fugi\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -65451538,\n      \"integration_data\": {\n        \"Excepteur_36\": {}\n      },\n      \"company_name\": \"deserunt cupidatat repreh\",\n      \"task_details\": {\n        \"type\": 66335140,\n        \"group_list\": [\n          {\n            \"text\": \"consectetur in id\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim non nisi do\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -60650456.08325006,\n        \"safe_stock\": 93810553,\n        \"period_threshold\": -76965046,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore qui\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in esse dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis aliquip\",\n      \"alias\": \"amet enim dolor\"\n    },\n    {\n      \"company_id\": -62223959,\n      \"integration_data\": {\n        \"inf\": {}\n      },\n      \"company_name\": \"irure dolore mollit\",\n      \"task_details\": {\n        \"type\": -91793225,\n        \"group_list\": [\n          {\n            \"text\": \"fugiat in adipisicing deserunt et\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa dolor elit occaecat enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -53997580.89495736,\n        \"safe_stock\": 86741319,\n        \"period_threshold\": -55525063,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"adipisicing amet fu\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur in incididunt quis\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor fugiat sed amet sint\",\n      \"alias\": \"sint do officia voluptate\"\n    }\n  ],\n  \"trace_id\": \"min\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9a67d4d2-f712-4fc9-8cd5-1c63e7762f7d",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "45317878-6d0a-4659-b8a7-9fa153490e34",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "214bcc0f-6169-4ac4-aa57-d3bafa344618",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "410161c0-bd89-46e7-89c8-cb6ab8c4fddd",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "41c6569d-8173-4f8d-b554-f7cbcdee7e04",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "69315431-3030-4c29-9ded-b67e49681ef7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fb4eaa61-81c6-4ac9-9cfe-38be1201101d",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "aa47b494-74ed-4f85-bfa1-1332313c452e",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c2c097eb-5481-4d0b-b853-1211ea825924",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "81783f7c-50cc-44ef-8877-4486bdb9f41b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "89ef2452-08df-4e20-9491-f799575f17f3",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"adipisicinge5\": \"in eu qui\",\n      \"officia_877\": 97345041.33582842\n    },\n    \"meta\": {\n      \"officia2_2\": 63740422,\n      \"aliqua_0\": -21660737.94791341\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "b3c5b231-7aad-4039-b7df-edd92720f4e9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "87e33088-a65e-4068-9f44-1c4f05d091a5",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"quis_2\": \"veniam sunt deserunt amet aute\"\n    },\n    \"meta\": {\n      \"commodofc\": 46019124,\n      \"et_6\": true\n    }\n  },\n  \"event_schema\": {\n    \"ad0ef\": \"ut consequat cillum\",\n    \"culpa_80\": \"do incididunt irure cupidatat\",\n    \"reprehenderit_3b\": -83201507\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "39981137-ed39-4cca-96cb-c0fed1f26b3d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "c3644748-48a2-47b6-94e3-c7426703f2f1",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
