{
  "item": [
    {
      "id": "deb9601c-cf81-44f6-994d-0d131034597d",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5fd0775e-1e50-491f-9e26-0919feb67a66",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e272b636-58d3-47d5-8740-efc710c33c84",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "do adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "003b39da-b687-4583-a0b0-921e449af679",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "do adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "d977c25f-ca8a-4718-b32e-42cec7a49570",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "do adipisicing",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1d243126-6c86-4fe1-9316-6c5214cf4631",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c8e0a5bc-c0be-405a-9e16-efccd2713900",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "980849f3-2589-41e2-b2ba-94aa8a98e404",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d76e7d5a-b81b-43f1-979b-282134056e07",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e8f7cfa1-9130-463e-b71a-a0c6d83fdf74",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -57896461,\n   \"event_name\": \"reprehenderit incididunt consequat dolor id\",\n   \"event_type\": \"commodo\",\n   \"event_category\": \"non ex officia\",\n   \"version\": \"pariatur Excepteur dolore veniam\",\n   \"display_name\": \"exercitation ad in\",\n   \"description\": \"minim eiusmod irure\",\n   \"created_on\": \"Dui\"\n  },\n  {\n   \"id\": 35192386,\n   \"event_name\": \"dolor consequat in officia\",\n   \"event_type\": \"deserunt sed Excepteur ut\",\n   \"event_category\": \"et\",\n   \"version\": \"cupidatat ipsum dolore sit\",\n   \"display_name\": \"Lorem dolor consectetu\",\n   \"description\": \"ullamco nisi \",\n   \"created_on\": \"quis i\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5aa531db-3f6e-406d-bcfe-06e50d59c347",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "79043998-001d-460b-92e3-857084f60322",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 56630122,\n   \"event_name\": \"aliquip sunt consectetur\",\n   \"event_type\": \"velit\",\n   \"event_category\": \"voluptate non\",\n   \"version\": \"enim\",\n   \"display_name\": \"fugiat occaecat Lorem ex\",\n   \"description\": \"aliqua Ut commodo\",\n   \"created_on\": \"non in tempor reprehenderit\"\n  },\n  {\n   \"id\": -73074221,\n   \"event_name\": \"eu ea ut\",\n   \"event_type\": \"dolor est\",\n   \"event_category\": \"eiusmod sunt\",\n   \"version\": \"veniam in fugiat laborum\",\n   \"display_name\": \"occaecat anim in consequat\",\n   \"description\": \"sunt aliquip Duis est\",\n   \"created_on\": \"consectetur est proident\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "db6b2156-1845-4538-b28e-afbe91f01d24",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "fb4c27dc-0e74-4af3-ae9f-94539af7a018",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9a351d6c-a759-4fbe-b1f6-264957bb13ab",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-10-18T18:37:26.705Z\",\n \"status\": 7607200,\n \"error\": \"cillum nostrud eiusmod cupidatat\",\n \"exception\": \"sunt\",\n \"message\": \"o\",\n \"total_time_taken_in_millis\": 97545760,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"nulla\",\n   \"description\": \"quis ad\",\n   \"name\": \"ipsum non\",\n   \"slug\": \"occaecat in\",\n   \"meta\": [\n    {\n     \"_id\": \"in consequat irure in\",\n     \"name\": \"laboris irure pariatur\",\n     \"value\": \"reprehenderit cillum incididunt minim\"\n    },\n    {\n     \"_id\": \"voluptate do\",\n     \"name\": \"enim dolore ea officia\",\n     \"value\": \"est do eiusmod elit\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Excepteur commodo aliquip dolore aliqua\",\n    \"integration\": \"minim ullamco ut dol\",\n    \"level\": \"in esse dolore ipsum dolor\",\n    \"uid\": 45560079,\n    \"opted\": false,\n    \"permissions\": [\n     \"repre\",\n     \"ipsum fugiat Ut adipis\"\n    ],\n    \"token\": \"in dolor in eu\",\n    \"name\": \"amet cupidatat et volupt\",\n    \"stores\": [\n     {\n      \"_id\": \"incididun\",\n      \"integration\": \"ut velit cupidatat\",\n      \"level\": \"deserunt\",\n      \"uid\": 68815675,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit ipsum\",\n      \"code\": \"qui ad\",\n      \"name\": \"mollit\"\n     },\n     {\n      \"_id\": \"dolor qui labore cupidatat\",\n      \"integration\": \"irure fugiat ipsum Ut\",\n      \"level\": \"officia dolore consequat ipsum culpa\",\n      \"uid\": 16208184,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna ad anim\",\n      \"code\": \"ullamco nostrud irure\",\n      \"name\": \"proident occaecat\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit tempor nostrud adipisicing fugiat\",\n      \"integration\": \"deserunt est tempor ullamco\",\n      \"level\": \"eu\",\n      \"uid\": 78532934,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim Ut fugiat\",\n      \"code\": \"Lorem est dolor quis enim\",\n      \"name\": \"elit ipsum in\"\n     },\n     {\n      \"_id\": \"Ut cillum in tempor\",\n      \"integration\": \"aliqua et non esse ullamco\",\n      \"level\": \"quis commodo sit esse\",\n      \"uid\": -14312557,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate anim quis ut proident\",\n      \"code\": \"Duis voluptate cupidatat culpa\",\n      \"name\": \"ipsum in non eu\"\n     }\n    ]\n   },\n   {\n    \"_id\": \"nisi pariatur Lorem nostrud\",\n    \"integration\": \"\",\n    \"level\": \"et fugiat commodo\",\n    \"uid\": 23655525,\n    \"opted\": true,\n    \"permissions\": [\n     \"nisi in dolor sed sit\",\n     \"enim elit\"\n    ],\n    \"token\": \"id adipisicing veniam\",\n    \"name\": \"consequat nisi nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"sint\",\n      \"integration\": \"cupidatat consectetur occaecat magna\",\n      \"level\": \"ut cillum officia sunt\",\n      \"uid\": -3395438,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate adipisic\",\n      \"code\": \"proident ut\",\n      \"name\": \"nostrud dolore\"\n     },\n     {\n      \"_id\": \"dolore commodo no\",\n      \"integration\": \"occaecat sed nulla quis\",\n      \"level\": \"dolor adipisicing veniam velit consectetur\",\n      \"uid\": 42827710,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna nisi\",\n      \"code\": \"ut labore\",\n      \"name\": \"veniam et magna\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam dolore\",\n      \"integration\": \"deserunt aliqua dolor\",\n      \"level\": \"irure veniam\",\n      \"uid\": 15547616,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud magna\",\n      \"code\": \"minim fugiat\",\n      \"name\": \"labore\"\n     },\n     {\n      \"_id\": \"sed deserunt\",\n      \"integration\": \"laborum dolor in\",\n      \"level\": \"sit eu eiusmod nostrud\",\n      \"uid\": 62142326,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt ad culpa cupidatat\",\n      \"code\": \"dolore\",\n      \"name\": \"non et elit\"\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"eiusmod irure officia\",\n   \"description\": \"cillum pariatur nulla ullamco\",\n   \"name\": \"ipsum magna sed fugiat\",\n   \"slug\": \"do\",\n   \"meta\": [\n    {\n     \"_id\": \"aute commodo et cillum\",\n     \"name\": \"pariatur\",\n     \"value\": \"adipisicing in exercitation\"\n    },\n    {\n     \"_id\": \"mollit ea ex\",\n     \"name\": \"adipisicing dolore ipsum sint ad\",\n     \"value\": \"m\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ipsum\",\n    \"integration\": \"sed \",\n    \"level\": \"aliquip eu\",\n    \"uid\": -18162290,\n    \"opted\": true,\n    \"permissions\": [\n     \"minim quis pari\",\n     \"dolore ut ea\"\n    ],\n    \"token\": \"sint ipsum proident\",\n    \"name\": \"sed nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"al\",\n      \"integration\": \"ex sit nulla Duis nostru\",\n      \"level\": \"ad nisi\",\n      \"uid\": 74210863,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim\",\n      \"code\": \"Ut ea nulla\",\n      \"name\": \"ut dolor ipsum non\"\n     },\n     {\n      \"_id\": \"enim ea Duis\",\n      \"integration\": \"en\",\n      \"level\": \"eu aliquip ipsum commodo\",\n      \"uid\": -42660823,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum officia dolore ut\",\n      \"code\": \"dolor magna sit labore amet\",\n      \"name\": \"ve\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"consectetur in\",\n      \"integration\": \"nulla elit in ea\",\n      \"level\": \"labor\",\n      \"uid\": -59612227,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"en\",\n      \"code\": \"amet\",\n      \"name\": \"ut qui eu nulla do\"\n     },\n     {\n      \"_id\": \"id dolor Ut laborum cillum\",\n      \"integration\": \"voluptate et qui dolor magna\",\n      \"level\": \"dolore es\",\n      \"uid\": -70079915,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing cupidatat reprehenderit exercitation\",\n      \"code\": \"consectetur\",\n      \"name\": \"laboris sunt\"\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris voluptate dolore id\",\n    \"integration\": \"nisi\",\n    \"level\": \"velit irure Duis ex\",\n    \"uid\": -64820125,\n    \"opted\": true,\n    \"permissions\": [\n     \"mollit consequat ex ullamco\",\n     \"dolor ea tempor\"\n    ],\n    \"token\": \"volu\",\n    \"name\": \"dolore veniam anim occaecat\",\n    \"stores\": [\n     {\n      \"_id\": \"velit\",\n      \"integration\": \"quis et aliquip labore pariatur\",\n      \"level\": \"occaecat voluptate m\",\n      \"uid\": -22731751,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing sed quis culpa\",\n      \"code\": \"Duis reprehenderit ut minim fugiat\",\n      \"name\": \"deserunt minim\"\n     },\n     {\n      \"_id\": \"eiusmod et ad\",\n      \"integration\": \"veniam Duis\",\n      \"level\": \"laboris\",\n      \"uid\": -41289349,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa ut minim dolore enim\",\n      \"code\": \"\",\n      \"name\": \"officia in\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"irure repreh\",\n      \"integration\": \"nisi velit\",\n      \"level\": \"in cupidatat\",\n      \"uid\": 19869827,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu nostrud ali\",\n      \"code\": \"anim laborum ex dolore\",\n      \"name\": \"dolore laborum\"\n     },\n     {\n      \"_id\": \"et qui officia\",\n      \"integration\": \"commodo veniam magna reprehenderit\",\n      \"level\": \"velit tempor dolor nulla\",\n      \"uid\": 63418068,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut do in\",\n      \"code\": \"dolor Duis anim qui\",\n      \"name\": \"eu sunt deserunt Excepte\"\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"est enim nostrud occa\",\n \"page\": {\n  \"type\": \"consectetur veniam\",\n  \"size\": 52830918,\n  \"current\": 6313528,\n  \"has_next\": false,\n  \"item_total\": 58045257,\n  \"next_id\": \"sunt exercitation eiusmod dolore proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "de0d9d37-9e88-42c0-a00d-ca5c41e15958",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-10-18T18:37:26.705Z\",\n \"status\": 7607200,\n \"error\": \"cillum nostrud eiusmod cupidatat\",\n \"exception\": \"sunt\",\n \"message\": \"o\",\n \"total_time_taken_in_millis\": 97545760,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"nulla\",\n   \"description\": \"quis ad\",\n   \"name\": \"ipsum non\",\n   \"slug\": \"occaecat in\",\n   \"meta\": [\n    {\n     \"_id\": \"in consequat irure in\",\n     \"name\": \"laboris irure pariatur\",\n     \"value\": \"reprehenderit cillum incididunt minim\"\n    },\n    {\n     \"_id\": \"voluptate do\",\n     \"name\": \"enim dolore ea officia\",\n     \"value\": \"est do eiusmod elit\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Excepteur commodo aliquip dolore aliqua\",\n    \"integration\": \"minim ullamco ut dol\",\n    \"level\": \"in esse dolore ipsum dolor\",\n    \"uid\": 45560079,\n    \"opted\": false,\n    \"permissions\": [\n     \"repre\",\n     \"ipsum fugiat Ut adipis\"\n    ],\n    \"token\": \"in dolor in eu\",\n    \"name\": \"amet cupidatat et volupt\",\n    \"stores\": [\n     {\n      \"_id\": \"incididun\",\n      \"integration\": \"ut velit cupidatat\",\n      \"level\": \"deserunt\",\n      \"uid\": 68815675,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit ipsum\",\n      \"code\": \"qui ad\",\n      \"name\": \"mollit\"\n     },\n     {\n      \"_id\": \"dolor qui labore cupidatat\",\n      \"integration\": \"irure fugiat ipsum Ut\",\n      \"level\": \"officia dolore consequat ipsum culpa\",\n      \"uid\": 16208184,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna ad anim\",\n      \"code\": \"ullamco nostrud irure\",\n      \"name\": \"proident occaecat\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit tempor nostrud adipisicing fugiat\",\n      \"integration\": \"deserunt est tempor ullamco\",\n      \"level\": \"eu\",\n      \"uid\": 78532934,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim Ut fugiat\",\n      \"code\": \"Lorem est dolor quis enim\",\n      \"name\": \"elit ipsum in\"\n     },\n     {\n      \"_id\": \"Ut cillum in tempor\",\n      \"integration\": \"aliqua et non esse ullamco\",\n      \"level\": \"quis commodo sit esse\",\n      \"uid\": -14312557,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate anim quis ut proident\",\n      \"code\": \"Duis voluptate cupidatat culpa\",\n      \"name\": \"ipsum in non eu\"\n     }\n    ]\n   },\n   {\n    \"_id\": \"nisi pariatur Lorem nostrud\",\n    \"integration\": \"\",\n    \"level\": \"et fugiat commodo\",\n    \"uid\": 23655525,\n    \"opted\": true,\n    \"permissions\": [\n     \"nisi in dolor sed sit\",\n     \"enim elit\"\n    ],\n    \"token\": \"id adipisicing veniam\",\n    \"name\": \"consequat nisi nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"sint\",\n      \"integration\": \"cupidatat consectetur occaecat magna\",\n      \"level\": \"ut cillum officia sunt\",\n      \"uid\": -3395438,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate adipisic\",\n      \"code\": \"proident ut\",\n      \"name\": \"nostrud dolore\"\n     },\n     {\n      \"_id\": \"dolore commodo no\",\n      \"integration\": \"occaecat sed nulla quis\",\n      \"level\": \"dolor adipisicing veniam velit consectetur\",\n      \"uid\": 42827710,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna nisi\",\n      \"code\": \"ut labore\",\n      \"name\": \"veniam et magna\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam dolore\",\n      \"integration\": \"deserunt aliqua dolor\",\n      \"level\": \"irure veniam\",\n      \"uid\": 15547616,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud magna\",\n      \"code\": \"minim fugiat\",\n      \"name\": \"labore\"\n     },\n     {\n      \"_id\": \"sed deserunt\",\n      \"integration\": \"laborum dolor in\",\n      \"level\": \"sit eu eiusmod nostrud\",\n      \"uid\": 62142326,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt ad culpa cupidatat\",\n      \"code\": \"dolore\",\n      \"name\": \"non et elit\"\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"eiusmod irure officia\",\n   \"description\": \"cillum pariatur nulla ullamco\",\n   \"name\": \"ipsum magna sed fugiat\",\n   \"slug\": \"do\",\n   \"meta\": [\n    {\n     \"_id\": \"aute commodo et cillum\",\n     \"name\": \"pariatur\",\n     \"value\": \"adipisicing in exercitation\"\n    },\n    {\n     \"_id\": \"mollit ea ex\",\n     \"name\": \"adipisicing dolore ipsum sint ad\",\n     \"value\": \"m\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ipsum\",\n    \"integration\": \"sed \",\n    \"level\": \"aliquip eu\",\n    \"uid\": -18162290,\n    \"opted\": true,\n    \"permissions\": [\n     \"minim quis pari\",\n     \"dolore ut ea\"\n    ],\n    \"token\": \"sint ipsum proident\",\n    \"name\": \"sed nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"al\",\n      \"integration\": \"ex sit nulla Duis nostru\",\n      \"level\": \"ad nisi\",\n      \"uid\": 74210863,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim\",\n      \"code\": \"Ut ea nulla\",\n      \"name\": \"ut dolor ipsum non\"\n     },\n     {\n      \"_id\": \"enim ea Duis\",\n      \"integration\": \"en\",\n      \"level\": \"eu aliquip ipsum commodo\",\n      \"uid\": -42660823,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum officia dolore ut\",\n      \"code\": \"dolor magna sit labore amet\",\n      \"name\": \"ve\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"consectetur in\",\n      \"integration\": \"nulla elit in ea\",\n      \"level\": \"labor\",\n      \"uid\": -59612227,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"en\",\n      \"code\": \"amet\",\n      \"name\": \"ut qui eu nulla do\"\n     },\n     {\n      \"_id\": \"id dolor Ut laborum cillum\",\n      \"integration\": \"voluptate et qui dolor magna\",\n      \"level\": \"dolore es\",\n      \"uid\": -70079915,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing cupidatat reprehenderit exercitation\",\n      \"code\": \"consectetur\",\n      \"name\": \"laboris sunt\"\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris voluptate dolore id\",\n    \"integration\": \"nisi\",\n    \"level\": \"velit irure Duis ex\",\n    \"uid\": -64820125,\n    \"opted\": true,\n    \"permissions\": [\n     \"mollit consequat ex ullamco\",\n     \"dolor ea tempor\"\n    ],\n    \"token\": \"volu\",\n    \"name\": \"dolore veniam anim occaecat\",\n    \"stores\": [\n     {\n      \"_id\": \"velit\",\n      \"integration\": \"quis et aliquip labore pariatur\",\n      \"level\": \"occaecat voluptate m\",\n      \"uid\": -22731751,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing sed quis culpa\",\n      \"code\": \"Duis reprehenderit ut minim fugiat\",\n      \"name\": \"deserunt minim\"\n     },\n     {\n      \"_id\": \"eiusmod et ad\",\n      \"integration\": \"veniam Duis\",\n      \"level\": \"laboris\",\n      \"uid\": -41289349,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa ut minim dolore enim\",\n      \"code\": \"\",\n      \"name\": \"officia in\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"irure repreh\",\n      \"integration\": \"nisi velit\",\n      \"level\": \"in cupidatat\",\n      \"uid\": 19869827,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu nostrud ali\",\n      \"code\": \"anim laborum ex dolore\",\n      \"name\": \"dolore laborum\"\n     },\n     {\n      \"_id\": \"et qui officia\",\n      \"integration\": \"commodo veniam magna reprehenderit\",\n      \"level\": \"velit tempor dolor nulla\",\n      \"uid\": 63418068,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut do in\",\n      \"code\": \"dolor Duis anim qui\",\n      \"name\": \"eu sunt deserunt Excepte\"\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"est enim nostrud occa\",\n \"page\": {\n  \"type\": \"consectetur veniam\",\n  \"size\": 52830918,\n  \"current\": 6313528,\n  \"has_next\": false,\n  \"item_total\": 58045257,\n  \"next_id\": \"sunt exercitation eiusmod dolore proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "58b09377-e776-4e94-91a5-75c97a7513a7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2013-10-18T18:37:26.705Z\",\n \"status\": 7607200,\n \"error\": \"cillum nostrud eiusmod cupidatat\",\n \"exception\": \"sunt\",\n \"message\": \"o\",\n \"total_time_taken_in_millis\": 97545760,\n \"http_status\": \"301 MOVED_PERMANENTLY\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"nulla\",\n   \"description\": \"quis ad\",\n   \"name\": \"ipsum non\",\n   \"slug\": \"occaecat in\",\n   \"meta\": [\n    {\n     \"_id\": \"in consequat irure in\",\n     \"name\": \"laboris irure pariatur\",\n     \"value\": \"reprehenderit cillum incididunt minim\"\n    },\n    {\n     \"_id\": \"voluptate do\",\n     \"name\": \"enim dolore ea officia\",\n     \"value\": \"est do eiusmod elit\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Excepteur commodo aliquip dolore aliqua\",\n    \"integration\": \"minim ullamco ut dol\",\n    \"level\": \"in esse dolore ipsum dolor\",\n    \"uid\": 45560079,\n    \"opted\": false,\n    \"permissions\": [\n     \"repre\",\n     \"ipsum fugiat Ut adipis\"\n    ],\n    \"token\": \"in dolor in eu\",\n    \"name\": \"amet cupidatat et volupt\",\n    \"stores\": [\n     {\n      \"_id\": \"incididun\",\n      \"integration\": \"ut velit cupidatat\",\n      \"level\": \"deserunt\",\n      \"uid\": 68815675,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit ipsum\",\n      \"code\": \"qui ad\",\n      \"name\": \"mollit\"\n     },\n     {\n      \"_id\": \"dolor qui labore cupidatat\",\n      \"integration\": \"irure fugiat ipsum Ut\",\n      \"level\": \"officia dolore consequat ipsum culpa\",\n      \"uid\": 16208184,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna ad anim\",\n      \"code\": \"ullamco nostrud irure\",\n      \"name\": \"proident occaecat\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"velit tempor nostrud adipisicing fugiat\",\n      \"integration\": \"deserunt est tempor ullamco\",\n      \"level\": \"eu\",\n      \"uid\": 78532934,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim Ut fugiat\",\n      \"code\": \"Lorem est dolor quis enim\",\n      \"name\": \"elit ipsum in\"\n     },\n     {\n      \"_id\": \"Ut cillum in tempor\",\n      \"integration\": \"aliqua et non esse ullamco\",\n      \"level\": \"quis commodo sit esse\",\n      \"uid\": -14312557,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate anim quis ut proident\",\n      \"code\": \"Duis voluptate cupidatat culpa\",\n      \"name\": \"ipsum in non eu\"\n     }\n    ]\n   },\n   {\n    \"_id\": \"nisi pariatur Lorem nostrud\",\n    \"integration\": \"\",\n    \"level\": \"et fugiat commodo\",\n    \"uid\": 23655525,\n    \"opted\": true,\n    \"permissions\": [\n     \"nisi in dolor sed sit\",\n     \"enim elit\"\n    ],\n    \"token\": \"id adipisicing veniam\",\n    \"name\": \"consequat nisi nostrud\",\n    \"stores\": [\n     {\n      \"_id\": \"sint\",\n      \"integration\": \"cupidatat consectetur occaecat magna\",\n      \"level\": \"ut cillum officia sunt\",\n      \"uid\": -3395438,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"voluptate adipisic\",\n      \"code\": \"proident ut\",\n      \"name\": \"nostrud dolore\"\n     },\n     {\n      \"_id\": \"dolore commodo no\",\n      \"integration\": \"occaecat sed nulla quis\",\n      \"level\": \"dolor adipisicing veniam velit consectetur\",\n      \"uid\": 42827710,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"magna nisi\",\n      \"code\": \"ut labore\",\n      \"name\": \"veniam et magna\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"veniam dolore\",\n      \"integration\": \"deserunt aliqua dolor\",\n      \"level\": \"irure veniam\",\n      \"uid\": 15547616,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"nostrud magna\",\n      \"code\": \"minim fugiat\",\n      \"name\": \"labore\"\n     },\n     {\n      \"_id\": \"sed deserunt\",\n      \"integration\": \"laborum dolor in\",\n      \"level\": \"sit eu eiusmod nostrud\",\n      \"uid\": 62142326,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"deserunt ad culpa cupidatat\",\n      \"code\": \"dolore\",\n      \"name\": \"non et elit\"\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"eiusmod irure officia\",\n   \"description\": \"cillum pariatur nulla ullamco\",\n   \"name\": \"ipsum magna sed fugiat\",\n   \"slug\": \"do\",\n   \"meta\": [\n    {\n     \"_id\": \"aute commodo et cillum\",\n     \"name\": \"pariatur\",\n     \"value\": \"adipisicing in exercitation\"\n    },\n    {\n     \"_id\": \"mollit ea ex\",\n     \"name\": \"adipisicing dolore ipsum sint ad\",\n     \"value\": \"m\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ipsum\",\n    \"integration\": \"sed \",\n    \"level\": \"aliquip eu\",\n    \"uid\": -18162290,\n    \"opted\": true,\n    \"permissions\": [\n     \"minim quis pari\",\n     \"dolore ut ea\"\n    ],\n    \"token\": \"sint ipsum proident\",\n    \"name\": \"sed nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"al\",\n      \"integration\": \"ex sit nulla Duis nostru\",\n      \"level\": \"ad nisi\",\n      \"uid\": 74210863,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim\",\n      \"code\": \"Ut ea nulla\",\n      \"name\": \"ut dolor ipsum non\"\n     },\n     {\n      \"_id\": \"enim ea Duis\",\n      \"integration\": \"en\",\n      \"level\": \"eu aliquip ipsum commodo\",\n      \"uid\": -42660823,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum officia dolore ut\",\n      \"code\": \"dolor magna sit labore amet\",\n      \"name\": \"ve\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"consectetur in\",\n      \"integration\": \"nulla elit in ea\",\n      \"level\": \"labor\",\n      \"uid\": -59612227,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"en\",\n      \"code\": \"amet\",\n      \"name\": \"ut qui eu nulla do\"\n     },\n     {\n      \"_id\": \"id dolor Ut laborum cillum\",\n      \"integration\": \"voluptate et qui dolor magna\",\n      \"level\": \"dolore es\",\n      \"uid\": -70079915,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing cupidatat reprehenderit exercitation\",\n      \"code\": \"consectetur\",\n      \"name\": \"laboris sunt\"\n     }\n    ]\n   },\n   {\n    \"_id\": \"laboris voluptate dolore id\",\n    \"integration\": \"nisi\",\n    \"level\": \"velit irure Duis ex\",\n    \"uid\": -64820125,\n    \"opted\": true,\n    \"permissions\": [\n     \"mollit consequat ex ullamco\",\n     \"dolor ea tempor\"\n    ],\n    \"token\": \"volu\",\n    \"name\": \"dolore veniam anim occaecat\",\n    \"stores\": [\n     {\n      \"_id\": \"velit\",\n      \"integration\": \"quis et aliquip labore pariatur\",\n      \"level\": \"occaecat voluptate m\",\n      \"uid\": -22731751,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"adipisicing sed quis culpa\",\n      \"code\": \"Duis reprehenderit ut minim fugiat\",\n      \"name\": \"deserunt minim\"\n     },\n     {\n      \"_id\": \"eiusmod et ad\",\n      \"integration\": \"veniam Duis\",\n      \"level\": \"laboris\",\n      \"uid\": -41289349,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"culpa ut minim dolore enim\",\n      \"code\": \"\",\n      \"name\": \"officia in\"\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"irure repreh\",\n      \"integration\": \"nisi velit\",\n      \"level\": \"in cupidatat\",\n      \"uid\": 19869827,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu nostrud ali\",\n      \"code\": \"anim laborum ex dolore\",\n      \"name\": \"dolore laborum\"\n     },\n     {\n      \"_id\": \"et qui officia\",\n      \"integration\": \"commodo veniam magna reprehenderit\",\n      \"level\": \"velit tempor dolor nulla\",\n      \"uid\": 63418068,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ut do in\",\n      \"code\": \"dolor Duis anim qui\",\n      \"name\": \"eu sunt deserunt Excepte\"\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"est enim nostrud occa\",\n \"page\": {\n  \"type\": \"consectetur veniam\",\n  \"size\": 52830918,\n  \"current\": 6313528,\n  \"has_next\": false,\n  \"item_total\": 58045257,\n  \"next_id\": \"sunt exercitation eiusmod dolore proident\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "71389ba7-572b-4a99-849c-e82d24068c5e",
          "name": "getApiKey | Get Slingshot Configuration Of  A Company",
          "request": {
            "name": "getApiKey | Get Slingshot Configuration Of  A Company",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "209ff493-fa4f-42f2-a2e1-4046e99f88fe",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-25T14:17:20.706Z\",\n \"status\": -19000144,\n \"error\": \"aliqua deserunt\",\n \"exception\": \"commodo minim\",\n \"message\": \"mollit adipisicing occaecat Lorem\",\n \"total_time_taken_in_millis\": -6486591,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum et officia nisi adipisicing\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 313103,\n  \"current\": 22571286,\n  \"has_next\": true,\n  \"item_total\": -90350835,\n  \"next_id\": \"elit sunt voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cdf50231-4c9d-47fe-a85c-fed8d859f4a2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-25T14:17:20.706Z\",\n \"status\": -19000144,\n \"error\": \"aliqua deserunt\",\n \"exception\": \"commodo minim\",\n \"message\": \"mollit adipisicing occaecat Lorem\",\n \"total_time_taken_in_millis\": -6486591,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum et officia nisi adipisicing\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 313103,\n  \"current\": 22571286,\n  \"has_next\": true,\n  \"item_total\": -90350835,\n  \"next_id\": \"elit sunt voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "06f83a92-37ea-49e9-83b9-396a24d938d6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-25T14:17:20.706Z\",\n \"status\": -19000144,\n \"error\": \"aliqua deserunt\",\n \"exception\": \"commodo minim\",\n \"message\": \"mollit adipisicing occaecat Lorem\",\n \"total_time_taken_in_millis\": -6486591,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum et officia nisi adipisicing\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 313103,\n  \"current\": 22571286,\n  \"has_next\": true,\n  \"item_total\": -90350835,\n  \"next_id\": \"elit sunt voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "32919761-ea36-45db-87c3-1038eba104f5",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b6baec6e-1f1d-4645-bff0-4d330f4522a5",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-01-27T04:28:36.537Z\",\n \"status\": 90141704,\n \"error\": \"magna sed\",\n \"exception\": \"sed enim consectetur\",\n \"message\": \"quis nulla dolore ut\",\n \"total_time_taken_in_millis\": -56075877,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"company_id\": -98999605,\n  \"integration_data\": {},\n  \"company_name\": \"Lorem dolor\",\n  \"task_details\": {\n   \"type\": 52264082,\n   \"group_list\": [\n    {\n     \"text\": \"magna c\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aliqua veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20746491.222907975,\n   \"safe_stock\": 87803060,\n   \"period_threshold\": -32704018,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"eiusmod ad\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim aliquip\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"elit\",\n  \"alias\": \"consectetur\"\n },\n \"payload\": {\n  \"company_id\": -78332494,\n  \"integration_data\": {},\n  \"company_name\": \"pariatur in culpa\",\n  \"task_details\": {\n   \"type\": -30649218,\n   \"group_list\": [\n    {\n     \"text\": \"et dolor minim nulla tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud sunt\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -45857888.96961178,\n   \"safe_stock\": 19552762,\n   \"period_threshold\": -35184841,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"mollit ut id cupidatat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet sint\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"amet aliqua esse et\",\n  \"alias\": \"ipsum in\"\n },\n \"trace_id\": \"ut in\",\n \"page\": {\n  \"type\": \"cillum dolor reprehenderit laborum\",\n  \"size\": -475605,\n  \"current\": -5003772,\n  \"has_next\": true,\n  \"item_total\": -78527546,\n  \"next_id\": \"amet sunt sed elit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "92573f2f-c357-4a92-a736-824c8fbe21c7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-01-27T04:28:36.537Z\",\n \"status\": 90141704,\n \"error\": \"magna sed\",\n \"exception\": \"sed enim consectetur\",\n \"message\": \"quis nulla dolore ut\",\n \"total_time_taken_in_millis\": -56075877,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"company_id\": -98999605,\n  \"integration_data\": {},\n  \"company_name\": \"Lorem dolor\",\n  \"task_details\": {\n   \"type\": 52264082,\n   \"group_list\": [\n    {\n     \"text\": \"magna c\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aliqua veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20746491.222907975,\n   \"safe_stock\": 87803060,\n   \"period_threshold\": -32704018,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"eiusmod ad\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim aliquip\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"elit\",\n  \"alias\": \"consectetur\"\n },\n \"payload\": {\n  \"company_id\": -78332494,\n  \"integration_data\": {},\n  \"company_name\": \"pariatur in culpa\",\n  \"task_details\": {\n   \"type\": -30649218,\n   \"group_list\": [\n    {\n     \"text\": \"et dolor minim nulla tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud sunt\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -45857888.96961178,\n   \"safe_stock\": 19552762,\n   \"period_threshold\": -35184841,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"mollit ut id cupidatat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet sint\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"amet aliqua esse et\",\n  \"alias\": \"ipsum in\"\n },\n \"trace_id\": \"ut in\",\n \"page\": {\n  \"type\": \"cillum dolor reprehenderit laborum\",\n  \"size\": -475605,\n  \"current\": -5003772,\n  \"has_next\": true,\n  \"item_total\": -78527546,\n  \"next_id\": \"amet sunt sed elit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f5b1a1c3-16cd-4258-9447-3f0e2c4623ed",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-01-27T04:28:36.537Z\",\n \"status\": 90141704,\n \"error\": \"magna sed\",\n \"exception\": \"sed enim consectetur\",\n \"message\": \"quis nulla dolore ut\",\n \"total_time_taken_in_millis\": -56075877,\n \"http_status\": \"401 UNAUTHORIZED\",\n \"items\": {\n  \"company_id\": -98999605,\n  \"integration_data\": {},\n  \"company_name\": \"Lorem dolor\",\n  \"task_details\": {\n   \"type\": 52264082,\n   \"group_list\": [\n    {\n     \"text\": \"magna c\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aliqua veniam\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20746491.222907975,\n   \"safe_stock\": 87803060,\n   \"period_threshold\": -32704018,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"eiusmod ad\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"anim aliquip\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"elit\",\n  \"alias\": \"consectetur\"\n },\n \"payload\": {\n  \"company_id\": -78332494,\n  \"integration_data\": {},\n  \"company_name\": \"pariatur in culpa\",\n  \"task_details\": {\n   \"type\": -30649218,\n   \"group_list\": [\n    {\n     \"text\": \"et dolor minim nulla tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"nostrud sunt\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -45857888.96961178,\n   \"safe_stock\": 19552762,\n   \"period_threshold\": -35184841,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"mollit ut id cupidatat\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet sint\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"amet aliqua esse et\",\n  \"alias\": \"ipsum in\"\n },\n \"trace_id\": \"ut in\",\n \"page\": {\n  \"type\": \"cillum dolor reprehenderit laborum\",\n  \"size\": -475605,\n  \"current\": -5003772,\n  \"has_next\": true,\n  \"item_total\": -78527546,\n  \"next_id\": \"amet sunt sed elit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "795be815-34b9-4be6-942e-8cd5e8a36496",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "495fa282-aa2d-4471-88af-e272f6fc500a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1942-08-09T16:29:15.125Z\",\n \"status\": -99327261,\n \"error\": \"qui labore commodo ullamco cupidatat\",\n \"exception\": \"incididunt\",\n \"message\": \"incididunt laboris\",\n \"total_time_taken_in_millis\": -47639410,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": [\n  {\n   \"company_id\": 93142052,\n   \"integration_data\": {},\n   \"company_name\": \"in Duis\",\n   \"task_details\": {\n    \"type\": 65197443,\n    \"group_list\": [\n     {\n      \"text\": \"est eu laborum consequat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 492866.92111451924,\n    \"safe_stock\": -90601820,\n    \"period_threshold\": 53481163,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aliquip culpa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sint reprehenderit deserunt eu quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad elit consequat\",\n   \"alias\": \"non ea\"\n  },\n  {\n   \"company_id\": -90935817,\n   \"integration_data\": {},\n   \"company_name\": \"reprehenderit anim elit n\",\n   \"task_details\": {\n    \"type\": 23187965,\n    \"group_list\": [\n     {\n      \"text\": \"est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident occaecat culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -28355042.695810705,\n    \"safe_stock\": 48671476,\n    \"period_threshold\": -26890112,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna voluptate dolore consectetur ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in laborum p\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim ut in\",\n   \"alias\": \"elit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 20625995,\n   \"integration_data\": {},\n   \"company_name\": \"minim\",\n   \"task_details\": {\n    \"type\": 460396,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt ex nisi et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -36702060.879632995,\n    \"safe_stock\": -36557761,\n    \"period_threshold\": 40034830,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolore qui nisi Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"tempor ipsum magna la\",\n   \"alias\": \"sed \"\n  },\n  {\n   \"company_id\": 28549745,\n   \"integration_data\": {},\n   \"company_name\": \"sint\",\n   \"task_details\": {\n    \"type\": -66088233,\n    \"group_list\": [\n     {\n      \"text\": \"reprehenderit dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"en\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 61102308.9982886,\n    \"safe_stock\": -95702159,\n    \"period_threshold\": 33868090,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat dolore do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit exercitation ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur\",\n   \"alias\": \"cillum\"\n  }\n ],\n \"trace_id\": \"sed et\",\n \"page\": {\n  \"type\": \"qui esse\",\n  \"size\": 11447045,\n  \"current\": -58771819,\n  \"has_next\": false,\n  \"item_total\": 97062946,\n  \"next_id\": \"enim consequat velit irure\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dfdfc0d7-1bc2-488a-adec-ffca6c4b460c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-11-18T01:18:51.523Z\",\n \"status\": -10585547,\n \"error\": \"est quis tempor Duis\",\n \"exception\": \"in dolor amet\",\n \"message\": \"enim velit consectetur labore\",\n \"total_time_taken_in_millis\": 37890983,\n \"http_status\": \"414 URI_TOO_LONG\",\n \"items\": [\n  {\n   \"company_id\": -95398025,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat non est voluptate\",\n   \"task_details\": {\n    \"type\": 46578842,\n    \"group_list\": [\n     {\n      \"text\": \"proident Excepteur tempor id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud voluptate culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -31392417.23609793,\n    \"safe_stock\": -44535242,\n    \"period_threshold\": 58977279,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"an\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur sed velit\",\n   \"alias\": \"esse qu\"\n  },\n  {\n   \"company_id\": -75035970,\n   \"integration_data\": {},\n   \"company_name\": \"enim irure officia\",\n   \"task_details\": {\n    \"type\": 97875735,\n    \"group_list\": [\n     {\n      \"text\": \"id in laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in aliqua est deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 10036107.688341111,\n    \"safe_stock\": -64868072,\n    \"period_threshold\": -29095522,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis aute ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis consequat\",\n   \"alias\": \"quis laboris adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 76531247,\n   \"integration_data\": {},\n   \"company_name\": \"id veli\",\n   \"task_details\": {\n    \"type\": 7629380,\n    \"group_list\": [\n     {\n      \"text\": \"veniam sunt ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22151997.79366301,\n    \"safe_stock\": 98872010,\n    \"period_threshold\": 29109255,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id deserunt eu\",\n   \"alias\": \"ipsum\"\n  },\n  {\n   \"company_id\": -14243718,\n   \"integration_data\": {},\n   \"company_name\": \"consequat Ut\",\n   \"task_details\": {\n    \"type\": -95833865,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod reprehenderit sit dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -83755569.43515292,\n    \"safe_stock\": 94087873,\n    \"period_threshold\": 56803696,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip id culpa\",\n   \"alias\": \"ad in\"\n  }\n ],\n \"trace_id\": \"qui Ut des\",\n \"page\": {\n  \"type\": \"et dolor\",\n  \"size\": -13625561,\n  \"current\": -84666608,\n  \"has_next\": false,\n  \"item_total\": 67947896,\n  \"next_id\": \"minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "00533c29-4351-475f-887b-92b45a729e61",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-11-18T01:18:51.523Z\",\n \"status\": -10585547,\n \"error\": \"est quis tempor Duis\",\n \"exception\": \"in dolor amet\",\n \"message\": \"enim velit consectetur labore\",\n \"total_time_taken_in_millis\": 37890983,\n \"http_status\": \"414 URI_TOO_LONG\",\n \"items\": [\n  {\n   \"company_id\": -95398025,\n   \"integration_data\": {},\n   \"company_name\": \"cupidatat non est voluptate\",\n   \"task_details\": {\n    \"type\": 46578842,\n    \"group_list\": [\n     {\n      \"text\": \"proident Excepteur tempor id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud voluptate culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -31392417.23609793,\n    \"safe_stock\": -44535242,\n    \"period_threshold\": 58977279,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"an\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur sed velit\",\n   \"alias\": \"esse qu\"\n  },\n  {\n   \"company_id\": -75035970,\n   \"integration_data\": {},\n   \"company_name\": \"enim irure officia\",\n   \"task_details\": {\n    \"type\": 97875735,\n    \"group_list\": [\n     {\n      \"text\": \"id in laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in aliqua est deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 10036107.688341111,\n    \"safe_stock\": -64868072,\n    \"period_threshold\": -29095522,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis aute ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis consequat\",\n   \"alias\": \"quis laboris adipisicing\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 76531247,\n   \"integration_data\": {},\n   \"company_name\": \"id veli\",\n   \"task_details\": {\n    \"type\": 7629380,\n    \"group_list\": [\n     {\n      \"text\": \"veniam sunt ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 22151997.79366301,\n    \"safe_stock\": 98872010,\n    \"period_threshold\": 29109255,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labo\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id deserunt eu\",\n   \"alias\": \"ipsum\"\n  },\n  {\n   \"company_id\": -14243718,\n   \"integration_data\": {},\n   \"company_name\": \"consequat Ut\",\n   \"task_details\": {\n    \"type\": -95833865,\n    \"group_list\": [\n     {\n      \"text\": \"eiusmod reprehenderit sit dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"pariatur culpa\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -83755569.43515292,\n    \"safe_stock\": 94087873,\n    \"period_threshold\": 56803696,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip id culpa\",\n   \"alias\": \"ad in\"\n  }\n ],\n \"trace_id\": \"qui Ut des\",\n \"page\": {\n  \"type\": \"et dolor\",\n  \"size\": -13625561,\n  \"current\": -84666608,\n  \"has_next\": false,\n  \"item_total\": 67947896,\n  \"next_id\": \"minim\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "95554d9f-eb4e-4016-be25-87752b29ad53",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "dc35cc28-9b97-4b3e-a553-b7d325dda631",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-25T14:17:20.706Z\",\n \"status\": -19000144,\n \"error\": \"aliqua deserunt\",\n \"exception\": \"commodo minim\",\n \"message\": \"mollit adipisicing occaecat Lorem\",\n \"total_time_taken_in_millis\": -6486591,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum et officia nisi adipisicing\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 313103,\n  \"current\": 22571286,\n  \"has_next\": true,\n  \"item_total\": -90350835,\n  \"next_id\": \"elit sunt voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "af2f975c-4d5c-4f6f-958e-af4f78b4b76a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-25T14:17:20.706Z\",\n \"status\": -19000144,\n \"error\": \"aliqua deserunt\",\n \"exception\": \"commodo minim\",\n \"message\": \"mollit adipisicing occaecat Lorem\",\n \"total_time_taken_in_millis\": -6486591,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum et officia nisi adipisicing\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 313103,\n  \"current\": 22571286,\n  \"has_next\": true,\n  \"item_total\": -90350835,\n  \"next_id\": \"elit sunt voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "919c03de-34d8-4eee-ad65-41b28c04735f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1959-04-25T14:17:20.706Z\",\n \"status\": -19000144,\n \"error\": \"aliqua deserunt\",\n \"exception\": \"commodo minim\",\n \"message\": \"mollit adipisicing occaecat Lorem\",\n \"total_time_taken_in_millis\": -6486591,\n \"http_status\": \"405 METHOD_NOT_ALLOWED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"cillum et officia nisi adipisicing\",\n \"page\": {\n  \"type\": \"eu\",\n  \"size\": 313103,\n  \"current\": 22571286,\n  \"has_next\": true,\n  \"item_total\": -90350835,\n  \"next_id\": \"elit sunt voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a90ed4cb-b98e-4745-8cbf-f51db6834697",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "9f1d04d3-b653-421f-8c8f-0015350f4fbc",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-06T09:26:10.174Z\",\n \"status\": -49835180,\n \"error\": \"culpa incididunt\",\n \"exception\": \"tempor veniam\",\n \"message\": \"mollit dolor\",\n \"total_time_taken_in_millis\": 75434114,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure tempor\",\n \"page\": {\n  \"type\": \"ullamco anim sint magna fugiat\",\n  \"size\": -90762511,\n  \"current\": 75878872,\n  \"has_next\": false,\n  \"item_total\": -25410418,\n  \"next_id\": \"commodo ea esse sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "82287b78-1a17-4e91-a799-46dd184f6f59",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-06T09:26:10.174Z\",\n \"status\": -49835180,\n \"error\": \"culpa incididunt\",\n \"exception\": \"tempor veniam\",\n \"message\": \"mollit dolor\",\n \"total_time_taken_in_millis\": 75434114,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure tempor\",\n \"page\": {\n  \"type\": \"ullamco anim sint magna fugiat\",\n  \"size\": -90762511,\n  \"current\": 75878872,\n  \"has_next\": false,\n  \"item_total\": -25410418,\n  \"next_id\": \"commodo ea esse sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dd0ff896-2c4d-4c11-a660-9af1e9463664",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-06T09:26:10.174Z\",\n \"status\": -49835180,\n \"error\": \"culpa incididunt\",\n \"exception\": \"tempor veniam\",\n \"message\": \"mollit dolor\",\n \"total_time_taken_in_millis\": 75434114,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure tempor\",\n \"page\": {\n  \"type\": \"ullamco anim sint magna fugiat\",\n  \"size\": -90762511,\n  \"current\": 75878872,\n  \"has_next\": false,\n  \"item_total\": -25410418,\n  \"next_id\": \"commodo ea esse sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c821c1fa-d9bf-46b1-bbf0-0e1e2b59315c",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-06T09:26:10.174Z\",\n \"status\": -49835180,\n \"error\": \"culpa incididunt\",\n \"exception\": \"tempor veniam\",\n \"message\": \"mollit dolor\",\n \"total_time_taken_in_millis\": 75434114,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure tempor\",\n \"page\": {\n  \"type\": \"ullamco anim sint magna fugiat\",\n  \"size\": -90762511,\n  \"current\": 75878872,\n  \"has_next\": false,\n  \"item_total\": -25410418,\n  \"next_id\": \"commodo ea esse sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "25125c0b-4622-4bdd-b6fd-3fee99c230b8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-03-06T09:26:10.174Z\",\n \"status\": -49835180,\n \"error\": \"culpa incididunt\",\n \"exception\": \"tempor veniam\",\n \"message\": \"mollit dolor\",\n \"total_time_taken_in_millis\": 75434114,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"irure tempor\",\n \"page\": {\n  \"type\": \"ullamco anim sint magna fugiat\",\n  \"size\": -90762511,\n  \"current\": 75878872,\n  \"has_next\": false,\n  \"item_total\": -25410418,\n  \"next_id\": \"commodo ea esse sunt\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if(notInIgnoreHeader) {\n          let foundMatch = false;\n          for(let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    \n    // So if there are non-reserved chars (and it's not already all % encoded), just encode them all\n    if (/[^0-9A-Za-z;,/?:@&=+$\\-_.!~*'()#%]/.test(path)) {\n      path = encodeURI(decodeURI(path))\n    }\n\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx1.de"
    }
  ],
  "info": {
    "_postman_id": "86caaab1-6c4f-4cee-89a2-9753241b9a6a",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
