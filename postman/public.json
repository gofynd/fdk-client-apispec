{
  "item": [
    {
      "id": "8a59d7ca-5f4c-4fcc-bc5f-3ae8c56ad422",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c25af669-6efe-452c-808a-c121352dfd6f",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "75b182ee-c530-4ce7-9002-dc60c9c5b815",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "velit magna",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d747a19a-35b1-4bed-8380-1cbb9c33ffd8",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "velit magna",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "5af2501c-23f5-4b87-a06c-2cf05949dfc0",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "velit magna",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "52234ff6-e446-4154-badd-dfa7d8d5b71b",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "542fcd8f-dd1c-4229-a505-df88610c56df",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2fd586d3-937f-42a0-bd56-a2526eff9c7b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "42064562-5354-421e-9070-ee2c66d42e3f",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "10d9a2ec-e8da-4ce8-995c-f16ab71700a1",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -154065,\n   \"event_name\": \"nulla incididunt\",\n   \"event_type\": \"ipsum D\",\n   \"event_category\": \"voluptate\",\n   \"version\": \"pariatur nulla\",\n   \"display_name\": \"quis Ut\",\n   \"description\": \"dolo\",\n   \"created_on\": \"commodo nisi in sed anim\"\n  },\n  {\n   \"id\": -28293731,\n   \"event_name\": \"et do\",\n   \"event_type\": \"dolore proident laborum\",\n   \"event_category\": \"occaecat exercitation in\",\n   \"version\": \"incididunt ex \",\n   \"display_name\": \"dolor\",\n   \"description\": \"eu sint in laborum\",\n   \"created_on\": \"deserunt dolor Duis ut\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "81347d61-8865-45fd-89fc-a7e607214c96",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "97e6d86f-99d8-48df-8675-32d2f0e2789c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -98296855,\n   \"event_name\": \"irure aliqua eu tempor\",\n   \"event_type\": \"velit id veniam Lorem \",\n   \"event_category\": \"veniam aliqua amet consequat elit\",\n   \"version\": \"cupidatat enim reprehenderit Duis\",\n   \"display_name\": \"iru\",\n   \"description\": \"minim \",\n   \"created_on\": \"id velit incididunt voluptate aliquip\"\n  },\n  {\n   \"id\": -26419960,\n   \"event_name\": \"cupidatat voluptate nostrud ipsum\",\n   \"event_type\": \"in amet ut\",\n   \"event_category\": \"ut eiusmod nulla\",\n   \"version\": \"ullamco sit ex nostrud\",\n   \"display_name\": \"esse tempor aliqua\",\n   \"description\": \"eiusmod sed voluptate dolore\",\n   \"created_on\": \"culpa\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "76d1bac5-1b33-48ca-adae-49c1ff21de6c",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "de5e6ac0-e8f3-49ae-ac37-84271ba24075",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7ef6d798-f203-4e21-8cc5-745d3ab30f8c",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-09-25T11:12:31.890Z\",\n \"status\": 56494213,\n \"error\": \"Excepteur\",\n \"exception\": \"\",\n \"message\": \"nulla ad\",\n \"total_time_taken_in_millis\": -13856552,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"company_id\": -53841163,\n  \"integration_data\": {},\n  \"company_name\": \"ut in pariatur tempor irure\",\n  \"task_details\": {\n   \"type\": -10493252,\n   \"group_list\": [\n    {\n     \"text\": \"enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ad enim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 57914880.01687989,\n   \"safe_stock\": 71434857,\n   \"period_threshold\": 10751320,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"velit amet culpa ex\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aute cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"culpa aliqua anim voluptate\",\n  \"alias\": \"velit veniam aliquip\"\n },\n \"payload\": {\n  \"company_id\": -77572280,\n  \"integration_data\": {},\n  \"company_name\": \"\",\n  \"task_details\": {\n   \"type\": -56810454,\n   \"group_list\": [\n    {\n     \"text\": \"non consectetur cupidatat aute\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur officia occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 18669171.630526587,\n   \"safe_stock\": 46720732,\n   \"period_threshold\": 86275753,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"veniam qui\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"occaecat qui tempor\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sit nisi elit culpa\",\n  \"alias\": \"in amet id\"\n },\n \"trace_id\": \"amet\",\n \"page\": {\n  \"type\": \"consectetur Duis exercitation pariatur enim\",\n  \"size\": -44676984,\n  \"current\": 46876692,\n  \"has_next\": false,\n  \"item_total\": -21077135,\n  \"next_id\": \"Ut est\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2027a5ff-dbe8-42b2-b447-810048cb893d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-09-25T11:12:31.890Z\",\n \"status\": 56494213,\n \"error\": \"Excepteur\",\n \"exception\": \"\",\n \"message\": \"nulla ad\",\n \"total_time_taken_in_millis\": -13856552,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"company_id\": -53841163,\n  \"integration_data\": {},\n  \"company_name\": \"ut in pariatur tempor irure\",\n  \"task_details\": {\n   \"type\": -10493252,\n   \"group_list\": [\n    {\n     \"text\": \"enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ad enim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 57914880.01687989,\n   \"safe_stock\": 71434857,\n   \"period_threshold\": 10751320,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"velit amet culpa ex\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aute cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"culpa aliqua anim voluptate\",\n  \"alias\": \"velit veniam aliquip\"\n },\n \"payload\": {\n  \"company_id\": -77572280,\n  \"integration_data\": {},\n  \"company_name\": \"\",\n  \"task_details\": {\n   \"type\": -56810454,\n   \"group_list\": [\n    {\n     \"text\": \"non consectetur cupidatat aute\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur officia occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 18669171.630526587,\n   \"safe_stock\": 46720732,\n   \"period_threshold\": 86275753,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"veniam qui\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"occaecat qui tempor\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sit nisi elit culpa\",\n  \"alias\": \"in amet id\"\n },\n \"trace_id\": \"amet\",\n \"page\": {\n  \"type\": \"consectetur Duis exercitation pariatur enim\",\n  \"size\": -44676984,\n  \"current\": 46876692,\n  \"has_next\": false,\n  \"item_total\": -21077135,\n  \"next_id\": \"Ut est\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7cda9331-e8fa-4759-aa7b-74f3ce5f06e7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-09-25T11:12:31.890Z\",\n \"status\": 56494213,\n \"error\": \"Excepteur\",\n \"exception\": \"\",\n \"message\": \"nulla ad\",\n \"total_time_taken_in_millis\": -13856552,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"company_id\": -53841163,\n  \"integration_data\": {},\n  \"company_name\": \"ut in pariatur tempor irure\",\n  \"task_details\": {\n   \"type\": -10493252,\n   \"group_list\": [\n    {\n     \"text\": \"enim\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ad enim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 57914880.01687989,\n   \"safe_stock\": 71434857,\n   \"period_threshold\": 10751320,\n   \"period_threshold_type\": \"MONTHS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"velit amet culpa ex\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"aute cupidatat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"culpa aliqua anim voluptate\",\n  \"alias\": \"velit veniam aliquip\"\n },\n \"payload\": {\n  \"company_id\": -77572280,\n  \"integration_data\": {},\n  \"company_name\": \"\",\n  \"task_details\": {\n   \"type\": -56810454,\n   \"group_list\": [\n    {\n     \"text\": \"non consectetur cupidatat aute\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"pariatur officia occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 18669171.630526587,\n   \"safe_stock\": 46720732,\n   \"period_threshold\": 86275753,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"veniam qui\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"occaecat qui tempor\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sit nisi elit culpa\",\n  \"alias\": \"in amet id\"\n },\n \"trace_id\": \"amet\",\n \"page\": {\n  \"type\": \"consectetur Duis exercitation pariatur enim\",\n  \"size\": -44676984,\n  \"current\": 46876692,\n  \"has_next\": false,\n  \"item_total\": -21077135,\n  \"next_id\": \"Ut est\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0384c64b-ac07-4069-9423-5a35235cbf71",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "12fc7843-05d5-44a1-b766-3fea8778991d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-10-03T14:41:23.563Z\",\n \"status\": 11655879,\n \"error\": \"commodo nulla\",\n \"exception\": \"in cillum dolore enim aute\",\n \"message\": \"veniam culpa dolore\",\n \"total_time_taken_in_millis\": -76476883,\n \"http_status\": \"103 CHECKPOINT\",\n \"items\": [\n  {\n   \"company_id\": -33637580,\n   \"integration_data\": {},\n   \"company_name\": \"labo\",\n   \"task_details\": {\n    \"type\": 95005603,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat sed enim elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim veniam commod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61714346.42832301,\n    \"safe_stock\": 53766579,\n    \"period_threshold\": 16808807,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ip\",\n   \"alias\": \"et in ut sed\"\n  },\n  {\n   \"company_id\": -25221503,\n   \"integration_data\": {},\n   \"company_name\": \"aliquip Ut\",\n   \"task_details\": {\n    \"type\": -28406705,\n    \"group_list\": [\n     {\n      \"text\": \"qui adipisicing do\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed eu Lorem in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -12750232.725262478,\n    \"safe_stock\": 87843104,\n    \"period_threshold\": 39251442,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"cillum id labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit ipsum culpa nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut ea deserunt laborum\",\n   \"alias\": \"consectetur dolor culpa et magna\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -2691780,\n   \"integration_data\": {},\n   \"company_name\": \"ullamco fugiat aute\",\n   \"task_details\": {\n    \"type\": -99720030,\n    \"group_list\": [\n     {\n      \"text\": \"velit in aliqua mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt mollit nisi culpa quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -6132970.681821749,\n    \"safe_stock\": -40368454,\n    \"period_threshold\": -98809065,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi eu anim ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"esse sed cupidatat laborum ut\",\n   \"alias\": \"ea ipsum ut pariatur\"\n  },\n  {\n   \"company_id\": 260778,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation ut reprehenderit esse\",\n   \"task_details\": {\n    \"type\": -33638573,\n    \"group_list\": [\n     {\n      \"text\": \"dolor adipisicing ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit do qui\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -14690733.018849224,\n    \"safe_stock\": -25794798,\n    \"period_threshold\": -48075983,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in ex\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id sint sunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"id pariatur aliqua\",\n   \"alias\": \"sint ut reprehenderit consectetur\"\n  }\n ],\n \"trace_id\": \"labore dolore Duis magna\",\n \"page\": {\n  \"type\": \"ullamco lab\",\n  \"size\": -31644177,\n  \"current\": -80710896,\n  \"has_next\": true,\n  \"item_total\": -15498799,\n  \"next_id\": \"occaecat non nisi sit\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "82ba41bc-15cb-44e7-8885-1743309d8179",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-06-18T00:56:52.182Z\",\n \"status\": 87484507,\n \"error\": \"deserunt voluptate consectetur\",\n \"exception\": \"Excepteur proident Duis\",\n \"message\": \"in Duis dolor labore\",\n \"total_time_taken_in_millis\": 85089359,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": [\n  {\n   \"company_id\": -11254840,\n   \"integration_data\": {},\n   \"company_name\": \"in sunt culpa quis\",\n   \"task_details\": {\n    \"type\": -16153447,\n    \"group_list\": [\n     {\n      \"text\": \"enim cupidatat nulla in amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum occaecat ut quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -203338.5412543565,\n    \"safe_stock\": 15998268,\n    \"period_threshold\": -44275480,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"l\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non\",\n   \"alias\": \"consectetur non cillum velit \"\n  },\n  {\n   \"company_id\": 68570805,\n   \"integration_data\": {},\n   \"company_name\": \"cillum Duis veniam ut\",\n   \"task_details\": {\n    \"type\": -41854687,\n    \"group_list\": [\n     {\n      \"text\": \"dolore sed labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim tempor amet consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 15100159.451399311,\n    \"safe_stock\": -41720410,\n    \"period_threshold\": -27591438,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id elit \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis esse eiusmod cupidatat\",\n   \"alias\": \"cillum in aliqua Lorem dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 27855528,\n   \"integration_data\": {},\n   \"company_name\": \"in veniam aute\",\n   \"task_details\": {\n    \"type\": 54354021,\n    \"group_list\": [\n     {\n      \"text\": \"anim sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate laborum aliqua adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80339843.74805456,\n    \"safe_stock\": -9254390,\n    \"period_threshold\": -2447416,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut aliquip labore Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in aute cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum\",\n   \"alias\": \"qui et ipsum labore \"\n  },\n  {\n   \"company_id\": -73116,\n   \"integration_data\": {},\n   \"company_name\": \"ad\",\n   \"task_details\": {\n    \"type\": 41487955,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non velit amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48357081.67510107,\n    \"safe_stock\": 83709954,\n    \"period_threshold\": -16786132,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure enim non in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim tempor\",\n   \"alias\": \"ea\"\n  }\n ],\n \"trace_id\": \"eu do\",\n \"page\": {\n  \"type\": \"exercitation sit adipisicing ut\",\n  \"size\": 94512642,\n  \"current\": -65054048,\n  \"has_next\": false,\n  \"item_total\": 93344849,\n  \"next_id\": \"dolor nulla\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c72bde58-ac68-4721-be48-0f28162288d7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1964-06-18T00:56:52.182Z\",\n \"status\": 87484507,\n \"error\": \"deserunt voluptate consectetur\",\n \"exception\": \"Excepteur proident Duis\",\n \"message\": \"in Duis dolor labore\",\n \"total_time_taken_in_millis\": 85089359,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": [\n  {\n   \"company_id\": -11254840,\n   \"integration_data\": {},\n   \"company_name\": \"in sunt culpa quis\",\n   \"task_details\": {\n    \"type\": -16153447,\n    \"group_list\": [\n     {\n      \"text\": \"enim cupidatat nulla in amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"laborum occaecat ut quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -203338.5412543565,\n    \"safe_stock\": 15998268,\n    \"period_threshold\": -44275480,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"l\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"non\",\n   \"alias\": \"consectetur non cillum velit \"\n  },\n  {\n   \"company_id\": 68570805,\n   \"integration_data\": {},\n   \"company_name\": \"cillum Duis veniam ut\",\n   \"task_details\": {\n    \"type\": -41854687,\n    \"group_list\": [\n     {\n      \"text\": \"dolore sed labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim tempor amet consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 15100159.451399311,\n    \"safe_stock\": -41720410,\n    \"period_threshold\": -27591438,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id elit \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"esse nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis esse eiusmod cupidatat\",\n   \"alias\": \"cillum in aliqua Lorem dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 27855528,\n   \"integration_data\": {},\n   \"company_name\": \"in veniam aute\",\n   \"task_details\": {\n    \"type\": 54354021,\n    \"group_list\": [\n     {\n      \"text\": \"anim sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate laborum aliqua adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80339843.74805456,\n    \"safe_stock\": -9254390,\n    \"period_threshold\": -2447416,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut aliquip labore Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in aute cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"cillum\",\n   \"alias\": \"qui et ipsum labore \"\n  },\n  {\n   \"company_id\": -73116,\n   \"integration_data\": {},\n   \"company_name\": \"ad\",\n   \"task_details\": {\n    \"type\": 41487955,\n    \"group_list\": [\n     {\n      \"text\": \"incididunt ea\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in non velit amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 48357081.67510107,\n    \"safe_stock\": 83709954,\n    \"period_threshold\": -16786132,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laborum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"irure enim non in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"minim tempor\",\n   \"alias\": \"ea\"\n  }\n ],\n \"trace_id\": \"eu do\",\n \"page\": {\n  \"type\": \"exercitation sit adipisicing ut\",\n  \"size\": 94512642,\n  \"current\": -65054048,\n  \"has_next\": false,\n  \"item_total\": 93344849,\n  \"next_id\": \"dolor nulla\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "514f7b66-2787-45a7-ac4e-d6dc86857e63",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "123d5196-6fb1-4985-a145-0e6a2fa99b26",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-09-11T09:51:09.731Z\",\n \"status\": -73943397,\n \"error\": \"tempor aliqua\",\n \"exception\": \"sunt consequat\",\n \"message\": \"amet in nulla est\",\n \"total_time_taken_in_millis\": -4633536,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"fugiat aute id Lorem\",\n \"page\": {\n  \"type\": \"nostrud cupidatat fugiat\",\n  \"size\": 36528995,\n  \"current\": 3075878,\n  \"has_next\": true,\n  \"item_total\": 95491526,\n  \"next_id\": \"cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "4c487163-f41c-4caa-ab90-cc7ef977d0db",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-09-11T09:51:09.731Z\",\n \"status\": -73943397,\n \"error\": \"tempor aliqua\",\n \"exception\": \"sunt consequat\",\n \"message\": \"amet in nulla est\",\n \"total_time_taken_in_millis\": -4633536,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"fugiat aute id Lorem\",\n \"page\": {\n  \"type\": \"nostrud cupidatat fugiat\",\n  \"size\": 36528995,\n  \"current\": 3075878,\n  \"has_next\": true,\n  \"item_total\": 95491526,\n  \"next_id\": \"cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d6db6650-ce9c-44c4-84fe-0cbdc5c480d7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-09-11T09:51:09.731Z\",\n \"status\": -73943397,\n \"error\": \"tempor aliqua\",\n \"exception\": \"sunt consequat\",\n \"message\": \"amet in nulla est\",\n \"total_time_taken_in_millis\": -4633536,\n \"http_status\": \"303 SEE_OTHER\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"fugiat aute id Lorem\",\n \"page\": {\n  \"type\": \"nostrud cupidatat fugiat\",\n  \"size\": 36528995,\n  \"current\": 3075878,\n  \"has_next\": true,\n  \"item_total\": 95491526,\n  \"next_id\": \"cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "177a61ce-9139-4230-93fa-35c832895c74",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "9f72c1e7-ee43-42f3-8733-1b7d11ea3fcc",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-18T02:42:20.434Z\",\n \"status\": -2619161,\n \"error\": \"do\",\n \"exception\": \"est non minim in commodo\",\n \"message\": \"dolore eu anim\",\n \"total_time_taken_in_millis\": 88928027,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed in Excepteur sint\",\n \"page\": {\n  \"type\": \"enim ea\",\n  \"size\": -81962046,\n  \"current\": -91297819,\n  \"has_next\": false,\n  \"item_total\": -90116064,\n  \"next_id\": \"do anim ve\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "12a6a170-9c9b-44e1-b07e-ce19ecb1977e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-18T02:42:20.434Z\",\n \"status\": -2619161,\n \"error\": \"do\",\n \"exception\": \"est non minim in commodo\",\n \"message\": \"dolore eu anim\",\n \"total_time_taken_in_millis\": 88928027,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed in Excepteur sint\",\n \"page\": {\n  \"type\": \"enim ea\",\n  \"size\": -81962046,\n  \"current\": -91297819,\n  \"has_next\": false,\n  \"item_total\": -90116064,\n  \"next_id\": \"do anim ve\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "43116d60-c59d-4b34-95b0-e84c8814aa95",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-18T02:42:20.434Z\",\n \"status\": -2619161,\n \"error\": \"do\",\n \"exception\": \"est non minim in commodo\",\n \"message\": \"dolore eu anim\",\n \"total_time_taken_in_millis\": 88928027,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed in Excepteur sint\",\n \"page\": {\n  \"type\": \"enim ea\",\n  \"size\": -81962046,\n  \"current\": -91297819,\n  \"has_next\": false,\n  \"item_total\": -90116064,\n  \"next_id\": \"do anim ve\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d961d3eb-6db8-45fd-b55f-7d2ef95e6d75",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-18T02:42:20.434Z\",\n \"status\": -2619161,\n \"error\": \"do\",\n \"exception\": \"est non minim in commodo\",\n \"message\": \"dolore eu anim\",\n \"total_time_taken_in_millis\": 88928027,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed in Excepteur sint\",\n \"page\": {\n  \"type\": \"enim ea\",\n  \"size\": -81962046,\n  \"current\": -91297819,\n  \"has_next\": false,\n  \"item_total\": -90116064,\n  \"next_id\": \"do anim ve\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "453354bf-aa9d-4876-9b91-d318a089720b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-08-18T02:42:20.434Z\",\n \"status\": -2619161,\n \"error\": \"do\",\n \"exception\": \"est non minim in commodo\",\n \"message\": \"dolore eu anim\",\n \"total_time_taken_in_millis\": 88928027,\n \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed in Excepteur sint\",\n \"page\": {\n  \"type\": \"enim ea\",\n  \"size\": -81962046,\n  \"current\": -91297819,\n  \"has_next\": false,\n  \"item_total\": -90116064,\n  \"next_id\": \"do anim ve\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "4b2d3d0c-5666-48d2-82e9-886c7d18a656",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
