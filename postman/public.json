{
  "item": [
    {
      "id": "3b8f07ef-08b8-44fe-add2-d22e2783f6e1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3a215c27-3162-4cae-b856-6bfc1a86c8a8",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0bc724bb-0060-44a5-bd55-a3ae019115cc",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliqua minim qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "934049c0-49fd-4c26-a088-e88a5272fb21",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliqua minim qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "560f5ba2-8a56-4b67-bb05-c7d478912e2d",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliqua minim qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cb44cbd2-45c6-435d-8813-229177797833",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6c823ea5-b831-47f3-882c-8e9807ecac44",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "1108433f-9417-4c0d-bc9a-f5949329435a",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "38fd1448-becd-4e99-b2f5-74de70fa08cd",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "3e236f0c-d386-4f3e-b57c-ede9e8d76114",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 11692174,\n   \"event_name\": \"o\",\n   \"event_type\": \"in ut\",\n   \"event_category\": \"velit\",\n   \"version\": \"cupidatat commodo amet dolor\",\n   \"display_name\": \"elit\",\n   \"description\": \"Duis sint sunt mollit\",\n   \"created_on\": \"Duis ad commodo sint\"\n  },\n  {\n   \"id\": -15421650,\n   \"event_name\": \"nisi mollit ea sed Ut\",\n   \"event_type\": \"dolor\",\n   \"event_category\": \"ullamco\",\n   \"version\": \"commodo do deserunt\",\n   \"display_name\": \"ipsum in aliquip magna esse\",\n   \"description\": \"ea \",\n   \"created_on\": \"adipisicing in commodo\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "ad7c00db-dc18-453f-8b6d-19750816e6fa",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "be6601cf-6fe8-4eb5-9f1a-5766d16f8cc0",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -55439021,\n   \"event_name\": \"magna cillum in\",\n   \"event_type\": \"dolore fugiat et\",\n   \"event_category\": \"cupidatat voluptate\",\n   \"version\": \"dolor consectetur irure\",\n   \"display_name\": \"elit id ut\",\n   \"description\": \"occaecat mollit aute\",\n   \"created_on\": \"do magna\"\n  },\n  {\n   \"id\": 1936067,\n   \"event_name\": \"Lorem\",\n   \"event_type\": \"exercitation\",\n   \"event_category\": \"elit velit consectetur in\",\n   \"version\": \"quis adipisicing dolore elit\",\n   \"display_name\": \"anim\",\n   \"description\": \"Excepteur nostrud Lorem ad\",\n   \"created_on\": \"voluptate \"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "67d35569-4a31-4804-a9df-6eebf1e422b7",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a45e01b5-9bc3-4962-8d37-c9d5fd9cb024",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1e927a18-d9d3-4eef-a6d5-5b1e8d0f0c2f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1992-06-24T21:23:35.666Z\",\n \"status\": -81998271,\n \"error\": \"magna incididunt Excepteur\",\n \"exception\": \"eiusmod eu\",\n \"message\": \"magna Duis pariatur Lorem\",\n \"total_time_taken_in_millis\": 43901258,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": [\n  {\n   \"company_id\": -13955776,\n   \"integration_data\": {},\n   \"company_name\": \"ut culpa tempor nisi exercitation\",\n   \"task_details\": {\n    \"type\": -91009006,\n    \"group_list\": [\n     {\n      \"text\": \"irure velit in adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"qui quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -96967922.19291446,\n    \"safe_stock\": 77877332,\n    \"period_threshold\": -50945366,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et quis ea eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure aliquip\",\n   \"alias\": \"cillum deserunt consequat\"\n  },\n  {\n   \"company_id\": -36415400,\n   \"integration_data\": {},\n   \"company_name\": \"esse commodo ut ex\",\n   \"task_details\": {\n    \"type\": -55134476,\n    \"group_list\": [\n     {\n      \"text\": \"labore ea ipsum officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua eiusmod ad in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 25720284.677499145,\n    \"safe_stock\": 58710087,\n    \"period_threshold\": 6577709,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim nulla cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis esse id laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit ea in\",\n   \"alias\": \"proident\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 15023360,\n   \"integration_data\": {},\n   \"company_name\": \"quis sint\",\n   \"task_details\": {\n    \"type\": -6178070,\n    \"group_list\": [\n     {\n      \"text\": \"quis dolor deseru\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute ullamco\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -50753612.74709929,\n    \"safe_stock\": -92463032,\n    \"period_threshold\": -48098418,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum mollit rep\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa aliqua aliquip\",\n   \"alias\": \"culpa laboris\"\n  },\n  {\n   \"company_id\": 75242199,\n   \"integration_data\": {},\n   \"company_name\": \"veniam irure proident\",\n   \"task_details\": {\n    \"type\": -20725928,\n    \"group_list\": [\n     {\n      \"text\": \"nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -2405092.2910621166,\n    \"safe_stock\": -1504407,\n    \"period_threshold\": 20446180,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur proident dolor \",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore deserunt adipisicing Duis exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in\",\n   \"alias\": \"dolor q\"\n  }\n ],\n \"trace_id\": \"cupidatat nulla cillum\",\n \"page\": {\n  \"type\": \"qui aute ea anim\",\n  \"size\": 5974095,\n  \"current\": -33453675,\n  \"has_next\": true,\n  \"item_total\": 23624353,\n  \"next_id\": \"magna reprehenderit in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fd45072f-5136-416a-b823-27c07c63e504",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-01-13T22:02:51.184Z\",\n \"status\": 55457281,\n \"error\": \"ex Duis laborum esse\",\n \"exception\": \"esse consequat\",\n \"message\": \"ad ut\",\n \"total_time_taken_in_millis\": 2475202,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": [\n  {\n   \"company_id\": 37696260,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem commodo\",\n   \"task_details\": {\n    \"type\": -32668948,\n    \"group_list\": [\n     {\n      \"text\": \"consequat non minim reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore nisi Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8838743.878721327,\n    \"safe_stock\": 97261026,\n    \"period_threshold\": -45044341,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim occaecat Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in in l\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui in commodo occaecat\",\n   \"alias\": \"sed\"\n  },\n  {\n   \"company_id\": -63725913,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat cupidatat ex occaecat dolor\",\n   \"task_details\": {\n    \"type\": 65722697,\n    \"group_list\": [\n     {\n      \"text\": \"esse quis non dolore deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore reprehenderit quis cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -91446505.6006514,\n    \"safe_stock\": 76968523,\n    \"period_threshold\": -30302133,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa ipsum magna do veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugiat et pariatur in in\",\n   \"alias\": \"est Lorem amet qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -84948617,\n   \"integration_data\": {},\n   \"company_name\": \"ex\",\n   \"task_details\": {\n    \"type\": -39198838,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat ut amet deserunt do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 43736245.48430145,\n    \"safe_stock\": -56207555,\n    \"period_threshold\": 2194588,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia sint minim velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"tempor ex ad\",\n   \"alias\": \"dolore consequat Ut pariatur\"\n  },\n  {\n   \"company_id\": -929520,\n   \"integration_data\": {},\n   \"company_name\": \"ut eu dolore\",\n   \"task_details\": {\n    \"type\": -96765605,\n    \"group_list\": [\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea aute irure labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 42310998.38210389,\n    \"safe_stock\": 79369576,\n    \"period_threshold\": -53136917,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa eu veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est ut\",\n   \"alias\": \"ullamco\"\n  }\n ],\n \"trace_id\": \"id ad occaecat\",\n \"page\": {\n  \"type\": \"in id consequat velit dolor\",\n  \"size\": -84538776,\n  \"current\": -10493271,\n  \"has_next\": false,\n  \"item_total\": 44782602,\n  \"next_id\": \"in ad co\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "cbedf055-2f4d-49c9-a67f-2484a11e3c18",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1952-01-13T22:02:51.184Z\",\n \"status\": 55457281,\n \"error\": \"ex Duis laborum esse\",\n \"exception\": \"esse consequat\",\n \"message\": \"ad ut\",\n \"total_time_taken_in_millis\": 2475202,\n \"http_status\": \"416 REQUESTED_RANGE_NOT_SATISFIABLE\",\n \"items\": [\n  {\n   \"company_id\": 37696260,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem commodo\",\n   \"task_details\": {\n    \"type\": -32668948,\n    \"group_list\": [\n     {\n      \"text\": \"consequat non minim reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore nisi Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -8838743.878721327,\n    \"safe_stock\": 97261026,\n    \"period_threshold\": -45044341,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim occaecat Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in in l\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui in commodo occaecat\",\n   \"alias\": \"sed\"\n  },\n  {\n   \"company_id\": -63725913,\n   \"integration_data\": {},\n   \"company_name\": \"fugiat cupidatat ex occaecat dolor\",\n   \"task_details\": {\n    \"type\": 65722697,\n    \"group_list\": [\n     {\n      \"text\": \"esse quis non dolore deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore reprehenderit quis cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -91446505.6006514,\n    \"safe_stock\": 76968523,\n    \"period_threshold\": -30302133,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa ipsum magna do veniam\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"fugiat et pariatur in in\",\n   \"alias\": \"est Lorem amet qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -84948617,\n   \"integration_data\": {},\n   \"company_name\": \"ex\",\n   \"task_details\": {\n    \"type\": -39198838,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cupidatat ut amet deserunt do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 43736245.48430145,\n    \"safe_stock\": -56207555,\n    \"period_threshold\": 2194588,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"dolor minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"officia sint minim velit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"tempor ex ad\",\n   \"alias\": \"dolore consequat Ut pariatur\"\n  },\n  {\n   \"company_id\": -929520,\n   \"integration_data\": {},\n   \"company_name\": \"ut eu dolore\",\n   \"task_details\": {\n    \"type\": -96765605,\n    \"group_list\": [\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea aute irure labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 42310998.38210389,\n    \"safe_stock\": 79369576,\n    \"period_threshold\": -53136917,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"culpa eu veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est ut\",\n   \"alias\": \"ullamco\"\n  }\n ],\n \"trace_id\": \"id ad occaecat\",\n \"page\": {\n  \"type\": \"in id consequat velit dolor\",\n  \"size\": -84538776,\n  \"current\": -10493271,\n  \"has_next\": false,\n  \"item_total\": 44782602,\n  \"next_id\": \"in ad co\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2c79fecc-7eb5-45fe-a316-8bd3e76b844a",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b8de51a0-9bef-46ba-8091-2090a257620b",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-02-05T23:58:47.074Z\",\n \"status\": -84863554,\n \"error\": \"sit dolore\",\n \"exception\": \"reprehenderit nisi\",\n \"message\": \"in Excepteur et\",\n \"total_time_taken_in_millis\": -42031045,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"amet minim\",\n \"page\": {\n  \"type\": \"dolore esse culpa proident\",\n  \"size\": 61947064,\n  \"current\": -2363471,\n  \"has_next\": true,\n  \"item_total\": 55359007,\n  \"next_id\": \"Excepteur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6c7c24a1-4c10-4c07-bd1f-fb7525f6e8cc",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-02-05T23:58:47.074Z\",\n \"status\": -84863554,\n \"error\": \"sit dolore\",\n \"exception\": \"reprehenderit nisi\",\n \"message\": \"in Excepteur et\",\n \"total_time_taken_in_millis\": -42031045,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"amet minim\",\n \"page\": {\n  \"type\": \"dolore esse culpa proident\",\n  \"size\": 61947064,\n  \"current\": -2363471,\n  \"has_next\": true,\n  \"item_total\": 55359007,\n  \"next_id\": \"Excepteur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "43185447-7efc-4ae0-8502-07c16b8d32d2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-02-05T23:58:47.074Z\",\n \"status\": -84863554,\n \"error\": \"sit dolore\",\n \"exception\": \"reprehenderit nisi\",\n \"message\": \"in Excepteur et\",\n \"total_time_taken_in_millis\": -42031045,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"amet minim\",\n \"page\": {\n  \"type\": \"dolore esse culpa proident\",\n  \"size\": 61947064,\n  \"current\": -2363471,\n  \"has_next\": true,\n  \"item_total\": 55359007,\n  \"next_id\": \"Excepteur qui\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1e992a9a-f0ee-420e-96e7-725e79a8a1e5",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "17130293-2561-49dd-8496-d6325f84aadd",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-08-23T07:24:37.341Z\",\n \"status\": 4781024,\n \"error\": \"amet in\",\n \"exception\": \"ut cupidatat\",\n \"message\": \"ex aliquip culpa ullamco\",\n \"total_time_taken_in_millis\": -19796638,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate elit\",\n \"page\": {\n  \"type\": \"cupidatat voluptate tem\",\n  \"size\": -74386192,\n  \"current\": -74476587,\n  \"has_next\": false,\n  \"item_total\": -10912883,\n  \"next_id\": \"ullamco nisi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2eb9db32-99bc-4726-bb5b-c2cd2693400b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-08-23T07:24:37.341Z\",\n \"status\": 4781024,\n \"error\": \"amet in\",\n \"exception\": \"ut cupidatat\",\n \"message\": \"ex aliquip culpa ullamco\",\n \"total_time_taken_in_millis\": -19796638,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate elit\",\n \"page\": {\n  \"type\": \"cupidatat voluptate tem\",\n  \"size\": -74386192,\n  \"current\": -74476587,\n  \"has_next\": false,\n  \"item_total\": -10912883,\n  \"next_id\": \"ullamco nisi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8fa0b28c-2d12-4685-8c22-d4d68f642b7f",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-08-23T07:24:37.341Z\",\n \"status\": 4781024,\n \"error\": \"amet in\",\n \"exception\": \"ut cupidatat\",\n \"message\": \"ex aliquip culpa ullamco\",\n \"total_time_taken_in_millis\": -19796638,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate elit\",\n \"page\": {\n  \"type\": \"cupidatat voluptate tem\",\n  \"size\": -74386192,\n  \"current\": -74476587,\n  \"has_next\": false,\n  \"item_total\": -10912883,\n  \"next_id\": \"ullamco nisi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e15aaf0b-c266-481d-bebf-1bcf98ade3c9",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-08-23T07:24:37.341Z\",\n \"status\": 4781024,\n \"error\": \"amet in\",\n \"exception\": \"ut cupidatat\",\n \"message\": \"ex aliquip culpa ullamco\",\n \"total_time_taken_in_millis\": -19796638,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate elit\",\n \"page\": {\n  \"type\": \"cupidatat voluptate tem\",\n  \"size\": -74386192,\n  \"current\": -74476587,\n  \"has_next\": false,\n  \"item_total\": -10912883,\n  \"next_id\": \"ullamco nisi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2683b312-07dc-41e7-90ca-47ac28b87211",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1956-08-23T07:24:37.341Z\",\n \"status\": 4781024,\n \"error\": \"amet in\",\n \"exception\": \"ut cupidatat\",\n \"message\": \"ex aliquip culpa ullamco\",\n \"total_time_taken_in_millis\": -19796638,\n \"http_status\": \"400 BAD_REQUEST\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"voluptate elit\",\n \"page\": {\n  \"type\": \"cupidatat voluptate tem\",\n  \"size\": -74386192,\n  \"current\": -74476587,\n  \"has_next\": false,\n  \"item_total\": -10912883,\n  \"next_id\": \"ullamco nisi\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "daa7fcef-09f2-4a48-852b-0664676f64f4",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
