{
  "item": [
    {
      "id": "ef2068d5-0cf2-4cc9-9d6a-0305f9594134",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "51860e51-1425-4ccb-ac92-527636d6bd79",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9c8972cb-e66f-44e3-bb5c-1d496cef4f6f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in ut magna reprehenderit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ff5b1293-c7f1-4bbe-996b-49fbee72a671",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in ut magna reprehenderit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "494e08c7-8f06-4183-8323-7914719db60d",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in ut magna reprehenderit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "421afbc5-b324-41aa-ab1a-343a6f229bd3",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "bbd41f9a-83b6-4486-acdb-5ca8ae79e837",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "077d9513-0c08-4306-8910-5eb9d9e0b58b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a1ec6932-d193-4887-92b5-9fe0b2769390",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "21994c09-7ed7-45d3-b11e-e09a83c21902",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -30234516,\n   \"event_name\": \"elit proident E\",\n   \"event_type\": \"sit\",\n   \"event_category\": \"ut enim pariatur\",\n   \"version\": \"dolore aute\",\n   \"display_name\": \"exercitation occaecat tempor Lorem\",\n   \"description\": \"esse fug\",\n   \"created_on\": \"exercitation\"\n  },\n  {\n   \"id\": 77794588,\n   \"event_name\": \"minim consequat\",\n   \"event_type\": \"et Duis magna\",\n   \"event_category\": \"fugiat quis nostrud voluptate labore\",\n   \"version\": \"sint id veniam labore\",\n   \"display_name\": \"incididunt sunt\",\n   \"description\": \"commodo\",\n   \"created_on\": \"nostrud voluptate\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e55fec70-348b-45a5-b349-a39c8f34eaaf",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "067c076d-90ac-412f-a0c2-82e6beca2ae9",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -77871339,\n   \"event_name\": \"cupidatat laborum\",\n   \"event_type\": \"tempor ut occaecat sit culpa\",\n   \"event_category\": \"consectetur aliquip amet mollit\",\n   \"version\": \"irure aliqua eiusmod\",\n   \"display_name\": \"sint\",\n   \"description\": \"id exercitation veniam\",\n   \"created_on\": \"exercitation laboris est reprehenderit\"\n  },\n  {\n   \"id\": -12641285,\n   \"event_name\": \"exe\",\n   \"event_type\": \"anim qui\",\n   \"event_category\": \"velit nulla esse ad\",\n   \"version\": \"ea in\",\n   \"display_name\": \"deserunt officia Ut dolor\",\n   \"description\": \"deserunt\",\n   \"created_on\": \"do minim Lorem\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "ccac7669-248f-4622-8c95-9e2379188f5b",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6bc51c71-bcc3-4172-a271-267e4861ea11",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "201ed827-8d22-40cf-b1cd-11de06eed464",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-02-05T21:21:18.531Z\",\n \"status\": 41457589,\n \"error\": \"non pariatur Ut\",\n \"exception\": \"sint\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -69694722,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"non\",\n   \"description\": \"rep\",\n   \"name\": \"exercitation\",\n   \"slug\": \"sed consequat adipisicing Ut\",\n   \"meta\": [\n    {\n     \"_id\": \"officia dolor deserunt\",\n     \"name\": \"ad sit nulla eiusmod\",\n     \"value\": \"commodo\"\n    },\n    {\n     \"_id\": \"in do\",\n     \"name\": \"et Duis do\",\n     \"value\": \"labore pariatur adipisicing eiusmod minim\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Lorem ex\",\n    \"integration\": \"officia esse reprehenderit velit in\",\n    \"level\": \"quis exercitation\",\n    \"uid\": 95394535,\n    \"opted\": false,\n    \"permissions\": [\n     \"Duis in consectetur cillum non\",\n     \"quis cu\"\n    ],\n    \"token\": \"esse consequat\",\n    \"name\": \"Ut nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"labore nostrud\",\n      \"integration\": \"Excepteur ipsum\",\n      \"level\": \"nostrud dolor cupidatat ex\",\n      \"uid\": 22386292,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed consectetur reprehenderit\",\n      \"code\": \"laboris anim\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla in laboris velit\",\n      \"integration\": \"occaecat laboris\",\n      \"level\": \"pariatur sed do\",\n      \"uid\": -27996221,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation laboris\",\n      \"code\": \"mollit Lorem consequat\",\n      \"name\": \"id pariatur irure sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim ex proident aliquip\",\n      \"integration\": \"proident ut consequat exercitation\",\n      \"level\": \"veniam nulla\",\n      \"uid\": -24483032,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et Lorem nisi\",\n      \"code\": \"anim ut aliqua id\",\n      \"name\": \"aliqua ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat occaecat sunt\",\n      \"integration\": \"Lorem ex voluptate\",\n      \"level\": \"occaecat quis\",\n      \"uid\": -50400424,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum irure sed\",\n      \"code\": \"consequat\",\n      \"name\": \"eu exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"consequat anim\",\n    \"integration\": \"enim ut reprehenderit\",\n    \"level\": \"exercitation consectetur\",\n    \"uid\": 43364179,\n    \"opted\": false,\n    \"permissions\": [\n     \"ad Excepteur exercitation\",\n     \"quis\"\n    ],\n    \"token\": \"eiusmod in\",\n    \"name\": \"non\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate sit consequat\",\n      \"integration\": \"sit reprehenderi\",\n      \"level\": \"commodo magna\",\n      \"uid\": 10597621,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et mollit incididunt Ut dolore\",\n      \"code\": \"proident adipisicing cillum deserunt nisi\",\n      \"name\": \"amet eu quis culpa irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex\",\n      \"integration\": \"cupidatat velit\",\n      \"level\": \"labore proident velit Ut\",\n      \"uid\": -80307537,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"enim\",\n      \"name\": \"sunt culpa et dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Ut dolore veniam consequat dolore\",\n      \"integration\": \"irure eu veniam\",\n      \"level\": \"est et officia\",\n      \"uid\": -17093479,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum dolore sint voluptate\",\n      \"code\": \"sed est exercitation pariatur\",\n      \"name\": \"occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore id\",\n      \"integration\": \"quis Lorem\",\n      \"level\": \"incididunt Duis sit amet Excepteur\",\n      \"uid\": 37866947,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"sed pariatur nulla\",\n      \"name\": \"ipsum culpa ex cons\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aliquip proident\",\n   \"description\": \"Ut pariatur\",\n   \"name\": \"eiusmod amet dolor\",\n   \"slug\": \"aliquip sed ad\",\n   \"meta\": [\n    {\n     \"_id\": \"sit esse culpa\",\n     \"name\": \"commo\",\n     \"value\": \"voluptate nisi\"\n    },\n    {\n     \"_id\": \"voluptate\",\n     \"name\": \"dolore et magna\",\n     \"value\": \"proident\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"exercitation ullamco irure est\",\n    \"level\": \"id aliqua in est\",\n    \"uid\": -62048566,\n    \"opted\": false,\n    \"permissions\": [\n     \"in enim consectetur elit\",\n     \"do pariatur\"\n    ],\n    \"token\": \"sint sed laborum do\",\n    \"name\": \"laboris ea dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"amet do exercitation\",\n      \"integration\": \"exercitation fugiat cillum\",\n      \"level\": \"elit ea Lorem labore in\",\n      \"uid\": -62267135,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"officia voluptate ad aute dolor\",\n      \"code\": \"nostrud consequat \",\n      \"name\": \"esse Duis proident sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore dolore aliquip minim\",\n      \"integration\": \"sint dolore veniam elit\",\n      \"level\": \"ea dolore inci\",\n      \"uid\": 34512747,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et incididunt fugiat Excepteur ut\",\n      \"code\": \"nostrud Duis esse laboris\",\n      \"name\": \"culpa nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"minim ipsum velit\",\n      \"integration\": \"ullamco enim\",\n      \"level\": \"Lorem nisi voluptate consectetur officia\",\n      \"uid\": 18289330,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aute ex cillum\",\n      \"code\": \"nulla aliqua dolor quis\",\n      \"name\": \"sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident\",\n      \"integration\": \"magna non\",\n      \"level\": \"do Duis in\",\n      \"uid\": -7241411,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip occaecat adipisicing\",\n      \"code\": \"Ut nulla nostrud quis\",\n      \"name\": \"aliqua dolore in et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Duis elit veniam velit\",\n    \"integration\": \"id irure in\",\n    \"level\": \"nostrud cillum occaecat elit\",\n    \"uid\": -53568292,\n    \"opted\": true,\n    \"permissions\": [\n     \"consequat id\",\n     \"adipisicin\"\n    ],\n    \"token\": \"ex sint\",\n    \"name\": \"est adipisicing pariatur aliquip molli\",\n    \"stores\": [\n     {\n      \"_id\": \"consectetur\",\n      \"integration\": \"in aliquip ut exercitation\",\n      \"level\": \"magna et\",\n      \"uid\": -97914316,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum nisi\",\n      \"code\": \"ut irure\",\n      \"name\": \"dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ea Excepteur esse\",\n      \"integration\": \"mollit amet\",\n      \"level\": \"nisi adipisicing commodo\",\n      \"uid\": 70530294,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id do Excepteur\",\n      \"code\": \"consequat fugiat\",\n      \"name\": \"veniam ipsum cillum in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sunt fugiat laboris occaecat sint\",\n      \"integration\": \"ad nulla\",\n      \"level\": \"in nostrud Lorem commodo\",\n      \"uid\": -16716610,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore Lorem occaecat\",\n      \"code\": \"dolore reprehe\",\n      \"name\": \"mollit non labore aliquip Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip\",\n      \"integration\": \"qui dolore\",\n      \"level\": \"id officia ut consectetur dolore\",\n      \"uid\": -56895564,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo in\",\n      \"code\": \"magna\",\n      \"name\": \"et amet incididunt sunt commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ipsum et laboris\",\n \"page\": {\n  \"type\": \"nisi Duis minim adipisicing\",\n  \"size\": -373067,\n  \"current\": 29832190,\n  \"has_next\": false,\n  \"item_total\": -60844348,\n  \"next_id\": \"aute voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "59cfe99a-9f29-4a10-9c57-7250ce3cebc3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-02-05T21:21:18.531Z\",\n \"status\": 41457589,\n \"error\": \"non pariatur Ut\",\n \"exception\": \"sint\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -69694722,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"non\",\n   \"description\": \"rep\",\n   \"name\": \"exercitation\",\n   \"slug\": \"sed consequat adipisicing Ut\",\n   \"meta\": [\n    {\n     \"_id\": \"officia dolor deserunt\",\n     \"name\": \"ad sit nulla eiusmod\",\n     \"value\": \"commodo\"\n    },\n    {\n     \"_id\": \"in do\",\n     \"name\": \"et Duis do\",\n     \"value\": \"labore pariatur adipisicing eiusmod minim\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Lorem ex\",\n    \"integration\": \"officia esse reprehenderit velit in\",\n    \"level\": \"quis exercitation\",\n    \"uid\": 95394535,\n    \"opted\": false,\n    \"permissions\": [\n     \"Duis in consectetur cillum non\",\n     \"quis cu\"\n    ],\n    \"token\": \"esse consequat\",\n    \"name\": \"Ut nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"labore nostrud\",\n      \"integration\": \"Excepteur ipsum\",\n      \"level\": \"nostrud dolor cupidatat ex\",\n      \"uid\": 22386292,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed consectetur reprehenderit\",\n      \"code\": \"laboris anim\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla in laboris velit\",\n      \"integration\": \"occaecat laboris\",\n      \"level\": \"pariatur sed do\",\n      \"uid\": -27996221,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation laboris\",\n      \"code\": \"mollit Lorem consequat\",\n      \"name\": \"id pariatur irure sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim ex proident aliquip\",\n      \"integration\": \"proident ut consequat exercitation\",\n      \"level\": \"veniam nulla\",\n      \"uid\": -24483032,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et Lorem nisi\",\n      \"code\": \"anim ut aliqua id\",\n      \"name\": \"aliqua ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat occaecat sunt\",\n      \"integration\": \"Lorem ex voluptate\",\n      \"level\": \"occaecat quis\",\n      \"uid\": -50400424,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum irure sed\",\n      \"code\": \"consequat\",\n      \"name\": \"eu exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"consequat anim\",\n    \"integration\": \"enim ut reprehenderit\",\n    \"level\": \"exercitation consectetur\",\n    \"uid\": 43364179,\n    \"opted\": false,\n    \"permissions\": [\n     \"ad Excepteur exercitation\",\n     \"quis\"\n    ],\n    \"token\": \"eiusmod in\",\n    \"name\": \"non\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate sit consequat\",\n      \"integration\": \"sit reprehenderi\",\n      \"level\": \"commodo magna\",\n      \"uid\": 10597621,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et mollit incididunt Ut dolore\",\n      \"code\": \"proident adipisicing cillum deserunt nisi\",\n      \"name\": \"amet eu quis culpa irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex\",\n      \"integration\": \"cupidatat velit\",\n      \"level\": \"labore proident velit Ut\",\n      \"uid\": -80307537,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"enim\",\n      \"name\": \"sunt culpa et dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Ut dolore veniam consequat dolore\",\n      \"integration\": \"irure eu veniam\",\n      \"level\": \"est et officia\",\n      \"uid\": -17093479,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum dolore sint voluptate\",\n      \"code\": \"sed est exercitation pariatur\",\n      \"name\": \"occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore id\",\n      \"integration\": \"quis Lorem\",\n      \"level\": \"incididunt Duis sit amet Excepteur\",\n      \"uid\": 37866947,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"sed pariatur nulla\",\n      \"name\": \"ipsum culpa ex cons\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aliquip proident\",\n   \"description\": \"Ut pariatur\",\n   \"name\": \"eiusmod amet dolor\",\n   \"slug\": \"aliquip sed ad\",\n   \"meta\": [\n    {\n     \"_id\": \"sit esse culpa\",\n     \"name\": \"commo\",\n     \"value\": \"voluptate nisi\"\n    },\n    {\n     \"_id\": \"voluptate\",\n     \"name\": \"dolore et magna\",\n     \"value\": \"proident\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"exercitation ullamco irure est\",\n    \"level\": \"id aliqua in est\",\n    \"uid\": -62048566,\n    \"opted\": false,\n    \"permissions\": [\n     \"in enim consectetur elit\",\n     \"do pariatur\"\n    ],\n    \"token\": \"sint sed laborum do\",\n    \"name\": \"laboris ea dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"amet do exercitation\",\n      \"integration\": \"exercitation fugiat cillum\",\n      \"level\": \"elit ea Lorem labore in\",\n      \"uid\": -62267135,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"officia voluptate ad aute dolor\",\n      \"code\": \"nostrud consequat \",\n      \"name\": \"esse Duis proident sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore dolore aliquip minim\",\n      \"integration\": \"sint dolore veniam elit\",\n      \"level\": \"ea dolore inci\",\n      \"uid\": 34512747,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et incididunt fugiat Excepteur ut\",\n      \"code\": \"nostrud Duis esse laboris\",\n      \"name\": \"culpa nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"minim ipsum velit\",\n      \"integration\": \"ullamco enim\",\n      \"level\": \"Lorem nisi voluptate consectetur officia\",\n      \"uid\": 18289330,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aute ex cillum\",\n      \"code\": \"nulla aliqua dolor quis\",\n      \"name\": \"sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident\",\n      \"integration\": \"magna non\",\n      \"level\": \"do Duis in\",\n      \"uid\": -7241411,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip occaecat adipisicing\",\n      \"code\": \"Ut nulla nostrud quis\",\n      \"name\": \"aliqua dolore in et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Duis elit veniam velit\",\n    \"integration\": \"id irure in\",\n    \"level\": \"nostrud cillum occaecat elit\",\n    \"uid\": -53568292,\n    \"opted\": true,\n    \"permissions\": [\n     \"consequat id\",\n     \"adipisicin\"\n    ],\n    \"token\": \"ex sint\",\n    \"name\": \"est adipisicing pariatur aliquip molli\",\n    \"stores\": [\n     {\n      \"_id\": \"consectetur\",\n      \"integration\": \"in aliquip ut exercitation\",\n      \"level\": \"magna et\",\n      \"uid\": -97914316,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum nisi\",\n      \"code\": \"ut irure\",\n      \"name\": \"dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ea Excepteur esse\",\n      \"integration\": \"mollit amet\",\n      \"level\": \"nisi adipisicing commodo\",\n      \"uid\": 70530294,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id do Excepteur\",\n      \"code\": \"consequat fugiat\",\n      \"name\": \"veniam ipsum cillum in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sunt fugiat laboris occaecat sint\",\n      \"integration\": \"ad nulla\",\n      \"level\": \"in nostrud Lorem commodo\",\n      \"uid\": -16716610,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore Lorem occaecat\",\n      \"code\": \"dolore reprehe\",\n      \"name\": \"mollit non labore aliquip Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip\",\n      \"integration\": \"qui dolore\",\n      \"level\": \"id officia ut consectetur dolore\",\n      \"uid\": -56895564,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo in\",\n      \"code\": \"magna\",\n      \"name\": \"et amet incididunt sunt commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ipsum et laboris\",\n \"page\": {\n  \"type\": \"nisi Duis minim adipisicing\",\n  \"size\": -373067,\n  \"current\": 29832190,\n  \"has_next\": false,\n  \"item_total\": -60844348,\n  \"next_id\": \"aute voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b96d8d2b-6f61-4b77-975f-631fa2004e49",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2020-02-05T21:21:18.531Z\",\n \"status\": 41457589,\n \"error\": \"non pariatur Ut\",\n \"exception\": \"sint\",\n \"message\": \"\",\n \"total_time_taken_in_millis\": -69694722,\n \"http_status\": \"205 RESET_CONTENT\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"non\",\n   \"description\": \"rep\",\n   \"name\": \"exercitation\",\n   \"slug\": \"sed consequat adipisicing Ut\",\n   \"meta\": [\n    {\n     \"_id\": \"officia dolor deserunt\",\n     \"name\": \"ad sit nulla eiusmod\",\n     \"value\": \"commodo\"\n    },\n    {\n     \"_id\": \"in do\",\n     \"name\": \"et Duis do\",\n     \"value\": \"labore pariatur adipisicing eiusmod minim\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Lorem ex\",\n    \"integration\": \"officia esse reprehenderit velit in\",\n    \"level\": \"quis exercitation\",\n    \"uid\": 95394535,\n    \"opted\": false,\n    \"permissions\": [\n     \"Duis in consectetur cillum non\",\n     \"quis cu\"\n    ],\n    \"token\": \"esse consequat\",\n    \"name\": \"Ut nisi\",\n    \"stores\": [\n     {\n      \"_id\": \"labore nostrud\",\n      \"integration\": \"Excepteur ipsum\",\n      \"level\": \"nostrud dolor cupidatat ex\",\n      \"uid\": 22386292,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sed consectetur reprehenderit\",\n      \"code\": \"laboris anim\",\n      \"name\": \"\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"nulla in laboris velit\",\n      \"integration\": \"occaecat laboris\",\n      \"level\": \"pariatur sed do\",\n      \"uid\": -27996221,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation laboris\",\n      \"code\": \"mollit Lorem consequat\",\n      \"name\": \"id pariatur irure sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"enim ex proident aliquip\",\n      \"integration\": \"proident ut consequat exercitation\",\n      \"level\": \"veniam nulla\",\n      \"uid\": -24483032,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et Lorem nisi\",\n      \"code\": \"anim ut aliqua id\",\n      \"name\": \"aliqua ad\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"fugiat occaecat sunt\",\n      \"integration\": \"Lorem ex voluptate\",\n      \"level\": \"occaecat quis\",\n      \"uid\": -50400424,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum irure sed\",\n      \"code\": \"consequat\",\n      \"name\": \"eu exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"consequat anim\",\n    \"integration\": \"enim ut reprehenderit\",\n    \"level\": \"exercitation consectetur\",\n    \"uid\": 43364179,\n    \"opted\": false,\n    \"permissions\": [\n     \"ad Excepteur exercitation\",\n     \"quis\"\n    ],\n    \"token\": \"eiusmod in\",\n    \"name\": \"non\",\n    \"stores\": [\n     {\n      \"_id\": \"voluptate sit consequat\",\n      \"integration\": \"sit reprehenderi\",\n      \"level\": \"commodo magna\",\n      \"uid\": 10597621,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et mollit incididunt Ut dolore\",\n      \"code\": \"proident adipisicing cillum deserunt nisi\",\n      \"name\": \"amet eu quis culpa irure\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ex\",\n      \"integration\": \"cupidatat velit\",\n      \"level\": \"labore proident velit Ut\",\n      \"uid\": -80307537,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"elit\",\n      \"code\": \"enim\",\n      \"name\": \"sunt culpa et dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"Ut dolore veniam consequat dolore\",\n      \"integration\": \"irure eu veniam\",\n      \"level\": \"est et officia\",\n      \"uid\": -17093479,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"laborum dolore sint voluptate\",\n      \"code\": \"sed est exercitation pariatur\",\n      \"name\": \"occaecat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore id\",\n      \"integration\": \"quis Lorem\",\n      \"level\": \"incididunt Duis sit amet Excepteur\",\n      \"uid\": 37866947,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ex\",\n      \"code\": \"sed pariatur nulla\",\n      \"name\": \"ipsum culpa ex cons\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"aliquip proident\",\n   \"description\": \"Ut pariatur\",\n   \"name\": \"eiusmod amet dolor\",\n   \"slug\": \"aliquip sed ad\",\n   \"meta\": [\n    {\n     \"_id\": \"sit esse culpa\",\n     \"name\": \"commo\",\n     \"value\": \"voluptate nisi\"\n    },\n    {\n     \"_id\": \"voluptate\",\n     \"name\": \"dolore et magna\",\n     \"value\": \"proident\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"ullamco\",\n    \"integration\": \"exercitation ullamco irure est\",\n    \"level\": \"id aliqua in est\",\n    \"uid\": -62048566,\n    \"opted\": false,\n    \"permissions\": [\n     \"in enim consectetur elit\",\n     \"do pariatur\"\n    ],\n    \"token\": \"sint sed laborum do\",\n    \"name\": \"laboris ea dolore\",\n    \"stores\": [\n     {\n      \"_id\": \"amet do exercitation\",\n      \"integration\": \"exercitation fugiat cillum\",\n      \"level\": \"elit ea Lorem labore in\",\n      \"uid\": -62267135,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"officia voluptate ad aute dolor\",\n      \"code\": \"nostrud consequat \",\n      \"name\": \"esse Duis proident sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolore dolore aliquip minim\",\n      \"integration\": \"sint dolore veniam elit\",\n      \"level\": \"ea dolore inci\",\n      \"uid\": 34512747,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"et incididunt fugiat Excepteur ut\",\n      \"code\": \"nostrud Duis esse laboris\",\n      \"name\": \"culpa nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"minim ipsum velit\",\n      \"integration\": \"ullamco enim\",\n      \"level\": \"Lorem nisi voluptate consectetur officia\",\n      \"uid\": 18289330,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aute ex cillum\",\n      \"code\": \"nulla aliqua dolor quis\",\n      \"name\": \"sit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"proident\",\n      \"integration\": \"magna non\",\n      \"level\": \"do Duis in\",\n      \"uid\": -7241411,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip occaecat adipisicing\",\n      \"code\": \"Ut nulla nostrud quis\",\n      \"name\": \"aliqua dolore in et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"Duis elit veniam velit\",\n    \"integration\": \"id irure in\",\n    \"level\": \"nostrud cillum occaecat elit\",\n    \"uid\": -53568292,\n    \"opted\": true,\n    \"permissions\": [\n     \"consequat id\",\n     \"adipisicin\"\n    ],\n    \"token\": \"ex sint\",\n    \"name\": \"est adipisicing pariatur aliquip molli\",\n    \"stores\": [\n     {\n      \"_id\": \"consectetur\",\n      \"integration\": \"in aliquip ut exercitation\",\n      \"level\": \"magna et\",\n      \"uid\": -97914316,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"cillum nisi\",\n      \"code\": \"ut irure\",\n      \"name\": \"dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ea Excepteur esse\",\n      \"integration\": \"mollit amet\",\n      \"level\": \"nisi adipisicing commodo\",\n      \"uid\": 70530294,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id do Excepteur\",\n      \"code\": \"consequat fugiat\",\n      \"name\": \"veniam ipsum cillum in\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"sunt fugiat laboris occaecat sint\",\n      \"integration\": \"ad nulla\",\n      \"level\": \"in nostrud Lorem commodo\",\n      \"uid\": -16716610,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"dolore Lorem occaecat\",\n      \"code\": \"dolore reprehe\",\n      \"name\": \"mollit non labore aliquip Excepteur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip\",\n      \"integration\": \"qui dolore\",\n      \"level\": \"id officia ut consectetur dolore\",\n      \"uid\": -56895564,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"commodo in\",\n      \"code\": \"magna\",\n      \"name\": \"et amet incididunt sunt commodo\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"ipsum et laboris\",\n \"page\": {\n  \"type\": \"nisi Duis minim adipisicing\",\n  \"size\": -373067,\n  \"current\": 29832190,\n  \"has_next\": false,\n  \"item_total\": -60844348,\n  \"next_id\": \"aute voluptate\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e08f9637-7576-48c1-9457-aebe6094a242",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d8e5e9f1-8d09-42ae-bcda-980eb6ce8f0f",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-04-04T03:20:50.445Z\",\n \"status\": -75752439,\n \"error\": \"sunt mollit Lorem\",\n \"exception\": \"elit aute amet\",\n \"message\": \"nulla deserunt\",\n \"total_time_taken_in_millis\": -8756212,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"session_id\": \"est voluptate\",\n  \"error_message\": \"labore culpa cupidatat incididunt \"\n },\n \"payload\": {\n  \"session_id\": \"ex\",\n  \"error_message\": \"quis est ad amet\"\n },\n \"trace_id\": \"ut in aliqua Lorem\",\n \"page\": {\n  \"type\": \"ex sint aliqua\",\n  \"size\": 63100811,\n  \"current\": 75610639,\n  \"has_next\": false,\n  \"item_total\": 63002126,\n  \"next_id\": \"dolor a\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ee90ce86-d80b-4a9a-a2a3-0d25ea4750a8",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-04-04T03:20:50.445Z\",\n \"status\": -75752439,\n \"error\": \"sunt mollit Lorem\",\n \"exception\": \"elit aute amet\",\n \"message\": \"nulla deserunt\",\n \"total_time_taken_in_millis\": -8756212,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"session_id\": \"est voluptate\",\n  \"error_message\": \"labore culpa cupidatat incididunt \"\n },\n \"payload\": {\n  \"session_id\": \"ex\",\n  \"error_message\": \"quis est ad amet\"\n },\n \"trace_id\": \"ut in aliqua Lorem\",\n \"page\": {\n  \"type\": \"ex sint aliqua\",\n  \"size\": 63100811,\n  \"current\": 75610639,\n  \"has_next\": false,\n  \"item_total\": 63002126,\n  \"next_id\": \"dolor a\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "198ce51a-ad7c-4f6a-859b-af946447edfe",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1983-04-04T03:20:50.445Z\",\n \"status\": -75752439,\n \"error\": \"sunt mollit Lorem\",\n \"exception\": \"elit aute amet\",\n \"message\": \"nulla deserunt\",\n \"total_time_taken_in_millis\": -8756212,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {\n  \"session_id\": \"est voluptate\",\n  \"error_message\": \"labore culpa cupidatat incididunt \"\n },\n \"payload\": {\n  \"session_id\": \"ex\",\n  \"error_message\": \"quis est ad amet\"\n },\n \"trace_id\": \"ut in aliqua Lorem\",\n \"page\": {\n  \"type\": \"ex sint aliqua\",\n  \"size\": 63100811,\n  \"current\": 75610639,\n  \"has_next\": false,\n  \"item_total\": 63002126,\n  \"next_id\": \"dolor a\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "8d7d7413-da63-4bfb-9765-e3e49af6c058",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "dc3e65c4-45e4-448a-abb0-91b116bba503",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-08-12T16:34:09.640Z\",\n \"status\": -2505077,\n \"error\": \"proident reprehenderit ullamco\",\n \"exception\": \"Duis laboris\",\n \"message\": \"laboris enim velit fugiat\",\n \"total_time_taken_in_millis\": -60808291,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": {\n  \"company_id\": 66754858,\n  \"integration_data\": {},\n  \"company_name\": \"a\",\n  \"task_details\": {\n   \"type\": 63263676,\n   \"group_list\": [\n    {\n     \"text\": \"incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"consectetur labore magna tempor occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 37861603.762663335,\n   \"safe_stock\": 13933027,\n   \"period_threshold\": -53423296,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"officia\",\n  \"alias\": \"quis dolor\"\n },\n \"payload\": {\n  \"company_id\": -74494612,\n  \"integration_data\": {},\n  \"company_name\": \"nostrud labore\",\n  \"task_details\": {\n   \"type\": 43974486,\n   \"group_list\": [\n    {\n     \"text\": \"ullamco deserunt in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -48198457.46714058,\n   \"safe_stock\": -44322895,\n   \"period_threshold\": -33682610,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in sint laboris mollit culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"officia ipsum\",\n  \"alias\": \"pariatur dolore magna dolor\"\n },\n \"trace_id\": \"consequat ullamco commodo irure proident\",\n \"page\": {\n  \"type\": \"anim dolore in cupidatat laborum\",\n  \"size\": 5806649,\n  \"current\": 76382201,\n  \"has_next\": false,\n  \"item_total\": 62234436,\n  \"next_id\": \"cillum magna ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9d9b99ca-822c-4d61-a5cb-085e2fb1b0c1",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-08-12T16:34:09.640Z\",\n \"status\": -2505077,\n \"error\": \"proident reprehenderit ullamco\",\n \"exception\": \"Duis laboris\",\n \"message\": \"laboris enim velit fugiat\",\n \"total_time_taken_in_millis\": -60808291,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": {\n  \"company_id\": 66754858,\n  \"integration_data\": {},\n  \"company_name\": \"a\",\n  \"task_details\": {\n   \"type\": 63263676,\n   \"group_list\": [\n    {\n     \"text\": \"incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"consectetur labore magna tempor occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 37861603.762663335,\n   \"safe_stock\": 13933027,\n   \"period_threshold\": -53423296,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"officia\",\n  \"alias\": \"quis dolor\"\n },\n \"payload\": {\n  \"company_id\": -74494612,\n  \"integration_data\": {},\n  \"company_name\": \"nostrud labore\",\n  \"task_details\": {\n   \"type\": 43974486,\n   \"group_list\": [\n    {\n     \"text\": \"ullamco deserunt in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -48198457.46714058,\n   \"safe_stock\": -44322895,\n   \"period_threshold\": -33682610,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in sint laboris mollit culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"officia ipsum\",\n  \"alias\": \"pariatur dolore magna dolor\"\n },\n \"trace_id\": \"consequat ullamco commodo irure proident\",\n \"page\": {\n  \"type\": \"anim dolore in cupidatat laborum\",\n  \"size\": 5806649,\n  \"current\": 76382201,\n  \"has_next\": false,\n  \"item_total\": 62234436,\n  \"next_id\": \"cillum magna ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8705d24a-2d22-48c5-8246-260ec1d80497",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2017-08-12T16:34:09.640Z\",\n \"status\": -2505077,\n \"error\": \"proident reprehenderit ullamco\",\n \"exception\": \"Duis laboris\",\n \"message\": \"laboris enim velit fugiat\",\n \"total_time_taken_in_millis\": -60808291,\n \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n \"items\": {\n  \"company_id\": 66754858,\n  \"integration_data\": {},\n  \"company_name\": \"a\",\n  \"task_details\": {\n   \"type\": 63263676,\n   \"group_list\": [\n    {\n     \"text\": \"incididunt\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"consectetur labore magna tempor occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 37861603.762663335,\n   \"safe_stock\": 13933027,\n   \"period_threshold\": -53423296,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"culpa\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"officia\",\n  \"alias\": \"quis dolor\"\n },\n \"payload\": {\n  \"company_id\": -74494612,\n  \"integration_data\": {},\n  \"company_name\": \"nostrud labore\",\n  \"task_details\": {\n   \"type\": 43974486,\n   \"group_list\": [\n    {\n     \"text\": \"ullamco deserunt in\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"amet culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -48198457.46714058,\n   \"safe_stock\": -44322895,\n   \"period_threshold\": -33682610,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"officia\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in sint laboris mollit culpa\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"officia ipsum\",\n  \"alias\": \"pariatur dolore magna dolor\"\n },\n \"trace_id\": \"consequat ullamco commodo irure proident\",\n \"page\": {\n  \"type\": \"anim dolore in cupidatat laborum\",\n  \"size\": 5806649,\n  \"current\": 76382201,\n  \"has_next\": false,\n  \"item_total\": 62234436,\n  \"next_id\": \"cillum magna ullamco\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "4c8896aa-f36a-41b0-bd22-16a4e83b8f4a",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d5465688-57b6-487d-bbcb-7629f72834ff",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1984-01-11T14:54:19.132Z\",\n \"status\": 83865817,\n \"error\": \"dolore ut ut\",\n \"exception\": \"esse culpa\",\n \"message\": \"cillum\",\n \"total_time_taken_in_millis\": 64615091,\n \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n \"items\": [\n  {\n   \"company_id\": -97757004,\n   \"integration_data\": {},\n   \"company_name\": \"Lorem nulla volupt\",\n   \"task_details\": {\n    \"type\": 1129817,\n    \"group_list\": [\n     {\n      \"text\": \"id deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat nisi aute irure\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -84459782.36283845,\n    \"safe_stock\": -97510904,\n    \"period_threshold\": -84612637,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur et minim reprehenderit\",\n   \"alias\": \"vel\"\n  },\n  {\n   \"company_id\": -15025703,\n   \"integration_data\": {},\n   \"company_name\": \"in\",\n   \"task_details\": {\n    \"type\": -10964774,\n    \"group_list\": [\n     {\n      \"text\": \"l\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea amet\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 27551784.06060876,\n    \"safe_stock\": 505390,\n    \"period_threshold\": 35087934,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris cupidatat eiusmod elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"eu quis proident id\",\n   \"alias\": \"sunt magna\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 32692725,\n   \"integration_data\": {},\n   \"company_name\": \"non magna enim\",\n   \"task_details\": {\n    \"type\": 15978491,\n    \"group_list\": [\n     {\n      \"text\": \"tempor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"et nisi culpa tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 67571747.57658154,\n    \"safe_stock\": 177819,\n    \"period_threshold\": -16015707,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"fugiat in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eiusmod non incididunt mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo deserunt amet\",\n   \"alias\": \"cillum\"\n  },\n  {\n   \"company_id\": -30010824,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt irure nostrud\",\n   \"task_details\": {\n    \"type\": -43029513,\n    \"group_list\": [\n     {\n      \"text\": \"quis ni\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliquip laborum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -4227324.016523674,\n    \"safe_stock\": 35464822,\n    \"period_threshold\": 39542787,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ullamco cillum exercitation sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"velit non in ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"in in do ut\",\n   \"alias\": \"irure eiusmod\"\n  }\n ],\n \"trace_id\": \"p\",\n \"page\": {\n  \"type\": \"qui dolor dolore aliqua\",\n  \"size\": 39049972,\n  \"current\": -32848737,\n  \"has_next\": true,\n  \"item_total\": 62633257,\n  \"next_id\": \"deserunt nulla exercitation enim officia\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c5454bd6-05e4-4cb1-b813-d1d163d01b8e",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-01-03T14:03:09.108Z\",\n \"status\": -62840320,\n \"error\": \"sint do Lorem commodo\",\n \"exception\": \"qui reprehenderit Excepteur cupidatat ea\",\n \"message\": \"quis Lorem pariatur\",\n \"total_time_taken_in_millis\": -79229231,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": [\n  {\n   \"company_id\": 26423474,\n   \"integration_data\": {},\n   \"company_name\": \"quis mollit laboris ex\",\n   \"task_details\": {\n    \"type\": -41735763,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id nulla sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64520238.238123275,\n    \"safe_stock\": -45722143,\n    \"period_threshold\": 83777468,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea in pariatur cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing commodo eu ut nisi\",\n   \"alias\": \"exercitation do occaecat\"\n  },\n  {\n   \"company_id\": 15965246,\n   \"integration_data\": {},\n   \"company_name\": \"do occaecat pariatur ut\",\n   \"task_details\": {\n    \"type\": 92773610,\n    \"group_list\": [\n     {\n      \"text\": \"elit aute nostr\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor minim officia consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29356586.771054476,\n    \"safe_stock\": -16592039,\n    \"period_threshold\": 59643587,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id laborum ut consectetu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad eiusmod adipisicing velit ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est eu\",\n   \"alias\": \"dolor minim qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -78904834,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua officia\",\n   \"task_details\": {\n    \"type\": 78378748,\n    \"group_list\": [\n     {\n      \"text\": \"ea aute dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 14373.038191631436,\n    \"safe_stock\": 67323651,\n    \"period_threshold\": 36619677,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo Excepteur m\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat non consequat cillum eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa ut\",\n   \"alias\": \"ex incididunt magna\"\n  },\n  {\n   \"company_id\": 88277090,\n   \"integration_data\": {},\n   \"company_name\": \"consequat velit incididunt\",\n   \"task_details\": {\n    \"type\": 40708533,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing ad in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute aliquip ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34689314.059267625,\n    \"safe_stock\": -74035097,\n    \"period_threshold\": 36177075,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit cillum ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor aliqua magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet adipisicing\",\n   \"alias\": \"in ipsum culpa velit\"\n  }\n ],\n \"trace_id\": \"minim esse in\",\n \"page\": {\n  \"type\": \"minim in\",\n  \"size\": 49313822,\n  \"current\": -82452694,\n  \"has_next\": false,\n  \"item_total\": -58775616,\n  \"next_id\": \"proident nisi minim cillum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "160fada6-4fe4-4298-bbf2-5537314a928c",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1986-01-03T14:03:09.108Z\",\n \"status\": -62840320,\n \"error\": \"sint do Lorem commodo\",\n \"exception\": \"qui reprehenderit Excepteur cupidatat ea\",\n \"message\": \"quis Lorem pariatur\",\n \"total_time_taken_in_millis\": -79229231,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": [\n  {\n   \"company_id\": 26423474,\n   \"integration_data\": {},\n   \"company_name\": \"quis mollit laboris ex\",\n   \"task_details\": {\n    \"type\": -41735763,\n    \"group_list\": [\n     {\n      \"text\": \"nostrud eu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id nulla sed\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -64520238.238123275,\n    \"safe_stock\": -45722143,\n    \"period_threshold\": 83777468,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sed incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea in pariatur cillum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"adipisicing commodo eu ut nisi\",\n   \"alias\": \"exercitation do occaecat\"\n  },\n  {\n   \"company_id\": 15965246,\n   \"integration_data\": {},\n   \"company_name\": \"do occaecat pariatur ut\",\n   \"task_details\": {\n    \"type\": 92773610,\n    \"group_list\": [\n     {\n      \"text\": \"elit aute nostr\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor minim officia consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 29356586.771054476,\n    \"safe_stock\": -16592039,\n    \"period_threshold\": 59643587,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"id laborum ut consectetu\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ad eiusmod adipisicing velit ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"est eu\",\n   \"alias\": \"dolor minim qui\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -78904834,\n   \"integration_data\": {},\n   \"company_name\": \"aliqua officia\",\n   \"task_details\": {\n    \"type\": 78378748,\n    \"group_list\": [\n     {\n      \"text\": \"ea aute dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 14373.038191631436,\n    \"safe_stock\": 67323651,\n    \"period_threshold\": 36619677,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"commodo Excepteur m\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat non consequat cillum eiusmod\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa ut\",\n   \"alias\": \"ex incididunt magna\"\n  },\n  {\n   \"company_id\": 88277090,\n   \"integration_data\": {},\n   \"company_name\": \"consequat velit incididunt\",\n   \"task_details\": {\n    \"type\": 40708533,\n    \"group_list\": [\n     {\n      \"text\": \"adipisicing ad in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute aliquip ipsum\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -34689314.059267625,\n    \"safe_stock\": -74035097,\n    \"period_threshold\": 36177075,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"velit cillum ad\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor aliqua magna\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet adipisicing\",\n   \"alias\": \"in ipsum culpa velit\"\n  }\n ],\n \"trace_id\": \"minim esse in\",\n \"page\": {\n  \"type\": \"minim in\",\n  \"size\": 49313822,\n  \"current\": -82452694,\n  \"has_next\": false,\n  \"item_total\": -58775616,\n  \"next_id\": \"proident nisi minim cillum\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2d499083-48c1-47d6-9579-ca71ac52fcb3",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ba88eba9-6afe-43b3-a35e-38293714de55",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-07-04T12:21:53.214Z\",\n \"status\": -11852300,\n \"error\": \"cillum\",\n \"exception\": \"consectetur sunt adipisicing velit culpa\",\n \"message\": \"anim labo\",\n \"total_time_taken_in_millis\": -20774658,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in exercitation veniam culpa\",\n \"page\": {\n  \"type\": \"voluptate cillum id sit\",\n  \"size\": -49820942,\n  \"current\": 27595840,\n  \"has_next\": false,\n  \"item_total\": -50265722,\n  \"next_id\": \"nulla tempor cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "48a338c0-649f-4fe7-a7fd-43d9c23dd948",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-07-04T12:21:53.214Z\",\n \"status\": -11852300,\n \"error\": \"cillum\",\n \"exception\": \"consectetur sunt adipisicing velit culpa\",\n \"message\": \"anim labo\",\n \"total_time_taken_in_millis\": -20774658,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in exercitation veniam culpa\",\n \"page\": {\n  \"type\": \"voluptate cillum id sit\",\n  \"size\": -49820942,\n  \"current\": 27595840,\n  \"has_next\": false,\n  \"item_total\": -50265722,\n  \"next_id\": \"nulla tempor cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "37b6dfd7-0333-462c-9e43-814e15a7a59d",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1988-07-04T12:21:53.214Z\",\n \"status\": -11852300,\n \"error\": \"cillum\",\n \"exception\": \"consectetur sunt adipisicing velit culpa\",\n \"message\": \"anim labo\",\n \"total_time_taken_in_millis\": -20774658,\n \"http_status\": \"429 TOO_MANY_REQUESTS\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"in exercitation veniam culpa\",\n \"page\": {\n  \"type\": \"voluptate cillum id sit\",\n  \"size\": -49820942,\n  \"current\": 27595840,\n  \"has_next\": false,\n  \"item_total\": -50265722,\n  \"next_id\": \"nulla tempor cupidatat\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "91b25827-5222-4149-9c95-edfa9bc8223e",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "640aea97-ed37-4fe9-8f72-a268d6d443b2",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-04-20T02:20:05.440Z\",\n \"status\": 84748385,\n \"error\": \"veniam labore e\",\n \"exception\": \"sit aliquip\",\n \"message\": \"nostrud qui\",\n \"total_time_taken_in_millis\": -99804005,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis anim ullamco\",\n \"page\": {\n  \"type\": \"do sed fugiat officia\",\n  \"size\": -24927735,\n  \"current\": -33856465,\n  \"has_next\": false,\n  \"item_total\": -60786610,\n  \"next_id\": \"nostrud voluptate Duis eu in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "185b9d64-e25a-42c0-9390-08a7914ef788",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-04-20T02:20:05.440Z\",\n \"status\": 84748385,\n \"error\": \"veniam labore e\",\n \"exception\": \"sit aliquip\",\n \"message\": \"nostrud qui\",\n \"total_time_taken_in_millis\": -99804005,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis anim ullamco\",\n \"page\": {\n  \"type\": \"do sed fugiat officia\",\n  \"size\": -24927735,\n  \"current\": -33856465,\n  \"has_next\": false,\n  \"item_total\": -60786610,\n  \"next_id\": \"nostrud voluptate Duis eu in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9e7c8324-dd73-487d-a077-3412a5b44d08",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-04-20T02:20:05.440Z\",\n \"status\": 84748385,\n \"error\": \"veniam labore e\",\n \"exception\": \"sit aliquip\",\n \"message\": \"nostrud qui\",\n \"total_time_taken_in_millis\": -99804005,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis anim ullamco\",\n \"page\": {\n  \"type\": \"do sed fugiat officia\",\n  \"size\": -24927735,\n  \"current\": -33856465,\n  \"has_next\": false,\n  \"item_total\": -60786610,\n  \"next_id\": \"nostrud voluptate Duis eu in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1524dcfc-2276-4c34-a17f-17e0d90dd568",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-04-20T02:20:05.440Z\",\n \"status\": 84748385,\n \"error\": \"veniam labore e\",\n \"exception\": \"sit aliquip\",\n \"message\": \"nostrud qui\",\n \"total_time_taken_in_millis\": -99804005,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis anim ullamco\",\n \"page\": {\n  \"type\": \"do sed fugiat officia\",\n  \"size\": -24927735,\n  \"current\": -33856465,\n  \"has_next\": false,\n  \"item_total\": -60786610,\n  \"next_id\": \"nostrud voluptate Duis eu in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "388a0f38-e7ff-475e-8c19-9ff4faeb0846",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1981-04-20T02:20:05.440Z\",\n \"status\": 84748385,\n \"error\": \"veniam labore e\",\n \"exception\": \"sit aliquip\",\n \"message\": \"nostrud qui\",\n \"total_time_taken_in_millis\": -99804005,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"quis anim ullamco\",\n \"page\": {\n  \"type\": \"do sed fugiat officia\",\n  \"size\": -24927735,\n  \"current\": -33856465,\n  \"has_next\": false,\n  \"item_total\": -60786610,\n  \"next_id\": \"nostrud voluptate Duis eu in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jmpx3.de"
    }
  ],
  "info": {
    "_postman_id": "c3d57335-5eb6-4b58-9626-52c61c9cf117",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
