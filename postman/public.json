{
  "item": [
    {
      "id": "4d982b50-9e25-47df-8e2b-de9d433a66ab",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "84eda648-de3e-4752-b9f2-8bedecd4f380",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2c93817f-55a7-4db4-8b22-cdde9c19e588",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"cillum Lorem m\",\n        \"dolore magna\"\n      ],\n      \"tags\": [\n        \"Duis enim in\",\n        \"labore officia proident mollit\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"Lorem veniam eiusmod adipisicing\",\n        \"voluptate enim\"\n      ],\n      \"tags\": [\n        \"fugiat incididunt ut id dolor\",\n        \"eu sit in\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"non Lorem tempor dolor minim\",\n      \"ut id aliquip\"\n    ],\n    \"tags\": [\n      \"Duis non cillum ex\",\n      \"reprehenderit\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ff4f5d9a-f93e-43f9-a3a4-b25ad1e06e58",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c69ea4c9-e2fa-475c-b634-adc116fda922",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ada8c224-96f8-44ba-8907-922fb6f59ccb",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9879ae09-fa92-4c21-a897-65387a1ca224",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9d18d84d-239f-4622-a977-7344375729ac",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ipsum",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "18c3b84a-9ef0-4f1b-ac19-928b7b0641d7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ipsum",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3fc12722-e32f-499e-87a2-1a507d2440ca",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "ipsum",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e75ac7ef-90f5-46f9-9943-52b0c7949410",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "042031ba-6459-441c-b16e-44820715c2ca",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"Lorem tem\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"aliquip\",\n      \"country_code\": \"et qui\",\n      \"latitude\": \"anim eiusmod Ut id quis\",\n      \"longitude\": \"voluptate\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"cillum quis\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"culpa adipisicing in in minim\",\n      \"country_code\": \"mollit id sed qui\",\n      \"latitude\": \"dolor\",\n      \"longitude\": \"sed commodo et Ut qui\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "8525c2e3-e21f-4714-8a5a-7b08c174a87e",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "b771aaa3-ba25-47c9-9493-ce21be8d7040",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ef97e2b4-a4d9-4a0e-aa53-16d20e169b87",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9612db22-6a56-4a1e-a051-db5f0367e3b0",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "99869df9-8f89-4f88-a459-ccec7a96260c",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "62b8be43-c2dd-4442-a334-6c4e233f2474",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "594d992b-e352-4109-a54f-942d248e4daa",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-12-17T20:00:52.087Z\",\n  \"status\": -58154637,\n  \"error\": \"laboris Excepteur et deserunt\",\n  \"exception\": \"cupidatat nisi consequat deserunt\",\n  \"message\": \"ut ipsum\",\n  \"total_time_taken_in_millis\": 84132389,\n  \"http_status\": \"410 GONE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"commodo officia id\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "38223637-36a8-4671-b859-339a61754f8a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-12-17T20:00:52.087Z\",\n  \"status\": -58154637,\n  \"error\": \"laboris Excepteur et deserunt\",\n  \"exception\": \"cupidatat nisi consequat deserunt\",\n  \"message\": \"ut ipsum\",\n  \"total_time_taken_in_millis\": 84132389,\n  \"http_status\": \"410 GONE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"commodo officia id\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ba1b553f-b2cc-43d6-a068-5d5279447f16",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-12-17T20:00:52.087Z\",\n  \"status\": -58154637,\n  \"error\": \"laboris Excepteur et deserunt\",\n  \"exception\": \"cupidatat nisi consequat deserunt\",\n  \"message\": \"ut ipsum\",\n  \"total_time_taken_in_millis\": 84132389,\n  \"http_status\": \"410 GONE\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"commodo officia id\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "af714b83-5731-4c24-a1e1-c1db00693ec9",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "276ba5fc-f7a2-43c1-aba3-e9ccdfa380b5",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-04-21T17:46:27.459Z\",\n  \"status\": 15458491,\n  \"error\": \"labore eiusmod officia dolor\",\n  \"exception\": \"consequat aliqua adipisicing Lorem\",\n  \"message\": \"proident cu\",\n  \"total_time_taken_in_millis\": -44860238,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"elit est\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fd440c92-67c8-43f2-aec8-f1589e5be019",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-04-21T17:46:27.459Z\",\n  \"status\": 15458491,\n  \"error\": \"labore eiusmod officia dolor\",\n  \"exception\": \"consequat aliqua adipisicing Lorem\",\n  \"message\": \"proident cu\",\n  \"total_time_taken_in_millis\": -44860238,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"elit est\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "759afd04-ca66-499b-a7e9-420da43dade7",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-04-21T17:46:27.459Z\",\n  \"status\": 15458491,\n  \"error\": \"labore eiusmod officia dolor\",\n  \"exception\": \"consequat aliqua adipisicing Lorem\",\n  \"message\": \"proident cu\",\n  \"total_time_taken_in_millis\": -44860238,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"elit est\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7140a9e2-aaf1-4b97-8fe2-926aceae3769",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-04-21T17:46:27.459Z\",\n  \"status\": 15458491,\n  \"error\": \"labore eiusmod officia dolor\",\n  \"exception\": \"consequat aliqua adipisicing Lorem\",\n  \"message\": \"proident cu\",\n  \"total_time_taken_in_millis\": -44860238,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"elit est\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c801c718-02c2-43f3-89c4-9fc7bd11d1a9",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1955-04-21T17:46:27.459Z\",\n  \"status\": 15458491,\n  \"error\": \"labore eiusmod officia dolor\",\n  \"exception\": \"consequat aliqua adipisicing Lorem\",\n  \"message\": \"proident cu\",\n  \"total_time_taken_in_millis\": -44860238,\n  \"http_status\": \"409 CONFLICT\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"elit est\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c0a3eee2-b1d8-403b-b78e-bb6641d0c782",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9b7d8674-c4bc-4aa0-8282-50fd4be89ace",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-08-03T17:59:56.917Z\",\n  \"status\": 31705088,\n  \"error\": \"magna eiusmod in dolor\",\n  \"exception\": \"nostrud sed\",\n  \"message\": \"et ut nisi voluptate\",\n  \"total_time_taken_in_millis\": 19662129,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"sunt velit\",\n      \"description\": \"ex ut\",\n      \"name\": \"in\",\n      \"slug\": \"quis cupidatat\",\n      \"meta\": [\n        {\n          \"_id\": \"dolore commodo\",\n          \"name\": \"do aute\",\n          \"value\": \"do\"\n        },\n        {\n          \"_id\": \"minim nisi officia\",\n          \"name\": \"oc\",\n          \"value\": \"irure pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"sint consequat\",\n        \"integration\": \"eu et in\",\n        \"level\": \"eiusmod quis consectetur cupidatat aute\",\n        \"uid\": 8719220,\n        \"opted\": false,\n        \"permissions\": [\n          \"velit Ut tempor dolor enim\",\n          \"esse\"\n        ],\n        \"token\": \"sed laborum aliquip quis\",\n        \"name\": \"dolor dolore vol\",\n        \"stores\": [\n          {\n            \"_id\": \"minim laboris culpa cupidatat\",\n            \"integration\": \"minim cupidatat culpa amet magna\",\n            \"level\": \"ut in culpa\",\n            \"uid\": 34910528,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat dolore ea et\",\n            \"code\": \"nulla\",\n            \"name\": \"non id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"U\",\n            \"integration\": \"labore laboris dolore irure nostrud\",\n            \"level\": \"sunt sit\",\n            \"uid\": -76047963,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut ex tempor\",\n            \"code\": \"ut officia\",\n            \"name\": \"in nisi\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"aliquip Excepteur\",\n        \"integration\": \"nostrud sed\",\n        \"level\": \"sed\",\n        \"uid\": 48808512,\n        \"opted\": false,\n        \"permissions\": [\n          \"sunt est\",\n          \"labore in cillum\"\n        ],\n        \"token\": \"elit deserunt pariatur ut ipsum\",\n        \"name\": \"esse nisi aliqua \",\n        \"stores\": [\n          {\n            \"_id\": \"in nostrud voluptate\",\n            \"integration\": \"ullamco\",\n            \"level\": \"consequat in officia\",\n            \"uid\": -7299655,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"n\",\n            \"code\": \"eu fugiat esse\",\n            \"name\": \"consectetur deserunt officia Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia\",\n            \"integration\": \"adipisicing aliquip\",\n            \"level\": \"velit\",\n            \"uid\": -41884479,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"i\",\n            \"code\": \"Lorem id\",\n            \"name\": \"Duis dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"culpa voluptate Duis consequat\",\n      \"description\": \"anim Lorem ullamco\",\n      \"name\": \"velit aliquip\",\n      \"slug\": \"consequat adipisi\",\n      \"meta\": [\n        {\n          \"_id\": \"adipisicing quis exercitation\",\n          \"name\": \"sit fugiat irure id\",\n          \"value\": \"velit Duis in sit\"\n        },\n        {\n          \"_id\": \"officia dolore do dolor nisi\",\n          \"name\": \"labore qui aliquip dolor\",\n          \"value\": \"Excepteur dolor\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"consequat mollit anim\",\n        \"integration\": \"ut pariatur\",\n        \"level\": \"esse dolor in\",\n        \"uid\": 47342882,\n        \"opted\": false,\n        \"permissions\": [\n          \"in fugiat Ut in laborum\",\n          \"deserunt al\"\n        ],\n        \"token\": \"veniam consectetur dolor nisi\",\n        \"name\": \"incididunt proident id pariatur\",\n        \"stores\": [\n          {\n            \"_id\": \"id consectetur esse\",\n            \"integration\": \"eiusmod dolore amet tempor\",\n            \"level\": \"sint\",\n            \"uid\": 94915713,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa dolor aute\",\n            \"code\": \"officia adipisicing sed eu dolore\",\n            \"name\": \"deserunt dolore magna\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"eu dolor pariatur\",\n            \"integration\": \"Duis culpa cupidatat amet labore\",\n            \"level\": \"culpa elit sed tempor aliqua\",\n            \"uid\": 1014037,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut enim eu aute\",\n            \"code\": \"aliquip ea Ut laboris adipisicing\",\n            \"name\": \"nisi est ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"culpa aute magna id\",\n        \"integration\": \"proident ut\",\n        \"level\": \"amet officia\",\n        \"uid\": -89339635,\n        \"opted\": true,\n        \"permissions\": [\n          \"sunt velit fugiat pariatur consequat\",\n          \"labore est minim in\"\n        ],\n        \"token\": \"deserunt\",\n        \"name\": \"dolor dolor Lorem nulla ipsum\",\n        \"stores\": [\n          {\n            \"_id\": \"et aliquip\",\n            \"integration\": \"veniam consectetur\",\n            \"level\": \"occae\",\n            \"uid\": -60896907,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ex sint pariatur\",\n            \"code\": \"in aute\",\n            \"name\": \"nostrud velit fugiat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"do deserunt anim\",\n            \"integration\": \"ea incididunt\",\n            \"level\": \"velit ipsum aliqua\",\n            \"uid\": -60792962,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"qui\",\n            \"code\": \"enim incididunt exercitation\",\n            \"name\": \"non incididunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"dolore ea ipsum ut\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e230e6fc-5330-4633-af48-f3d5c4954df2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2017-09-26T16:47:09.224Z\",\n  \"status\": -38170254,\n  \"error\": \"sed est\",\n  \"exception\": \"enim anim ad ea\",\n  \"message\": \"nostrud ut qui dolore Ut\",\n  \"total_time_taken_in_millis\": 25867125,\n  \"http_status\": \"304 NOT_MODIFIED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"adipisicing dolor cillum\",\n      \"description\": \"\",\n      \"name\": \"in veniam nisi\",\n      \"slug\": \"do et dolore voluptate\",\n      \"meta\": [\n        {\n          \"_id\": \"Ut Lorem nisi\",\n          \"name\": \"do cupidatat dolore\",\n          \"value\": \"ea esse eiusmod mollit dolore\"\n        },\n        {\n          \"_id\": \"ea ut tempor labore\",\n          \"name\": \"aute Ut veniam ut\",\n          \"value\": \"id in nisi\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eu quis\",\n        \"integration\": \"ut nulla volup\",\n        \"level\": \"mollit fugiat cillum nisi\",\n        \"uid\": 53118517,\n        \"opted\": true,\n        \"permissions\": [\n          \"eiusmod\",\n          \"culpa\"\n        ],\n        \"token\": \"amet v\",\n        \"name\": \"aute proident labo\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut laboris sit\",\n            \"integration\": \"nostrud mollit\",\n            \"level\": \"fugiat voluptate eiusmod nisi\",\n            \"uid\": 19661013,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sit et in\",\n            \"code\": \"et est aliquip enim\",\n            \"name\": \"non veniam minim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"qui ullamco\",\n            \"level\": \"reprehenderit\",\n            \"uid\": 72910912,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do esse Lorem\",\n            \"code\": \"ad\",\n            \"name\": \"dolore ipsum \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor fugiat exerc\",\n        \"integration\": \"eiusmod Lorem adipisicing\",\n        \"level\": \"sunt consectetur aute ut commodo\",\n        \"uid\": -56128047,\n        \"opted\": false,\n        \"permissions\": [\n          \"nisi Ut\",\n          \"eiusmod tempor ad\"\n        ],\n        \"token\": \"consectetur id\",\n        \"name\": \"in Duis ea de\",\n        \"stores\": [\n          {\n            \"_id\": \"non elit dolor eu\",\n            \"integration\": \"ullamco amet adipisic\",\n            \"level\": \"enim dolor amet\",\n            \"uid\": -51297603,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa laborum voluptate nostrud\",\n            \"code\": \"officia dolore amet et\",\n            \"name\": \"mo\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"irure exercitation et nulla consequat\",\n            \"integration\": \"qui do non\",\n            \"level\": \"ipsum ea fugiat incididunt ut\",\n            \"uid\": -66126678,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consequat enim velit consectetur\",\n            \"code\": \"laborum do in labore\",\n            \"name\": \"occaecat laboris Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum esse\",\n      \"description\": \"voluptate esse\",\n      \"name\": \"consectetur Lorem\",\n      \"slug\": \"adipisicing dolor\",\n      \"meta\": [\n        {\n          \"_id\": \"labore qui\",\n          \"name\": \"Lorem nulla est adipisicing\",\n          \"value\": \"exercitation consectetur\"\n        },\n        {\n          \"_id\": \"et qui in labore esse\",\n          \"name\": \"culpa irure labore\",\n          \"value\": \"cupidatat \"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ex ea adipisicing consequat laboris\",\n        \"integration\": \"ipsum ea\",\n        \"level\": \"occaecat sed\",\n        \"uid\": -20871923,\n        \"opted\": true,\n        \"permissions\": [\n          \"ad\",\n          \"eiusmod et ex\"\n        ],\n        \"token\": \"ad labore id do Ut\",\n        \"name\": \"nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"fugiat quis\",\n            \"integration\": \"enim proident nisi nostrud\",\n            \"level\": \"ve\",\n            \"uid\": -61198095,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum eiusmod Duis\",\n            \"code\": \"in magna dolore voluptate\",\n            \"name\": \"Duis do ipsum eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"ex incididunt\",\n            \"level\": \"Lorem aliqua sed do\",\n            \"uid\": 38162058,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco\",\n            \"code\": \"ut officia quis aliquip culpa\",\n            \"name\": \"ut irure pariatur fugiat dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad labore cillum\",\n        \"integration\": \"sunt ut eiusmod ipsum\",\n        \"level\": \"magna do\",\n        \"uid\": -14485619,\n        \"opted\": true,\n        \"permissions\": [\n          \"mollit quis\",\n          \"sed ex\"\n        ],\n        \"token\": \"et amet elit tempor\",\n        \"name\": \"cupidatat dolore reprehenderit consectetur sit\",\n        \"stores\": [\n          {\n            \"_id\": \"esse minim ad\",\n            \"integration\": \"incididunt aliqua commodo\",\n            \"level\": \"magna deserunt\",\n            \"uid\": -17153702,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod elit\",\n            \"code\": \"commodo incididunt est ad magna\",\n            \"name\": \"dolore ut in elit consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"deserunt\",\n            \"integration\": \"si\",\n            \"level\": \"ut aliquip\",\n            \"uid\": -45005773,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cupidatat veniam irure dolore\",\n            \"code\": \"elit velit e\",\n            \"name\": \"adipisicing deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"Ut mollit Duis dolore eiusmod\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "213f65a2-1629-4b56-b5fb-5f454d9f3c92",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2017-09-26T16:47:09.224Z\",\n  \"status\": -38170254,\n  \"error\": \"sed est\",\n  \"exception\": \"enim anim ad ea\",\n  \"message\": \"nostrud ut qui dolore Ut\",\n  \"total_time_taken_in_millis\": 25867125,\n  \"http_status\": \"304 NOT_MODIFIED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"adipisicing dolor cillum\",\n      \"description\": \"\",\n      \"name\": \"in veniam nisi\",\n      \"slug\": \"do et dolore voluptate\",\n      \"meta\": [\n        {\n          \"_id\": \"Ut Lorem nisi\",\n          \"name\": \"do cupidatat dolore\",\n          \"value\": \"ea esse eiusmod mollit dolore\"\n        },\n        {\n          \"_id\": \"ea ut tempor labore\",\n          \"name\": \"aute Ut veniam ut\",\n          \"value\": \"id in nisi\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"eu quis\",\n        \"integration\": \"ut nulla volup\",\n        \"level\": \"mollit fugiat cillum nisi\",\n        \"uid\": 53118517,\n        \"opted\": true,\n        \"permissions\": [\n          \"eiusmod\",\n          \"culpa\"\n        ],\n        \"token\": \"amet v\",\n        \"name\": \"aute proident labo\",\n        \"stores\": [\n          {\n            \"_id\": \"Ut laboris sit\",\n            \"integration\": \"nostrud mollit\",\n            \"level\": \"fugiat voluptate eiusmod nisi\",\n            \"uid\": 19661013,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sit et in\",\n            \"code\": \"et est aliquip enim\",\n            \"name\": \"non veniam minim\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"qui ullamco\",\n            \"level\": \"reprehenderit\",\n            \"uid\": 72910912,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"do esse Lorem\",\n            \"code\": \"ad\",\n            \"name\": \"dolore ipsum \",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor fugiat exerc\",\n        \"integration\": \"eiusmod Lorem adipisicing\",\n        \"level\": \"sunt consectetur aute ut commodo\",\n        \"uid\": -56128047,\n        \"opted\": false,\n        \"permissions\": [\n          \"nisi Ut\",\n          \"eiusmod tempor ad\"\n        ],\n        \"token\": \"consectetur id\",\n        \"name\": \"in Duis ea de\",\n        \"stores\": [\n          {\n            \"_id\": \"non elit dolor eu\",\n            \"integration\": \"ullamco amet adipisic\",\n            \"level\": \"enim dolor amet\",\n            \"uid\": -51297603,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"culpa laborum voluptate nostrud\",\n            \"code\": \"officia dolore amet et\",\n            \"name\": \"mo\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"irure exercitation et nulla consequat\",\n            \"integration\": \"qui do non\",\n            \"level\": \"ipsum ea fugiat incididunt ut\",\n            \"uid\": -66126678,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consequat enim velit consectetur\",\n            \"code\": \"laborum do in labore\",\n            \"name\": \"occaecat laboris Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum esse\",\n      \"description\": \"voluptate esse\",\n      \"name\": \"consectetur Lorem\",\n      \"slug\": \"adipisicing dolor\",\n      \"meta\": [\n        {\n          \"_id\": \"labore qui\",\n          \"name\": \"Lorem nulla est adipisicing\",\n          \"value\": \"exercitation consectetur\"\n        },\n        {\n          \"_id\": \"et qui in labore esse\",\n          \"name\": \"culpa irure labore\",\n          \"value\": \"cupidatat \"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"ex ea adipisicing consequat laboris\",\n        \"integration\": \"ipsum ea\",\n        \"level\": \"occaecat sed\",\n        \"uid\": -20871923,\n        \"opted\": true,\n        \"permissions\": [\n          \"ad\",\n          \"eiusmod et ex\"\n        ],\n        \"token\": \"ad labore id do Ut\",\n        \"name\": \"nulla\",\n        \"stores\": [\n          {\n            \"_id\": \"fugiat quis\",\n            \"integration\": \"enim proident nisi nostrud\",\n            \"level\": \"ve\",\n            \"uid\": -61198095,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum eiusmod Duis\",\n            \"code\": \"in magna dolore voluptate\",\n            \"name\": \"Duis do ipsum eu\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in\",\n            \"integration\": \"ex incididunt\",\n            \"level\": \"Lorem aliqua sed do\",\n            \"uid\": 38162058,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ullamco\",\n            \"code\": \"ut officia quis aliquip culpa\",\n            \"name\": \"ut irure pariatur fugiat dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad labore cillum\",\n        \"integration\": \"sunt ut eiusmod ipsum\",\n        \"level\": \"magna do\",\n        \"uid\": -14485619,\n        \"opted\": true,\n        \"permissions\": [\n          \"mollit quis\",\n          \"sed ex\"\n        ],\n        \"token\": \"et amet elit tempor\",\n        \"name\": \"cupidatat dolore reprehenderit consectetur sit\",\n        \"stores\": [\n          {\n            \"_id\": \"esse minim ad\",\n            \"integration\": \"incididunt aliqua commodo\",\n            \"level\": \"magna deserunt\",\n            \"uid\": -17153702,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eiusmod elit\",\n            \"code\": \"commodo incididunt est ad magna\",\n            \"name\": \"dolore ut in elit consectetur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"deserunt\",\n            \"integration\": \"si\",\n            \"level\": \"ut aliquip\",\n            \"uid\": -45005773,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"cupidatat veniam irure dolore\",\n            \"code\": \"elit velit e\",\n            \"name\": \"adipisicing deserunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"Ut mollit Duis dolore eiusmod\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1da5e321-a5e3-4414-bc44-a37b8a01e4b7",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "064bb725-69ca-4f72-9e6d-e91c1810696a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-03-04T00:44:44.373Z\",\n  \"status\": 36251587,\n  \"error\": \"veniam Excepteur\",\n  \"exception\": \"commodo\",\n  \"message\": \"tempor \",\n  \"total_time_taken_in_millis\": -12972387,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"session_id\": \"magna fugiat voluptate mollit\",\n    \"error_message\": \"mollit aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"sed in\",\n    \"error_message\": \"exercitation eiusmod\"\n  },\n  \"trace_id\": \"in nulla\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9cea8241-12a6-45d6-8b23-a5768a8ebff4",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-03-04T00:44:44.373Z\",\n  \"status\": 36251587,\n  \"error\": \"veniam Excepteur\",\n  \"exception\": \"commodo\",\n  \"message\": \"tempor \",\n  \"total_time_taken_in_millis\": -12972387,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"session_id\": \"magna fugiat voluptate mollit\",\n    \"error_message\": \"mollit aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"sed in\",\n    \"error_message\": \"exercitation eiusmod\"\n  },\n  \"trace_id\": \"in nulla\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "717303c9-a201-4c00-abf2-6120b50637ad",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1970-03-04T00:44:44.373Z\",\n  \"status\": 36251587,\n  \"error\": \"veniam Excepteur\",\n  \"exception\": \"commodo\",\n  \"message\": \"tempor \",\n  \"total_time_taken_in_millis\": -12972387,\n  \"http_status\": \"208 ALREADY_REPORTED\",\n  \"items\": {\n    \"session_id\": \"magna fugiat voluptate mollit\",\n    \"error_message\": \"mollit aliquip\"\n  },\n  \"payload\": {\n    \"session_id\": \"sed in\",\n    \"error_message\": \"exercitation eiusmod\"\n  },\n  \"trace_id\": \"in nulla\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "70d546bf-0211-46b3-9ea3-18ffd75c98e3",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e23c43c2-572c-4f4a-9b82-8275c548c619",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-02-23T03:04:03.840Z\",\n  \"status\": -68332999,\n  \"error\": \"et Duis\",\n  \"exception\": \"consectetur elit sint deserunt\",\n  \"message\": \"ut minim\",\n  \"total_time_taken_in_millis\": 98715694,\n  \"http_status\": \"509 BANDWIDTH_LIMIT_EXCEEDED\",\n  \"items\": {\n    \"company_id\": 11966346,\n    \"integration_data\": {\n      \"in_6d\": {},\n      \"Duis_3\": {}\n    },\n    \"company_name\": \"consectetur dolor occaecat dolore \",\n    \"task_details\": {\n      \"type\": 86201261,\n      \"group_list\": [\n        {\n          \"text\": \"nulla sed fugiat cil\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"qui e\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 39646566.9793832,\n      \"safe_stock\": -98944227,\n      \"period_threshold\": 98105643,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolore\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"incididunt ea labore dolore commodo\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"cillum eu eiusmod sit\",\n    \"alias\": \"nostrud esse minim commodo dolore\"\n  },\n  \"payload\": {\n    \"company_id\": -92616065,\n    \"integration_data\": {\n      \"cillum_b\": {},\n      \"inf\": {},\n      \"culpa_fd\": {}\n    },\n    \"company_name\": \"nostrud\",\n    \"task_details\": {\n      \"type\": 72373255,\n      \"group_list\": [\n        {\n          \"text\": \"amet irure sed ut dolor\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute officia consequat el\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 36338859.453436166,\n      \"safe_stock\": 64843469,\n      \"period_threshold\": -16895139,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nulla Excepteur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"pariatur dolore\",\n    \"alias\": \"sed\"\n  },\n  \"trace_id\": \"enim sint Lorem\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "67dcd994-9bb9-4e52-89f1-59183195bd73",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2023-11-28T22:26:25.722Z\",\n  \"status\": 32607073,\n  \"error\": \"laborum aliquip adipisicing\",\n  \"exception\": \"Duis veniam eu proident\",\n  \"message\": \"esse aliquip deser\",\n  \"total_time_taken_in_millis\": 21764624,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"company_id\": -39179646,\n    \"integration_data\": {\n      \"commodo5d\": {},\n      \"aute_d\": {}\n    },\n    \"company_name\": \"eiusmod\",\n    \"task_details\": {\n      \"type\": 9458797,\n      \"group_list\": [\n        {\n          \"text\": \"sed magna sint quis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute cupidatat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 69164155.02870214,\n      \"safe_stock\": 58295521,\n      \"period_threshold\": 67817275,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"minim est tempor sed \",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur laborum in exercitation\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore non\",\n    \"alias\": \"consectetur culpa\"\n  },\n  \"payload\": {\n    \"company_id\": 28572940,\n    \"integration_data\": {\n      \"est_8c\": {},\n      \"magna_704\": {}\n    },\n    \"company_name\": \"ipsum dolor id\",\n    \"task_details\": {\n      \"type\": 15750917,\n      \"group_list\": [\n        {\n          \"text\": \"dolor laborum est do quis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris offi\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -2175579.1431079507,\n      \"safe_stock\": 38652688,\n      \"period_threshold\": -72840448,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"exercitation ex ipsum Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nostrud consectetur enim est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"mollit ipsum dolor laboris Duis\",\n    \"alias\": \"esse commodo\"\n  },\n  \"trace_id\": \"Excepteur veniam deserunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fe107a58-f32a-4ba8-bc2f-0a73f96bfaf7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2023-11-28T22:26:25.722Z\",\n  \"status\": 32607073,\n  \"error\": \"laborum aliquip adipisicing\",\n  \"exception\": \"Duis veniam eu proident\",\n  \"message\": \"esse aliquip deser\",\n  \"total_time_taken_in_millis\": 21764624,\n  \"http_status\": \"413 REQUEST_ENTITY_TOO_LARGE\",\n  \"items\": {\n    \"company_id\": -39179646,\n    \"integration_data\": {\n      \"commodo5d\": {},\n      \"aute_d\": {}\n    },\n    \"company_name\": \"eiusmod\",\n    \"task_details\": {\n      \"type\": 9458797,\n      \"group_list\": [\n        {\n          \"text\": \"sed magna sint quis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"aute cupidatat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 69164155.02870214,\n      \"safe_stock\": 58295521,\n      \"period_threshold\": 67817275,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"minim est tempor sed \",\n          \"value\": {}\n        },\n        {\n          \"text\": \"consectetur laborum in exercitation\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"dolore non\",\n    \"alias\": \"consectetur culpa\"\n  },\n  \"payload\": {\n    \"company_id\": 28572940,\n    \"integration_data\": {\n      \"est_8c\": {},\n      \"magna_704\": {}\n    },\n    \"company_name\": \"ipsum dolor id\",\n    \"task_details\": {\n      \"type\": 15750917,\n      \"group_list\": [\n        {\n          \"text\": \"dolor laborum est do quis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris offi\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -2175579.1431079507,\n      \"safe_stock\": 38652688,\n      \"period_threshold\": -72840448,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"exercitation ex ipsum Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"nostrud consectetur enim est\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"mollit ipsum dolor laboris Duis\",\n    \"alias\": \"esse commodo\"\n  },\n  \"trace_id\": \"Excepteur veniam deserunt\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b54cc1e7-fab6-41af-8d97-7d4922c16d64",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9c27793b-053a-4b01-bd4f-4077256dfc15",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-04-16T05:39:00.742Z\",\n  \"status\": -9780127,\n  \"error\": \"quis nisi\",\n  \"exception\": \"consectetur veniam laborum\",\n  \"message\": \"adipisicing tempor ei\",\n  \"total_time_taken_in_millis\": -92039456,\n  \"http_status\": \"418 I_AM_A_TEAPOT\",\n  \"items\": [\n    {\n      \"company_id\": -15707770,\n      \"integration_data\": {\n        \"sunta\": {}\n      },\n      \"company_name\": \"consequat\",\n      \"task_details\": {\n        \"type\": -26999494,\n        \"group_list\": [\n          {\n            \"text\": \"sed consectetur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -31316924.134580895,\n        \"safe_stock\": 22235475,\n        \"period_threshold\": -20549651,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"consectetur Lorem nisi\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint ullamco\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation ea\",\n      \"alias\": \"est cupidatat et sed\"\n    },\n    {\n      \"company_id\": -71077968,\n      \"integration_data\": {\n        \"aute_ce_\": {},\n        \"elit_4d8\": {}\n      },\n      \"company_name\": \"fugiat\",\n      \"task_details\": {\n        \"type\": 57562729,\n        \"group_list\": [\n          {\n            \"text\": \"pariatur sint irure Ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"pariatur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 9584129.912204668,\n        \"safe_stock\": 66982796,\n        \"period_threshold\": -9646913,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"voluptate dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"non cillum ipsum\",\n      \"alias\": \"anim commodo\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -36396704,\n      \"integration_data\": {\n        \"ad_b7\": {},\n        \"aliquip_4e\": {},\n        \"ex_5e\": {}\n      },\n      \"company_name\": \"dolor ut\",\n      \"task_details\": {\n        \"type\": 97515884,\n        \"group_list\": [\n          {\n            \"text\": \"Ut in reprehenderit fugiat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"minim dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -53628771.13140701,\n        \"safe_stock\": 79765593,\n        \"period_threshold\": -78001041,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"deserunt d\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"deserunt\",\n      \"alias\": \"eu voluptate\"\n    },\n    {\n      \"company_id\": -31283650,\n      \"integration_data\": {\n        \"irure0\": {},\n        \"ad_a\": {},\n        \"velit661\": {},\n        \"fugiat_c83\": {}\n      },\n      \"company_name\": \"nulla Excepteur\",\n      \"task_details\": {\n        \"type\": -64312398,\n        \"group_list\": [\n          {\n            \"text\": \"sed occaecat aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"irure consequat labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -97156762.52279195,\n        \"safe_stock\": 26305936,\n        \"period_threshold\": 20034566,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt incididunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"la\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sint est ullamco\",\n      \"alias\": \"aliquip laboris aliqua elit Duis\"\n    }\n  ],\n  \"trace_id\": \"proident labore commodo adipi\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f3c3bbce-557a-456c-a925-dcd30a703801",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-04-05T04:52:04.691Z\",\n  \"status\": 71618360,\n  \"error\": \"enim dolor aute ipsum\",\n  \"exception\": \"ut non exercitation m\",\n  \"message\": \"dolore ex\",\n  \"total_time_taken_in_millis\": 85405011,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 17512644,\n      \"integration_data\": {\n        \"enim4\": {},\n        \"labore7f6\": {}\n      },\n      \"company_name\": \"consequat dolore dolor sint elit\",\n      \"task_details\": {\n        \"type\": 92770029,\n        \"group_list\": [\n          {\n            \"text\": \"tempor deserunt enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 18471682.522013173,\n        \"safe_stock\": 11641573,\n        \"period_threshold\": -95924935,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit id occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sit\",\n      \"alias\": \"officia non\"\n    },\n    {\n      \"company_id\": 93303838,\n      \"integration_data\": {\n        \"culpa9_\": {},\n        \"in_394\": {}\n      },\n      \"company_name\": \"eiusmod consequat\",\n      \"task_details\": {\n        \"type\": 74321941,\n        \"group_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Lorem consectetur non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 56569318.8392503,\n        \"safe_stock\": -89814739,\n        \"period_threshold\": 16618311,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation\",\n      \"alias\": \"cillum in et\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 310490,\n      \"integration_data\": {\n        \"veniameca\": {}\n      },\n      \"company_name\": \"do dolore\",\n      \"task_details\": {\n        \"type\": 95727274,\n        \"group_list\": [\n          {\n            \"text\": \"dolore ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 60519472.82732573,\n        \"safe_stock\": -17548429,\n        \"period_threshold\": 53894097,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat\",\n      \"alias\": \"ut\"\n    },\n    {\n      \"company_id\": -8395672,\n      \"integration_data\": {\n        \"voluptate51\": {}\n      },\n      \"company_name\": \"Excepteur do labore\",\n      \"task_details\": {\n        \"type\": -60585775,\n        \"group_list\": [\n          {\n            \"text\": \"v\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostr\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 38801226.965073615,\n        \"safe_stock\": -85478346,\n        \"period_threshold\": -2766445,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"commodo aute magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet ut ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"labore officia sit\",\n      \"alias\": \"amet ut\"\n    }\n  ],\n  \"trace_id\": \"officia qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e9307d2e-4002-4835-abb4-f6aba9cfbcb1",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-04-05T04:52:04.691Z\",\n  \"status\": 71618360,\n  \"error\": \"enim dolor aute ipsum\",\n  \"exception\": \"ut non exercitation m\",\n  \"message\": \"dolore ex\",\n  \"total_time_taken_in_millis\": 85405011,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": [\n    {\n      \"company_id\": 17512644,\n      \"integration_data\": {\n        \"enim4\": {},\n        \"labore7f6\": {}\n      },\n      \"company_name\": \"consequat dolore dolor sint elit\",\n      \"task_details\": {\n        \"type\": 92770029,\n        \"group_list\": [\n          {\n            \"text\": \"tempor deserunt enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 18471682.522013173,\n        \"safe_stock\": 11641573,\n        \"period_threshold\": -95924935,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"do\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"mollit id occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"sit\",\n      \"alias\": \"officia non\"\n    },\n    {\n      \"company_id\": 93303838,\n      \"integration_data\": {\n        \"culpa9_\": {},\n        \"in_394\": {}\n      },\n      \"company_name\": \"eiusmod consequat\",\n      \"task_details\": {\n        \"type\": 74321941,\n        \"group_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Lorem consectetur non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 56569318.8392503,\n        \"safe_stock\": -89814739,\n        \"period_threshold\": 16618311,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"exercitation\",\n      \"alias\": \"cillum in et\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 310490,\n      \"integration_data\": {\n        \"veniameca\": {}\n      },\n      \"company_name\": \"do dolore\",\n      \"task_details\": {\n        \"type\": 95727274,\n        \"group_list\": [\n          {\n            \"text\": \"dolore ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sit\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 60519472.82732573,\n        \"safe_stock\": -17548429,\n        \"period_threshold\": 53894097,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"veniam\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cupidatat\",\n      \"alias\": \"ut\"\n    },\n    {\n      \"company_id\": -8395672,\n      \"integration_data\": {\n        \"voluptate51\": {}\n      },\n      \"company_name\": \"Excepteur do labore\",\n      \"task_details\": {\n        \"type\": -60585775,\n        \"group_list\": [\n          {\n            \"text\": \"v\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"nostr\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 38801226.965073615,\n        \"safe_stock\": -85478346,\n        \"period_threshold\": -2766445,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"commodo aute magna\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"amet ut ea\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"labore officia sit\",\n      \"alias\": \"amet ut\"\n    }\n  ],\n  \"trace_id\": \"officia qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "71091aaa-843f-4f0e-89dd-ab63989c8d04",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d088f5e6-1a8c-443c-a401-03663c181017",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b7fa6567-61a9-44b7-a7b6-0e69daff7c7d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "dcd464a5-94d9-47d0-8b6c-5fa463252ace",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "6af62847-5465-4518-932a-f6798e28db64",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "eb7e409e-5424-4df9-a458-12d6fe156888",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "47fa0678-39bf-4a8d-8fc1-e22c2d3bf971",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "1cf093b7-893c-41d7-853b-beae7560dbc6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "70ba0447-7a52-4ffb-95c4-3d0b21e8371d",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1d54344a-bbfa-4732-b21c-639753050d1b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "110f38af-9256-46f3-a669-92804825eaca",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"aliqua_c\": 81463432.33695358,\n      \"in_c1a\": -70193854.59495232\n    },\n    \"meta\": {\n      \"nostrud_2_\": \"sed minim dolore\",\n      \"eaa6c\": -53606583.59756108,\n      \"ex_70\": -98451141.1990396\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "c84b03d6-8962-4a20-9405-f25d1e401891",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c483a49d-2940-4701-abbc-ffeac9cdf98a",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"velit7b9\": -21121155\n    },\n    \"meta\": {\n      \"culpa_33\": 11159202.139593914\n    }\n  },\n  \"event_schema\": {\n    \"dolor9c\": 29052834,\n    \"do_2\": 65326775.381810665\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "6c1860c3-bc60-4244-bfad-22feb776c64a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "da7f436c-9ad1-4ca2-b64a-00fb8f985c27",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
