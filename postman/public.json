{
  "item": [
    {
      "id": "2a316c22-8b65-49d6-b26c-084047c525fe",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "63951ecf-83ce-4d3d-a675-b636094f9d0b",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8338c19f-f0d9-4acb-8a74-fdc25ff1d5fb",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in nostrud in ipsum enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d8655d21-a899-447f-8e5d-6bf6368f32ee",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in nostrud in ipsum enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "b2c1d57e-ecc5-499a-ae67-bb813a3b3472",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in nostrud in ipsum enim",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "fa35ce4b-0793-4824-a984-b4f2b50a2165",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "737f3295-535e-4a3f-ab03-e8a18ce482cf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5d27ddef-1426-415c-93f8-8787a459aa79",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c5676ad6-90da-4663-a1ac-43b77b8313fe",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -10867114,\n   \"event_name\": \"labore\",\n   \"event_type\": \"in occaecat\",\n   \"event_category\": \"exercitat\",\n   \"version\": \"Excepteur dolore\",\n   \"display_name\": \"elit cillum adipisicing\",\n   \"description\": \"incididunt velit ut\",\n   \"created_on\": \"aliquip Except\"\n  },\n  {\n   \"id\": 62127215,\n   \"event_name\": \"cul\",\n   \"event_type\": \"dolore quis nostrud est\",\n   \"event_category\": \"deserunt ut occaecat laboris\",\n   \"version\": \"adipisicing est mollit in consectetur\",\n   \"display_name\": \"Excepteur deserunt consectetur ex\",\n   \"description\": \"id esse cillum occ\",\n   \"created_on\": \"est minim cupidatat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "2ca335ab-bd3b-4bda-91d0-e6ccb1617ef2",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "1a3f1edb-dae3-462f-a1cc-fce3400894ec",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -30767981,\n   \"event_name\": \"veniam ipsum\",\n   \"event_type\": \"commodo\",\n   \"event_category\": \"cupidatat sed\",\n   \"version\": \"incididunt ullamco sit aliqua\",\n   \"display_name\": \"Lorem do eu\",\n   \"description\": \"dolore laboris\",\n   \"created_on\": \"irure id\"\n  },\n  {\n   \"id\": -42644006,\n   \"event_name\": \"dolor \",\n   \"event_type\": \"amet id pariatur\",\n   \"event_category\": \"in anim\",\n   \"version\": \"aliquip dolor\",\n   \"display_name\": \"nulla incididunt cupidatat voluptate\",\n   \"description\": \"commodo sit velit\",\n   \"created_on\": \"sunt incididunt dolor laborum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "0f7da9cf-2024-45a9-9bc4-b59de8a3d70f",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "687ecbeb-ccc1-4601-b9ee-388079a1baa9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2005-04-11T06:40:09.971Z\",\n \"status\": -83266758,\n \"error\": \"non ex et qui\",\n \"exception\": \"et ut amet\",\n \"message\": \"anim aute\",\n \"total_time_taken_in_millis\": -13398398,\n \"http_status\": \"422 UNPROCESSABLE_ENTITY\",\n \"items\": [\n  {\n   \"company_id\": 757730,\n   \"integration_data\": {},\n   \"company_name\": \"nisi\",\n   \"task_details\": {\n    \"type\": 56746922,\n    \"group_list\": [\n     {\n      \"text\": \"quis cupidatat incididunt ea Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"amet magna deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -80729220.06540981,\n    \"safe_stock\": -87010432,\n    \"period_threshold\": -31569940,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"occaecat do sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit veniam in nis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"elit commodo\",\n   \"alias\": \"laboris proident sint minim\"\n  },\n  {\n   \"company_id\": 93986987,\n   \"integration_data\": {},\n   \"company_name\": \"et magna labore in\",\n   \"task_details\": {\n    \"type\": -53829425,\n    \"group_list\": [\n     {\n      \"text\": \"culpa eiusmod labore aliqua\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nostrud esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 78397173.80743694,\n    \"safe_stock\": 25651897,\n    \"period_threshold\": -50312911,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Ut quis exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"est aute ad veniam et\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"voluptate cillum nisi\",\n   \"alias\": \"id occaecat sit dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -75151630,\n   \"integration_data\": {},\n   \"company_name\": \"in proident reprehenderit fugiat elit\",\n   \"task_details\": {\n    \"type\": 37649321,\n    \"group_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut voluptat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 88321815.37394229,\n    \"safe_stock\": 33696204,\n    \"period_threshold\": -19020520,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim reprehenderit dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim mol\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ea pariatur\",\n   \"alias\": \"id eiusmod\"\n  },\n  {\n   \"company_id\": -80795398,\n   \"integration_data\": {},\n   \"company_name\": \"consequat nisi mollit\",\n   \"task_details\": {\n    \"type\": 38121218,\n    \"group_list\": [\n     {\n      \"text\": \"enim quis veniam\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"culpa amet aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -53203795.4414311,\n    \"safe_stock\": -53844986,\n    \"period_threshold\": -74436021,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nulla reprehende\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit commodo adipisicing pariatu\",\n   \"alias\": \"veniam amet qui magna\"\n  }\n ],\n \"trace_id\": \"in\",\n \"page\": {\n  \"type\": \"aliqua dolor non\",\n  \"size\": 42210281,\n  \"current\": 56256218,\n  \"has_next\": false,\n  \"item_total\": 97400691,\n  \"next_id\": \"ipsum in non\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "185cf148-c399-4b3a-b239-f1dae107a008",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1958-11-26T23:55:32.625Z\",\n \"status\": -42760036,\n \"error\": \"ullamco sunt\",\n \"exception\": \"veniam cupidatat ipsum ut ut\",\n \"message\": \"dolor s\",\n \"total_time_taken_in_millis\": -88441992,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": [\n  {\n   \"company_id\": -59924414,\n   \"integration_data\": {},\n   \"company_name\": \"proident eiusmod nulla ut\",\n   \"task_details\": {\n    \"type\": -83504056,\n    \"group_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 32010367.504079625,\n    \"safe_stock\": 31376375,\n    \"period_threshold\": 63375223,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor Lorem sint veniam enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim tempor velit nisi\",\n   \"alias\": \"ut reprehenderit\"\n  },\n  {\n   \"company_id\": 47282200,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation labore reprehenderit tempo\",\n   \"task_details\": {\n    \"type\": 15959821,\n    \"group_list\": [\n     {\n      \"text\": \"dolor cillum in deserunt est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -56486366.332467556,\n    \"safe_stock\": -34099075,\n    \"period_threshold\": -41449503,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim esse non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor amet est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit eiusmod\",\n   \"alias\": \"aute sed mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 3230483,\n   \"integration_data\": {},\n   \"company_name\": \"magna deserunt Lorem\",\n   \"task_details\": {\n    \"type\": 74950955,\n    \"group_list\": [\n     {\n      \"text\": \"in ullamco ex laboris ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -23797950.602109894,\n    \"safe_stock\": -44776236,\n    \"period_threshold\": 12013027,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat elit enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat eiusmod tempor non\",\n   \"alias\": \"Ut proident voluptate\"\n  },\n  {\n   \"company_id\": 30131023,\n   \"integration_data\": {},\n   \"company_name\": \"mollit ut enim Lorem\",\n   \"task_details\": {\n    \"type\": 82150062,\n    \"group_list\": [\n     {\n      \"text\": \"dolore elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit culpa exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 17334280.403074637,\n    \"safe_stock\": -8956976,\n    \"period_threshold\": -56795915,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla sed labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa fugiat mollit velit exercitation\",\n   \"alias\": \"co\"\n  }\n ],\n \"trace_id\": \"ea\",\n \"page\": {\n  \"type\": \"Lorem aliquip aliqua ex\",\n  \"size\": 19839517,\n  \"current\": 56835999,\n  \"has_next\": false,\n  \"item_total\": 67691267,\n  \"next_id\": \"Ut et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3592ba05-c7a6-4e05-b902-96a57ca79eac",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1958-11-26T23:55:32.625Z\",\n \"status\": -42760036,\n \"error\": \"ullamco sunt\",\n \"exception\": \"veniam cupidatat ipsum ut ut\",\n \"message\": \"dolor s\",\n \"total_time_taken_in_millis\": -88441992,\n \"http_status\": \"406 NOT_ACCEPTABLE\",\n \"items\": [\n  {\n   \"company_id\": -59924414,\n   \"integration_data\": {},\n   \"company_name\": \"proident eiusmod nulla ut\",\n   \"task_details\": {\n    \"type\": -83504056,\n    \"group_list\": [\n     {\n      \"text\": \"velit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 32010367.504079625,\n    \"safe_stock\": 31376375,\n    \"period_threshold\": 63375223,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris dolore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor Lorem sint veniam enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim tempor velit nisi\",\n   \"alias\": \"ut reprehenderit\"\n  },\n  {\n   \"company_id\": 47282200,\n   \"integration_data\": {},\n   \"company_name\": \"exercitation labore reprehenderit tempo\",\n   \"task_details\": {\n    \"type\": 15959821,\n    \"group_list\": [\n     {\n      \"text\": \"dolor cillum in deserunt est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"mollit anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -56486366.332467556,\n    \"safe_stock\": -34099075,\n    \"period_threshold\": -41449503,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"anim esse non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor amet est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sit eiusmod\",\n   \"alias\": \"aute sed mollit\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 3230483,\n   \"integration_data\": {},\n   \"company_name\": \"magna deserunt Lorem\",\n   \"task_details\": {\n    \"type\": 74950955,\n    \"group_list\": [\n     {\n      \"text\": \"in ullamco ex laboris ipsum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -23797950.602109894,\n    \"safe_stock\": -44776236,\n    \"period_threshold\": 12013027,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ipsum enim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat elit enim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"occaecat eiusmod tempor non\",\n   \"alias\": \"Ut proident voluptate\"\n  },\n  {\n   \"company_id\": 30131023,\n   \"integration_data\": {},\n   \"company_name\": \"mollit ut enim Lorem\",\n   \"task_details\": {\n    \"type\": 82150062,\n    \"group_list\": [\n     {\n      \"text\": \"dolore elit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"elit culpa exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 17334280.403074637,\n    \"safe_stock\": -8956976,\n    \"period_threshold\": -56795915,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nulla sed labore\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"culpa fugiat mollit velit exercitation\",\n   \"alias\": \"co\"\n  }\n ],\n \"trace_id\": \"ea\",\n \"page\": {\n  \"type\": \"Lorem aliquip aliqua ex\",\n  \"size\": 19839517,\n  \"current\": 56835999,\n  \"has_next\": false,\n  \"item_total\": 67691267,\n  \"next_id\": \"Ut et\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "316598cd-b96f-426e-975e-70db14453494",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9c07545e-dad2-4741-956a-af5aba524d0a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-04-10T11:02:56.597Z\",\n \"status\": -59423672,\n \"error\": \"ipsum ex voluptate aliquip\",\n \"exception\": \"magna amet dolore\",\n \"message\": \"est et sint cupidatat esse\",\n \"total_time_taken_in_millis\": -39723864,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo eiusmod incididunt eu\",\n \"page\": {\n  \"type\": \"do ut proident Ut\",\n  \"size\": 25845570,\n  \"current\": 5595755,\n  \"has_next\": false,\n  \"item_total\": 59109764,\n  \"next_id\": \"magna non mollit anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5391fff6-40e2-4a87-859a-11bd6dff3968",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-04-10T11:02:56.597Z\",\n \"status\": -59423672,\n \"error\": \"ipsum ex voluptate aliquip\",\n \"exception\": \"magna amet dolore\",\n \"message\": \"est et sint cupidatat esse\",\n \"total_time_taken_in_millis\": -39723864,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo eiusmod incididunt eu\",\n \"page\": {\n  \"type\": \"do ut proident Ut\",\n  \"size\": 25845570,\n  \"current\": 5595755,\n  \"has_next\": false,\n  \"item_total\": 59109764,\n  \"next_id\": \"magna non mollit anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e95fb99a-a0c1-438e-88ad-536611d47b37",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1999-04-10T11:02:56.597Z\",\n \"status\": -59423672,\n \"error\": \"ipsum ex voluptate aliquip\",\n \"exception\": \"magna amet dolore\",\n \"message\": \"est et sint cupidatat esse\",\n \"total_time_taken_in_millis\": -39723864,\n \"http_status\": \"411 LENGTH_REQUIRED\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"commodo eiusmod incididunt eu\",\n \"page\": {\n  \"type\": \"do ut proident Ut\",\n  \"size\": 25845570,\n  \"current\": 5595755,\n  \"has_next\": false,\n  \"item_total\": 59109764,\n  \"next_id\": \"magna non mollit anim\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "f144bdd0-ab82-43ec-a2b7-6804c9542944",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "97fbe7f9-c797-4d5d-a3cb-34a31a870ea3",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-21T16:07:03.520Z\",\n \"status\": 4607231,\n \"error\": \"magna id eu dolor in\",\n \"exception\": \"ea do \",\n \"message\": \"dolore occaecat\",\n \"total_time_taken_in_millis\": 57955183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in cupidatat velit do\",\n \"page\": {\n  \"type\": \"sit adipisicing eiusmod nostrud\",\n  \"size\": -97473067,\n  \"current\": 26123696,\n  \"has_next\": false,\n  \"item_total\": 84908426,\n  \"next_id\": \"tempor ut amet Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "46df3602-eaad-4aed-930c-8b5cb2de412a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-21T16:07:03.520Z\",\n \"status\": 4607231,\n \"error\": \"magna id eu dolor in\",\n \"exception\": \"ea do \",\n \"message\": \"dolore occaecat\",\n \"total_time_taken_in_millis\": 57955183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in cupidatat velit do\",\n \"page\": {\n  \"type\": \"sit adipisicing eiusmod nostrud\",\n  \"size\": -97473067,\n  \"current\": 26123696,\n  \"has_next\": false,\n  \"item_total\": 84908426,\n  \"next_id\": \"tempor ut amet Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "502b6030-edb2-4a1c-9802-d46a8206b346",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-21T16:07:03.520Z\",\n \"status\": 4607231,\n \"error\": \"magna id eu dolor in\",\n \"exception\": \"ea do \",\n \"message\": \"dolore occaecat\",\n \"total_time_taken_in_millis\": 57955183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in cupidatat velit do\",\n \"page\": {\n  \"type\": \"sit adipisicing eiusmod nostrud\",\n  \"size\": -97473067,\n  \"current\": 26123696,\n  \"has_next\": false,\n  \"item_total\": 84908426,\n  \"next_id\": \"tempor ut amet Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "863d2c20-576d-4254-9724-0e9b3aee4e75",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-21T16:07:03.520Z\",\n \"status\": 4607231,\n \"error\": \"magna id eu dolor in\",\n \"exception\": \"ea do \",\n \"message\": \"dolore occaecat\",\n \"total_time_taken_in_millis\": 57955183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in cupidatat velit do\",\n \"page\": {\n  \"type\": \"sit adipisicing eiusmod nostrud\",\n  \"size\": -97473067,\n  \"current\": 26123696,\n  \"has_next\": false,\n  \"item_total\": 84908426,\n  \"next_id\": \"tempor ut amet Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b7dabfce-ab30-4bc4-bc4a-b5a01e41d8ae",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2008-07-21T16:07:03.520Z\",\n \"status\": 4607231,\n \"error\": \"magna id eu dolor in\",\n \"exception\": \"ea do \",\n \"message\": \"dolore occaecat\",\n \"total_time_taken_in_millis\": 57955183,\n \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"in cupidatat velit do\",\n \"page\": {\n  \"type\": \"sit adipisicing eiusmod nostrud\",\n  \"size\": -97473067,\n  \"current\": 26123696,\n  \"has_next\": false,\n  \"item_total\": 84908426,\n  \"next_id\": \"tempor ut amet Excepteur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "bee18675-7052-4653-952d-1dc9eb855370",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
