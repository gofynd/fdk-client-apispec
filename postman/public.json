{
  "item": [
    {
      "id": "1e1d778b-3e0e-42ef-a675-e0f85e208025",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3eda5e9d-9755-48f8-87e3-2b1cff83037c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "98792a67-2e17-4cf8-b38f-b05976433a31",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "eiusmod enim elit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "788c6658-f34d-4fda-b81f-eaa9147b2a0a",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "eiusmod enim elit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "18281a61-11c8-4c10-93ac-a578bf96fb12",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "eiusmod enim elit",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "91d44b84-1b8a-478d-b990-a1048a004efb",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cd5ced22-2c2e-4b31-bd51-608751d68944",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "de702065-df8c-4f7d-b28e-f4e528661033",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1f64a603-89b4-4233-87af-f09590a4b761",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ad6bb8c4-9225-44a9-97ac-a1c1a5e06b51",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 89780324,\n   \"event_name\": \"nulla cupidatat aute \",\n   \"event_type\": \"veniam dolor voluptate\",\n   \"event_category\": \"id ex do in\",\n   \"version\": \"ipsum\",\n   \"display_name\": \"tempor proident commodo velit nulla\",\n   \"description\": \"labore est ullamco Ut velit\",\n   \"created_on\": \"in aliqu\"\n  },\n  {\n   \"id\": 68016837,\n   \"event_name\": \"incididunt sint\",\n   \"event_type\": \"non exercitation quis\",\n   \"event_category\": \"Lorem occaecat\",\n   \"version\": \"enim veniam aute\",\n   \"display_name\": \"ut\",\n   \"description\": \"irure tempor\",\n   \"created_on\": \"consectetur mollit\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b0860010-053c-4e08-8644-bc11ec3fc969",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "a3b41b40-4088-401e-919e-d6de4ac4da6c",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -60736455,\n   \"event_name\": \"Excepteur consectetur labore\",\n   \"event_type\": \"esse elit aliqua id\",\n   \"event_category\": \"nostrud ex id\",\n   \"version\": \"minim\",\n   \"display_name\": \"adipisicing est occaecat\",\n   \"description\": \"qui consequat cillum\",\n   \"created_on\": \"adipisicing do dolore et sed\"\n  },\n  {\n   \"id\": 74849803,\n   \"event_name\": \"enim proident in do\",\n   \"event_type\": \"ad\",\n   \"event_category\": \"elit eiusmod dolor dolore\",\n   \"version\": \"nisi enim Excepteur in amet\",\n   \"display_name\": \"quis Duis dolore nisi\",\n   \"description\": \"aute Duis\",\n   \"created_on\": \"dolor cupidatat\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "2544c558-22df-4856-8ae4-8a53d8aef20d",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "55421f55-27f9-46ca-81a1-dea7a2201769",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f8300961-cc95-42a4-8517-b107edb3b7c4",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2019-06-01T03:07:06.574Z\",\n \"status\": 80511456,\n \"error\": \"ex quis consequat est\",\n \"exception\": \"occaecat dolor ad\",\n \"message\": \"dolor proident Lorem officia\",\n \"total_time_taken_in_millis\": -27283633,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"company_id\": -95579027,\n  \"integration_data\": {},\n  \"company_name\": \"in ea dolore\",\n  \"task_details\": {\n   \"type\": 42515109,\n   \"group_list\": [\n    {\n     \"text\": \"minim sint ullamco commodo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex elit et\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 92702169.69187817,\n   \"safe_stock\": 16517324,\n   \"period_threshold\": -37998306,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"sed in aliquip eiusmod tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"culpa est occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"dolore\",\n  \"alias\": \"laborum \"\n },\n \"payload\": {\n  \"company_id\": 86207232,\n  \"integration_data\": {},\n  \"company_name\": \"ut cupidatat \",\n  \"task_details\": {\n   \"type\": -73276179,\n   \"group_list\": [\n    {\n     \"text\": \"minim exercitation\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt mollit te\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -28600944.06215015,\n   \"safe_stock\": -84605275,\n   \"period_threshold\": 83056201,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"qui tempor laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sit enim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostrud dolore\",\n  \"alias\": \"mollit incididunt aute\"\n },\n \"trace_id\": \"do minim tempor\",\n \"page\": {\n  \"type\": \"do\",\n  \"size\": 36636803,\n  \"current\": -63995918,\n  \"has_next\": false,\n  \"item_total\": 52093289,\n  \"next_id\": \"mollit et ad veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5463d812-c7bc-42f8-ba37-4b7e8c5d45b2",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2019-06-01T03:07:06.574Z\",\n \"status\": 80511456,\n \"error\": \"ex quis consequat est\",\n \"exception\": \"occaecat dolor ad\",\n \"message\": \"dolor proident Lorem officia\",\n \"total_time_taken_in_millis\": -27283633,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"company_id\": -95579027,\n  \"integration_data\": {},\n  \"company_name\": \"in ea dolore\",\n  \"task_details\": {\n   \"type\": 42515109,\n   \"group_list\": [\n    {\n     \"text\": \"minim sint ullamco commodo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex elit et\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 92702169.69187817,\n   \"safe_stock\": 16517324,\n   \"period_threshold\": -37998306,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"sed in aliquip eiusmod tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"culpa est occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"dolore\",\n  \"alias\": \"laborum \"\n },\n \"payload\": {\n  \"company_id\": 86207232,\n  \"integration_data\": {},\n  \"company_name\": \"ut cupidatat \",\n  \"task_details\": {\n   \"type\": -73276179,\n   \"group_list\": [\n    {\n     \"text\": \"minim exercitation\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt mollit te\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -28600944.06215015,\n   \"safe_stock\": -84605275,\n   \"period_threshold\": 83056201,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"qui tempor laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sit enim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostrud dolore\",\n  \"alias\": \"mollit incididunt aute\"\n },\n \"trace_id\": \"do minim tempor\",\n \"page\": {\n  \"type\": \"do\",\n  \"size\": 36636803,\n  \"current\": -63995918,\n  \"has_next\": false,\n  \"item_total\": 52093289,\n  \"next_id\": \"mollit et ad veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "31de436a-ca2d-4e9c-b5e9-eb525b977cf2",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2019-06-01T03:07:06.574Z\",\n \"status\": 80511456,\n \"error\": \"ex quis consequat est\",\n \"exception\": \"occaecat dolor ad\",\n \"message\": \"dolor proident Lorem officia\",\n \"total_time_taken_in_millis\": -27283633,\n \"http_status\": \"506 VARIANT_ALSO_NEGOTIATES\",\n \"items\": {\n  \"company_id\": -95579027,\n  \"integration_data\": {},\n  \"company_name\": \"in ea dolore\",\n  \"task_details\": {\n   \"type\": 42515109,\n   \"group_list\": [\n    {\n     \"text\": \"minim sint ullamco commodo\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ex elit et\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 92702169.69187817,\n   \"safe_stock\": 16517324,\n   \"period_threshold\": -37998306,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"sed in aliquip eiusmod tempor\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"culpa est occaecat\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"dolore\",\n  \"alias\": \"laborum \"\n },\n \"payload\": {\n  \"company_id\": 86207232,\n  \"integration_data\": {},\n  \"company_name\": \"ut cupidatat \",\n  \"task_details\": {\n   \"type\": -73276179,\n   \"group_list\": [\n    {\n     \"text\": \"minim exercitation\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"incididunt mollit te\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": -28600944.06215015,\n   \"safe_stock\": -84605275,\n   \"period_threshold\": 83056201,\n   \"period_threshold_type\": \"DAYS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"qui tempor laborum\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"sit enim\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"nostrud dolore\",\n  \"alias\": \"mollit incididunt aute\"\n },\n \"trace_id\": \"do minim tempor\",\n \"page\": {\n  \"type\": \"do\",\n  \"size\": 36636803,\n  \"current\": -63995918,\n  \"has_next\": false,\n  \"item_total\": 52093289,\n  \"next_id\": \"mollit et ad veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7f051690-3d01-4134-a23c-2caa7ca22257",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a1f55098-d3b3-4fec-a379-f1ef65fc70f2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1948-08-22T14:36:57.901Z\",\n \"status\": -16668438,\n \"error\": \"enim ad eu consectetur\",\n \"exception\": \"pariatur consequat in laborum\",\n \"message\": \"aliquip amet qui\",\n \"total_time_taken_in_millis\": 25700286,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": [\n  {\n   \"company_id\": -61815944,\n   \"integration_data\": {},\n   \"company_name\": \"aute sint dolor\",\n   \"task_details\": {\n    \"type\": -33276937,\n    \"group_list\": [\n     {\n      \"text\": \"proident ipsum v\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore officia ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -32971270.950174913,\n    \"safe_stock\": -77487629,\n    \"period_threshold\": -33773998,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"in veniam do quis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"min\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et fugia\",\n   \"alias\": \"tempor anim Duis\"\n  },\n  {\n   \"company_id\": 58982294,\n   \"integration_data\": {},\n   \"company_name\": \"esse occaecat\",\n   \"task_details\": {\n    \"type\": 74552797,\n    \"group_list\": [\n     {\n      \"text\": \"nisi in laborum in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44193522.57784316,\n    \"safe_stock\": 10762928,\n    \"period_threshold\": 88872735,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"eiusmod\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"anim cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna dolore occaecat cupida\",\n   \"alias\": \"aliqua minim do ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -55277603,\n   \"integration_data\": {},\n   \"company_name\": \"eli\",\n   \"task_details\": {\n    \"type\": -69476581,\n    \"group_list\": [\n     {\n      \"text\": \"occaecat deserunt culpa nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"occaecat incididunt proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 77275756.19484064,\n    \"safe_stock\": -38855455,\n    \"period_threshold\": 63704298,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"laboris laborum culpa sint\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor laboris\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"commodo ullamco culpa ut eiusmod\",\n   \"alias\": \"deserunt in Lorem culpa\"\n  },\n  {\n   \"company_id\": -82732394,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt reprehenderit\",\n   \"task_details\": {\n    \"type\": -30353987,\n    \"group_list\": [\n     {\n      \"text\": \"eu labore aliqua officia sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consequat culpa veniam nostrud\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -61613592.707182854,\n    \"safe_stock\": 14187986,\n    \"period_threshold\": -41694710,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore Duis do nostrud est\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur sit in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis do minim sed\",\n   \"alias\": \"enim consequat ad sint tempor\"\n  }\n ],\n \"trace_id\": \"laborum nostrud\",\n \"page\": {\n  \"type\": \"Lorem dolor ea cupidatat\",\n  \"size\": 71858742,\n  \"current\": -68307457,\n  \"has_next\": false,\n  \"item_total\": -76468363,\n  \"next_id\": \"nulla\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8af6942b-8f42-493d-9001-1292e7c1ca22",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-09T08:52:20.277Z\",\n \"status\": 59601039,\n \"error\": \"Excepteur Duis elit id\",\n \"exception\": \"ad ex culpa\",\n \"message\": \"ut proident enim\",\n \"total_time_taken_in_millis\": 4040613,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": [\n  {\n   \"company_id\": -4114349,\n   \"integration_data\": {},\n   \"company_name\": \"proident ea\",\n   \"task_details\": {\n    \"type\": 20828894,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip eu commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu tempor aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 53549311.3398509,\n    \"safe_stock\": -40826324,\n    \"period_threshold\": -64427075,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore commodo est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis incididunt aute ipsum\",\n   \"alias\": \"ullamco officia esse deserunt anim\"\n  },\n  {\n   \"company_id\": 39360925,\n   \"integration_data\": {},\n   \"company_name\": \"esse dolore\",\n   \"task_details\": {\n    \"type\": -44279640,\n    \"group_list\": [\n     {\n      \"text\": \"ad proident est aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 62890421.33036822,\n    \"safe_stock\": -18310551,\n    \"period_threshold\": 49603579,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim veniam\",\n   \"alias\": \"tempor Excepteur dolor ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -86639181,\n   \"integration_data\": {},\n   \"company_name\": \"amet esse veniam commodo ut\",\n   \"task_details\": {\n    \"type\": 89718085,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip amet incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed elit anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -76526342.13876124,\n    \"safe_stock\": 15717924,\n    \"period_threshold\": -84709451,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi tempor quis ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do cillum quis dolore\",\n   \"alias\": \"Ex\"\n  },\n  {\n   \"company_id\": -20244067,\n   \"integration_data\": {},\n   \"company_name\": \"ut ex\",\n   \"task_details\": {\n    \"type\": 30831025,\n    \"group_list\": [\n     {\n      \"text\": \"commodo elit ad pariatur exercitati\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea cupidatat quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 77372003.07325369,\n    \"safe_stock\": -59414164,\n    \"period_threshold\": -57572261,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse ea est id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor est esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur in\",\n   \"alias\": \"dolor\"\n  }\n ],\n \"trace_id\": \"minim pariatur dolore\",\n \"page\": {\n  \"type\": \"in sint laborum\",\n  \"size\": -54987539,\n  \"current\": 28308729,\n  \"has_next\": false,\n  \"item_total\": 98196399,\n  \"next_id\": \"ipsum Excepteur magna i\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e651a213-50c0-4788-bf67-a791f5f34ed3",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1996-01-09T08:52:20.277Z\",\n \"status\": 59601039,\n \"error\": \"Excepteur Duis elit id\",\n \"exception\": \"ad ex culpa\",\n \"message\": \"ut proident enim\",\n \"total_time_taken_in_millis\": 4040613,\n \"http_status\": \"305 USE_PROXY\",\n \"items\": [\n  {\n   \"company_id\": -4114349,\n   \"integration_data\": {},\n   \"company_name\": \"proident ea\",\n   \"task_details\": {\n    \"type\": 20828894,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip eu commodo\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu tempor aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 53549311.3398509,\n    \"safe_stock\": -40826324,\n    \"period_threshold\": -64427075,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur reprehenderit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore commodo est\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"quis incididunt aute ipsum\",\n   \"alias\": \"ullamco officia esse deserunt anim\"\n  },\n  {\n   \"company_id\": 39360925,\n   \"integration_data\": {},\n   \"company_name\": \"esse dolore\",\n   \"task_details\": {\n    \"type\": -44279640,\n    \"group_list\": [\n     {\n      \"text\": \"ad proident est aliquip\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 62890421.33036822,\n    \"safe_stock\": -18310551,\n    \"period_threshold\": 49603579,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"officia amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore nisi\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim veniam\",\n   \"alias\": \"tempor Excepteur dolor ad\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -86639181,\n   \"integration_data\": {},\n   \"company_name\": \"amet esse veniam commodo ut\",\n   \"task_details\": {\n    \"type\": 89718085,\n    \"group_list\": [\n     {\n      \"text\": \"aliquip amet incididunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed elit anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -76526342.13876124,\n    \"safe_stock\": 15717924,\n    \"period_threshold\": -84709451,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nisi tempor quis ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aute\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do cillum quis dolore\",\n   \"alias\": \"Ex\"\n  },\n  {\n   \"company_id\": -20244067,\n   \"integration_data\": {},\n   \"company_name\": \"ut ex\",\n   \"task_details\": {\n    \"type\": 30831025,\n    \"group_list\": [\n     {\n      \"text\": \"commodo elit ad pariatur exercitati\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ea cupidatat quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 77372003.07325369,\n    \"safe_stock\": -59414164,\n    \"period_threshold\": -57572261,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"esse ea est id\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor est esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Excepteur in\",\n   \"alias\": \"dolor\"\n  }\n ],\n \"trace_id\": \"minim pariatur dolore\",\n \"page\": {\n  \"type\": \"in sint laborum\",\n  \"size\": -54987539,\n  \"current\": 28308729,\n  \"has_next\": false,\n  \"item_total\": 98196399,\n  \"next_id\": \"ipsum Excepteur magna i\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "1195350a-f66a-4aea-acda-73e39588b303",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "31ec4d1e-bceb-4692-aafc-63290437e817",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-01-03T01:29:18.321Z\",\n \"status\": -87877029,\n \"error\": \"officia labore dolor culpa enim\",\n \"exception\": \"ut anim ullamco veniam\",\n \"message\": \"sint minim incididunt cupidatat eu\",\n \"total_time_taken_in_millis\": 36777404,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna laboris\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -13740747,\n  \"current\": -21384015,\n  \"has_next\": false,\n  \"item_total\": -24954583,\n  \"next_id\": \"ex ut consectetur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5b852743-4171-46b8-b1e6-2e60322e08fb",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-01-03T01:29:18.321Z\",\n \"status\": -87877029,\n \"error\": \"officia labore dolor culpa enim\",\n \"exception\": \"ut anim ullamco veniam\",\n \"message\": \"sint minim incididunt cupidatat eu\",\n \"total_time_taken_in_millis\": 36777404,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna laboris\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -13740747,\n  \"current\": -21384015,\n  \"has_next\": false,\n  \"item_total\": -24954583,\n  \"next_id\": \"ex ut consectetur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5f2dd00a-beab-4fdc-94e0-f88e9fe3f5ab",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2021-01-03T01:29:18.321Z\",\n \"status\": -87877029,\n \"error\": \"officia labore dolor culpa enim\",\n \"exception\": \"ut anim ullamco veniam\",\n \"message\": \"sint minim incididunt cupidatat eu\",\n \"total_time_taken_in_millis\": 36777404,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"magna laboris\",\n \"page\": {\n  \"type\": \"in\",\n  \"size\": -13740747,\n  \"current\": -21384015,\n  \"has_next\": false,\n  \"item_total\": -24954583,\n  \"next_id\": \"ex ut consectetur\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5a4c7c82-d46b-49bd-830d-14d93b452403",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "781c85f6-cae9-4b73-8b2f-370b32752505",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-08-02T11:13:12.731Z\",\n \"status\": -95848419,\n \"error\": \"proident\",\n \"exception\": \"ex\",\n \"message\": \"aliqua proident officia deserunt\",\n \"total_time_taken_in_millis\": 95038763,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed elit\",\n \"page\": {\n  \"type\": \"Duis eu reprehenderit Excepteur\",\n  \"size\": 97912120,\n  \"current\": -63017221,\n  \"has_next\": false,\n  \"item_total\": 85349339,\n  \"next_id\": \"est et officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dcb7d6f0-2ece-4885-9ee4-e107a76691d6",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-08-02T11:13:12.731Z\",\n \"status\": -95848419,\n \"error\": \"proident\",\n \"exception\": \"ex\",\n \"message\": \"aliqua proident officia deserunt\",\n \"total_time_taken_in_millis\": 95038763,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed elit\",\n \"page\": {\n  \"type\": \"Duis eu reprehenderit Excepteur\",\n  \"size\": 97912120,\n  \"current\": -63017221,\n  \"has_next\": false,\n  \"item_total\": 85349339,\n  \"next_id\": \"est et officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c9870407-753a-4ca5-8c8c-62da093d2483",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-08-02T11:13:12.731Z\",\n \"status\": -95848419,\n \"error\": \"proident\",\n \"exception\": \"ex\",\n \"message\": \"aliqua proident officia deserunt\",\n \"total_time_taken_in_millis\": 95038763,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed elit\",\n \"page\": {\n  \"type\": \"Duis eu reprehenderit Excepteur\",\n  \"size\": 97912120,\n  \"current\": -63017221,\n  \"has_next\": false,\n  \"item_total\": 85349339,\n  \"next_id\": \"est et officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "47ea9972-7fa5-4843-a7c3-353a3723c5cd",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-08-02T11:13:12.731Z\",\n \"status\": -95848419,\n \"error\": \"proident\",\n \"exception\": \"ex\",\n \"message\": \"aliqua proident officia deserunt\",\n \"total_time_taken_in_millis\": 95038763,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed elit\",\n \"page\": {\n  \"type\": \"Duis eu reprehenderit Excepteur\",\n  \"size\": 97912120,\n  \"current\": -63017221,\n  \"has_next\": false,\n  \"item_total\": 85349339,\n  \"next_id\": \"est et officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2e6bcc80-73cf-42e8-ac42-cd35528a91fb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1994-08-02T11:13:12.731Z\",\n \"status\": -95848419,\n \"error\": \"proident\",\n \"exception\": \"ex\",\n \"message\": \"aliqua proident officia deserunt\",\n \"total_time_taken_in_millis\": 95038763,\n \"http_status\": \"409 CONFLICT\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"sed elit\",\n \"page\": {\n  \"type\": \"Duis eu reprehenderit Excepteur\",\n  \"size\": 97912120,\n  \"current\": -63017221,\n  \"has_next\": false,\n  \"item_total\": 85349339,\n  \"next_id\": \"est et officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "b1a071f5-447c-4665-af47-be458fe2ca03",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
