{
  "item": [
    {
      "id": "024886a4-2c36-4e6a-a6d7-82f7205dc25c",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "abad41c7-6fde-4dc4-bbba-044db5a5a441",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4d41bfe7-feb1-4e30-a5c4-9b6e83635444",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"dolore fugiat dolor occaecat\",\n        \"adipisicing consequat\"\n      ],\n      \"tags\": [\n        \"minim ut fugiat\",\n        \"anim\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"culpa quis do\",\n        \"voluptate aliquip mollit\"\n      ],\n      \"tags\": [\n        \"dolore dolore ut mollit\",\n        \"aute veniam adipisicing\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"anim exerci\",\n      \"quis esse anim\"\n    ],\n    \"tags\": [\n      \"ex consequat officia veniam\",\n      \"reprehenderit ex officia\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "c2388a8d-e6a2-44fc-982f-130cdbd005d5",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2b8e2f48-135d-4920-885c-6239cc883edc",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform",
                      "value": "mobile/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a8b848ec-f607-455b-9587-643d1a512cc4",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "37485ded-4a27-42be-b736-f8fef717e3e4",
          "name": "searchApplication | Search application",
          "request": {
            "name": "searchApplication | Search application",
            "description": {
              "content": "Provide application name or domain url.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6e8e27c7-df03-441b-a020-77a66003d9a7",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "do nisi laborum",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bb02c19c-9def-4bd5-ba68-5ca185011501",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "do nisi laborum",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "45539ff2-8328-42a6-b81d-d02d4df32efa",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "do nisi laborum",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b2a7930e-a250-4c08-bedb-77e3ed86837f",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6ed2b387-9ae7-4c8f-89aa-60bd79eecdcf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"tempor nisi\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"dolor deserunt\",\n      \"country_code\": \"pariatur\",\n      \"latitude\": \"consectetur fugiat in labore dolo\",\n      \"longitude\": \"commodo sint voluptate Lorem pariatur\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"culpa\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"non aliquip qui\",\n      \"country_code\": \"ullamco ut voluptate commodo quis\",\n      \"latitude\": \"labore nisi qui veniam tempor\",\n      \"longitude\": \"dolore adipisicing\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "63ab3d58-960d-4df0-b8e6-da84a0fe766c",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7a746883-4895-46c6-a94b-db7714730a42",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "(Required) Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e9e2eb10-3f06-450d-9f1f-01a4d237197f",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7be4b67b-2afc-4cde-9c1d-abd445b8cbfd",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "(Required) Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "59ee644f-0e9d-402d-9e74-4addb23669d0",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "03454f64-1cc3-4719-afa4-bc261086b4f8",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "17c6413e-2ecd-4d06-abd1-26f5342c2c93",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-02-28T10:31:52.419Z\",\n  \"status\": 58081750,\n  \"error\": \"qui cillum\",\n  \"exception\": \"sit dolo\",\n  \"message\": \"irure\",\n  \"total_time_taken_in_millis\": -43683942,\n  \"http_status\": \"428 PRECONDITION_REQUIRED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"voluptate ipsum mollit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "84c5b3b2-89f8-47ee-8bf0-ef7e74cebd84",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-02-28T10:31:52.419Z\",\n  \"status\": 58081750,\n  \"error\": \"qui cillum\",\n  \"exception\": \"sit dolo\",\n  \"message\": \"irure\",\n  \"total_time_taken_in_millis\": -43683942,\n  \"http_status\": \"428 PRECONDITION_REQUIRED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"voluptate ipsum mollit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b21a9f37-7280-4ecf-bc78-a063039913f4",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1999-02-28T10:31:52.419Z\",\n  \"status\": 58081750,\n  \"error\": \"qui cillum\",\n  \"exception\": \"sit dolo\",\n  \"message\": \"irure\",\n  \"total_time_taken_in_millis\": -43683942,\n  \"http_status\": \"428 PRECONDITION_REQUIRED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"voluptate ipsum mollit\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3e1703f2-adfa-4c37-b26c-fcf8fc207f6b",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "f7542c4a-03ce-4df7-abd2-e8f7bfd4b6d6",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1949-02-08T01:38:20.285Z\",\n  \"status\": -87326671,\n  \"error\": \"labore aliquip ullamco elit\",\n  \"exception\": \"nostrud\",\n  \"message\": \"ut consequat nulla commodo ex\",\n  \"total_time_taken_in_millis\": 75882925,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint quis\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "78269a4a-94d8-4d55-b5a6-eff14f7be8be",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1949-02-08T01:38:20.285Z\",\n  \"status\": -87326671,\n  \"error\": \"labore aliquip ullamco elit\",\n  \"exception\": \"nostrud\",\n  \"message\": \"ut consequat nulla commodo ex\",\n  \"total_time_taken_in_millis\": 75882925,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint quis\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d06da964-a6d6-4245-8961-53adeb4d0e00",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1949-02-08T01:38:20.285Z\",\n  \"status\": -87326671,\n  \"error\": \"labore aliquip ullamco elit\",\n  \"exception\": \"nostrud\",\n  \"message\": \"ut consequat nulla commodo ex\",\n  \"total_time_taken_in_millis\": 75882925,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint quis\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "35d0c9ff-7e8c-4326-be6d-fe8733f8a098",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1949-02-08T01:38:20.285Z\",\n  \"status\": -87326671,\n  \"error\": \"labore aliquip ullamco elit\",\n  \"exception\": \"nostrud\",\n  \"message\": \"ut consequat nulla commodo ex\",\n  \"total_time_taken_in_millis\": 75882925,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint quis\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1da7df23-3a6c-44d8-932e-185960615208",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1949-02-08T01:38:20.285Z\",\n  \"status\": -87326671,\n  \"error\": \"labore aliquip ullamco elit\",\n  \"exception\": \"nostrud\",\n  \"message\": \"ut consequat nulla commodo ex\",\n  \"total_time_taken_in_millis\": 75882925,\n  \"http_status\": \"102 PROCESSING\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"sint quis\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "641026db-4233-4437-b926-bada0b7e0843",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7e2478c7-0398-40fa-a2df-4e8a83c0a1c0",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-02-05T20:26:37.362Z\",\n  \"status\": -20159269,\n  \"error\": \"ullamco non\",\n  \"exception\": \"pariatur\",\n  \"message\": \"voluptate\",\n  \"total_time_taken_in_millis\": 2278487,\n  \"http_status\": \"412 PRECONDITION_FAILED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"eiusmod Ut\",\n      \"description\": \"nostrud anim fugiat\",\n      \"name\": \"minim incididunt dolor occaecat\",\n      \"slug\": \"occaecat dolor pariatur\",\n      \"meta\": [\n        {\n          \"_id\": \"irure\",\n          \"name\": \"laboris ullamco\",\n          \"value\": \"laborum et adipisicing anim\"\n        },\n        {\n          \"_id\": \"quis adipisicing in reprehenderit\",\n          \"name\": \"deserunt pariatur magna quis Ut\",\n          \"value\": \"laboris consectetur dolore dolor\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"quis Excepteur\",\n        \"integration\": \"deserunt occaecat in repreh\",\n        \"level\": \"laboris\",\n        \"uid\": -70131837,\n        \"opted\": false,\n        \"permissions\": [\n          \"in\",\n          \"incididunt adipisicing officia ut magna\"\n        ],\n        \"token\": \"nulla proident ex id commodo\",\n        \"name\": \"i\",\n        \"stores\": [\n          {\n            \"_id\": \"labore ipsum\",\n            \"integration\": \"ut sunt in minim\",\n            \"level\": \"laborum veniam nisi\",\n            \"uid\": -70584235,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident qui\",\n            \"code\": \"eiusmod nulla officia\",\n            \"name\": \"proid\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aute Duis\",\n            \"integration\": \"elit officia\",\n            \"level\": \"dolor do sit reprehenderit elit\",\n            \"uid\": 95165599,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore exercitation pariatur fugiat\",\n            \"code\": \"incididunt\",\n            \"name\": \"occaecat ea\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"esse cillum consectetur\",\n        \"integration\": \"est quis ea\",\n        \"level\": \"occaecat ut \",\n        \"uid\": -54048789,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip proident adipisicing mollit\",\n          \"exercitation est dolor\"\n        ],\n        \"token\": \"in aute voluptate cupidatat deserunt\",\n        \"name\": \"aliquip non aute enim\",\n        \"stores\": [\n          {\n            \"_id\": \"et ad\",\n            \"integration\": \"dolore proident id officia\",\n            \"level\": \"ea non cillum\",\n            \"uid\": 12045941,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu aute in dolor ea\",\n            \"code\": \"eu ex aliqua reprehenderit \",\n            \"name\": \"cillum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ad\",\n            \"integration\": \"culpa minim non cillum eu\",\n            \"level\": \"nisi culpa\",\n            \"uid\": 5359644,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur\",\n            \"code\": \"quis\",\n            \"name\": \"id eiusmod exercitation aliqua\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"non sit sint co\",\n      \"description\": \"in\",\n      \"name\": \"est irure anim\",\n      \"slug\": \"dolore magna qui\",\n      \"meta\": [\n        {\n          \"_id\": \"in quis et minim\",\n          \"name\": \"fugiat dolor\",\n          \"value\": \"ad commodo cillum mollit incididunt\"\n        },\n        {\n          \"_id\": \"in\",\n          \"name\": \"sunt ex consequat\",\n          \"value\": \"proident\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"culpa fugiat\",\n        \"integration\": \"et eu cupidatat\",\n        \"level\": \"ali\",\n        \"uid\": 3616862,\n        \"opted\": false,\n        \"permissions\": [\n          \"id in nostrud ullamco elit\",\n          \"consectetur ut\"\n        ],\n        \"token\": \"consequat fugiat non Lorem do\",\n        \"name\": \"do in\",\n        \"stores\": [\n          {\n            \"_id\": \"elit incididunt do et\",\n            \"integration\": \"ea magna proident\",\n            \"level\": \"magna esse aliqua aute adipisicing\",\n            \"uid\": 46790243,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in eu dolore sit do\",\n            \"code\": \"minim occaecat irure est\",\n            \"name\": \"occaecat Ut in\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolor Duis dolor\",\n            \"integration\": \"aliquip occaecat sed ad magna\",\n            \"level\": \"ullamco culpa dolore qui\",\n            \"uid\": -40451968,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat ut do esse\",\n            \"code\": \"nostrud\",\n            \"name\": \"officia reprehenderit aliquip\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"consequat minim enim eiusmod\",\n        \"integration\": \"enim nisi\",\n        \"level\": \"ea Ut exer\",\n        \"uid\": -23294379,\n        \"opted\": true,\n        \"permissions\": [\n          \"reprehenderit ea laborum\",\n          \"ullamco amet et do Ut\"\n        ],\n        \"token\": \"esse\",\n        \"name\": \"magna irure Lorem Excepteur\",\n        \"stores\": [\n          {\n            \"_id\": \"irure nost\",\n            \"integration\": \"in sed qui labore non\",\n            \"level\": \"enim nostrud\",\n            \"uid\": 11554649,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"commodo consequat\",\n            \"code\": \"in culpa\",\n            \"name\": \"proident est\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore reprehenderit proident\",\n            \"integration\": \"reprehenderit ex velit sit\",\n            \"level\": \"Ut cillum\",\n            \"uid\": -94791122,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"quis ut\",\n            \"code\": \"qui sed sint dolor officia\",\n            \"name\": \"deserunt minim eiusmod sunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"in sit ex\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b467a5fc-f102-4f2c-86ef-0270c2238f2d",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-01-03T21:33:29.452Z\",\n  \"status\": 40156538,\n  \"error\": \"ullamco\",\n  \"exception\": \"amet aliquip quis\",\n  \"message\": \"ullamco qui id laborum occaecat\",\n  \"total_time_taken_in_millis\": 35808989,\n  \"http_status\": \"304 NOT_MODIFIED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"dolor exercitation\",\n      \"description\": \"eu cillum ipsum veniam\",\n      \"name\": \"amet Lorem exercita\",\n      \"slug\": \"do eu in\",\n      \"meta\": [\n        {\n          \"_id\": \"dolor occaecat\",\n          \"name\": \"reprehenderit culpa aliqua\",\n          \"value\": \"ut velit pariatur elit\"\n        },\n        {\n          \"_id\": \"laborum\",\n          \"name\": \"exe\",\n          \"value\": \"consectetur exercitation sed\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in deserunt do minim culpa\",\n        \"integration\": \"nostrud exercitation in\",\n        \"level\": \"ad dolor proident laborum\",\n        \"uid\": -81061064,\n        \"opted\": false,\n        \"permissions\": [\n          \"sunt ullamco et\",\n          \"ipsum incididunt dolore\"\n        ],\n        \"token\": \"officia velit voluptate eu est\",\n        \"name\": \"labore in amet\",\n        \"stores\": [\n          {\n            \"_id\": \"ex\",\n            \"integration\": \"qui ea in\",\n            \"level\": \"do exercitation proident consequat quis\",\n            \"uid\": 57313055,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat sit qui Lorem cillum\",\n            \"code\": \"elit eiusmod ullamco exercitation\",\n            \"name\": \"ea nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"veniam sunt\",\n            \"integration\": \"laborum \",\n            \"level\": \"sunt culpa labore elit\",\n            \"uid\": 8836717,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu tempor irure adipisicin\",\n            \"code\": \"aute Ut\",\n            \"name\": \"sed ipsum iru\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"se\",\n        \"integration\": \"esse ex Excepteur labore\",\n        \"level\": \"esse laboris reprehenderit\",\n        \"uid\": -71256198,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupidatat Ut ad veniam\",\n          \"ipsum Excepteur amet magna\"\n        ],\n        \"token\": \"qui est cupidatat\",\n        \"name\": \"eu laboris ex\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore amet\",\n            \"integration\": \"eiusmod Excepteur deserunt\",\n            \"level\": \"mollit consequat veniam laboris\",\n            \"uid\": 68181095,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"est ut sint Excepteur\",\n            \"code\": \"cillum\",\n            \"name\": \"aliqua dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Excepteur consequat\",\n            \"integration\": \"do\",\n            \"level\": \"culpa consectetur ut laborum pariatur\",\n            \"uid\": -45935906,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse in deserunt\",\n            \"code\": \"est id tempor\",\n            \"name\": \"sed ut Duis est\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum id\",\n      \"description\": \"irure enim culpa\",\n      \"name\": \"velit deserunt qui sint\",\n      \"slug\": \"officia culpa nulla\",\n      \"meta\": [\n        {\n          \"_id\": \"culpa irure ipsum\",\n          \"name\": \"minim Duis amet est\",\n          \"value\": \"nisi sed ut\"\n        },\n        {\n          \"_id\": \"dolore mollit fugiat et\",\n          \"name\": \"elit pariatur amet\",\n          \"value\": \"Duis aliqua sit id officia\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aute ad cupidatat\",\n        \"integration\": \"sunt tempor in in\",\n        \"level\": \"minim incididunt nisi\",\n        \"uid\": 40008540,\n        \"opted\": true,\n        \"permissions\": [\n          \"labori\",\n          \"ea eu ullamco enim\"\n        ],\n        \"token\": \"adipisicing Lorem ut aute\",\n        \"name\": \"ullamco\",\n        \"stores\": [\n          {\n            \"_id\": \"in voluptate id ex\",\n            \"integration\": \"occaecat\",\n            \"level\": \"cillum commodo in Excepteur\",\n            \"uid\": -43740108,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in adipisicing\",\n            \"code\": \"laboris in\",\n            \"name\": \"dolore ex Lorem\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia non\",\n            \"integration\": \"non anim pariatur ullamco\",\n            \"level\": \"Duis nostrud adipisicing\",\n            \"uid\": -31978150,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut Excepteur\",\n            \"code\": \"pariatur ex\",\n            \"name\": \"exercitation dolor elit et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Duis\",\n        \"integration\": \"sunt\",\n        \"level\": \"irure sit amet\",\n        \"uid\": 56198292,\n        \"opted\": true,\n        \"permissions\": [\n          \"dolore aliqua et\",\n          \"\"\n        ],\n        \"token\": \"dolor exercitation ullamco\",\n        \"name\": \"cillum veniam sint fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"aliquip adipisicing fugiat\",\n            \"integration\": \"ex\",\n            \"level\": \"Ut in\",\n            \"uid\": 51134179,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut\",\n            \"code\": \"exercitati\",\n            \"name\": \"do culpa occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore sunt deserunt culpa dolore\",\n            \"integration\": \"ut ullamco dolor aliqua minim\",\n            \"level\": \"ex voluptate officia in\",\n            \"uid\": -33271530,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim amet\",\n            \"code\": \"sunt dolor ut\",\n            \"name\": \"ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ea\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bcc4117e-b0c0-44b8-a563-76755a99bf9b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1958-01-03T21:33:29.452Z\",\n  \"status\": 40156538,\n  \"error\": \"ullamco\",\n  \"exception\": \"amet aliquip quis\",\n  \"message\": \"ullamco qui id laborum occaecat\",\n  \"total_time_taken_in_millis\": 35808989,\n  \"http_status\": \"304 NOT_MODIFIED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"dolor exercitation\",\n      \"description\": \"eu cillum ipsum veniam\",\n      \"name\": \"amet Lorem exercita\",\n      \"slug\": \"do eu in\",\n      \"meta\": [\n        {\n          \"_id\": \"dolor occaecat\",\n          \"name\": \"reprehenderit culpa aliqua\",\n          \"value\": \"ut velit pariatur elit\"\n        },\n        {\n          \"_id\": \"laborum\",\n          \"name\": \"exe\",\n          \"value\": \"consectetur exercitation sed\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"in deserunt do minim culpa\",\n        \"integration\": \"nostrud exercitation in\",\n        \"level\": \"ad dolor proident laborum\",\n        \"uid\": -81061064,\n        \"opted\": false,\n        \"permissions\": [\n          \"sunt ullamco et\",\n          \"ipsum incididunt dolore\"\n        ],\n        \"token\": \"officia velit voluptate eu est\",\n        \"name\": \"labore in amet\",\n        \"stores\": [\n          {\n            \"_id\": \"ex\",\n            \"integration\": \"qui ea in\",\n            \"level\": \"do exercitation proident consequat quis\",\n            \"uid\": 57313055,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"occaecat sit qui Lorem cillum\",\n            \"code\": \"elit eiusmod ullamco exercitation\",\n            \"name\": \"ea nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"veniam sunt\",\n            \"integration\": \"laborum \",\n            \"level\": \"sunt culpa labore elit\",\n            \"uid\": 8836717,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"eu tempor irure adipisicin\",\n            \"code\": \"aute Ut\",\n            \"name\": \"sed ipsum iru\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"se\",\n        \"integration\": \"esse ex Excepteur labore\",\n        \"level\": \"esse laboris reprehenderit\",\n        \"uid\": -71256198,\n        \"opted\": false,\n        \"permissions\": [\n          \"cupidatat Ut ad veniam\",\n          \"ipsum Excepteur amet magna\"\n        ],\n        \"token\": \"qui est cupidatat\",\n        \"name\": \"eu laboris ex\",\n        \"stores\": [\n          {\n            \"_id\": \"dolore amet\",\n            \"integration\": \"eiusmod Excepteur deserunt\",\n            \"level\": \"mollit consequat veniam laboris\",\n            \"uid\": 68181095,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"est ut sint Excepteur\",\n            \"code\": \"cillum\",\n            \"name\": \"aliqua dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Excepteur consequat\",\n            \"integration\": \"do\",\n            \"level\": \"culpa consectetur ut laborum pariatur\",\n            \"uid\": -45935906,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"esse in deserunt\",\n            \"code\": \"est id tempor\",\n            \"name\": \"sed ut Duis est\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"cillum id\",\n      \"description\": \"irure enim culpa\",\n      \"name\": \"velit deserunt qui sint\",\n      \"slug\": \"officia culpa nulla\",\n      \"meta\": [\n        {\n          \"_id\": \"culpa irure ipsum\",\n          \"name\": \"minim Duis amet est\",\n          \"value\": \"nisi sed ut\"\n        },\n        {\n          \"_id\": \"dolore mollit fugiat et\",\n          \"name\": \"elit pariatur amet\",\n          \"value\": \"Duis aliqua sit id officia\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aute ad cupidatat\",\n        \"integration\": \"sunt tempor in in\",\n        \"level\": \"minim incididunt nisi\",\n        \"uid\": 40008540,\n        \"opted\": true,\n        \"permissions\": [\n          \"labori\",\n          \"ea eu ullamco enim\"\n        ],\n        \"token\": \"adipisicing Lorem ut aute\",\n        \"name\": \"ullamco\",\n        \"stores\": [\n          {\n            \"_id\": \"in voluptate id ex\",\n            \"integration\": \"occaecat\",\n            \"level\": \"cillum commodo in Excepteur\",\n            \"uid\": -43740108,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"in adipisicing\",\n            \"code\": \"laboris in\",\n            \"name\": \"dolore ex Lorem\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"officia non\",\n            \"integration\": \"non anim pariatur ullamco\",\n            \"level\": \"Duis nostrud adipisicing\",\n            \"uid\": -31978150,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut Excepteur\",\n            \"code\": \"pariatur ex\",\n            \"name\": \"exercitation dolor elit et\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"Duis\",\n        \"integration\": \"sunt\",\n        \"level\": \"irure sit amet\",\n        \"uid\": 56198292,\n        \"opted\": true,\n        \"permissions\": [\n          \"dolore aliqua et\",\n          \"\"\n        ],\n        \"token\": \"dolor exercitation ullamco\",\n        \"name\": \"cillum veniam sint fugiat\",\n        \"stores\": [\n          {\n            \"_id\": \"aliquip adipisicing fugiat\",\n            \"integration\": \"ex\",\n            \"level\": \"Ut in\",\n            \"uid\": 51134179,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Ut\",\n            \"code\": \"exercitati\",\n            \"name\": \"do culpa occaecat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"dolore sunt deserunt culpa dolore\",\n            \"integration\": \"ut ullamco dolor aliqua minim\",\n            \"level\": \"ex voluptate officia in\",\n            \"uid\": -33271530,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim amet\",\n            \"code\": \"sunt dolor ut\",\n            \"name\": \"ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"ea\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "41ca6c75-9cf2-47ee-98b8-1111cb992f59",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "51178de5-8bcb-4ac8-bc4d-1c4070bc50d9",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1962-02-07T07:22:53.515Z\",\n  \"status\": 15190356,\n  \"error\": \"cillum\",\n  \"exception\": \"reprehenderit\",\n  \"message\": \"in qui\",\n  \"total_time_taken_in_millis\": 20096249,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"veniam labore dolor in et\",\n    \"error_message\": \"consectetur dolore occaecat minim sed\"\n  },\n  \"payload\": {\n    \"session_id\": \"sed\",\n    \"error_message\": \"Excepteur in\"\n  },\n  \"trace_id\": \"nulla sit aliqua ullamco proident\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ab8dabbf-31f2-4ec1-bdef-e96b0f0b1274",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1962-02-07T07:22:53.515Z\",\n  \"status\": 15190356,\n  \"error\": \"cillum\",\n  \"exception\": \"reprehenderit\",\n  \"message\": \"in qui\",\n  \"total_time_taken_in_millis\": 20096249,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"veniam labore dolor in et\",\n    \"error_message\": \"consectetur dolore occaecat minim sed\"\n  },\n  \"payload\": {\n    \"session_id\": \"sed\",\n    \"error_message\": \"Excepteur in\"\n  },\n  \"trace_id\": \"nulla sit aliqua ullamco proident\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5127e438-7965-4f61-8e8e-258d87d9ce18",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1962-02-07T07:22:53.515Z\",\n  \"status\": 15190356,\n  \"error\": \"cillum\",\n  \"exception\": \"reprehenderit\",\n  \"message\": \"in qui\",\n  \"total_time_taken_in_millis\": 20096249,\n  \"http_status\": \"511 NETWORK_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"veniam labore dolor in et\",\n    \"error_message\": \"consectetur dolore occaecat minim sed\"\n  },\n  \"payload\": {\n    \"session_id\": \"sed\",\n    \"error_message\": \"Excepteur in\"\n  },\n  \"trace_id\": \"nulla sit aliqua ullamco proident\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0e63c93e-096c-45be-b42e-df8237b16670",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "784b679b-8acb-4f6f-b6da-dc2aca8a1d14",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1985-09-22T16:24:10.556Z\",\n  \"status\": 89523943,\n  \"error\": \"occaecat in aliquip Ut est\",\n  \"exception\": \"eiusmod \",\n  \"message\": \"laborum\",\n  \"total_time_taken_in_millis\": -36784631,\n  \"http_status\": \"429 TOO_MANY_REQUESTS\",\n  \"items\": {\n    \"company_id\": 59986518,\n    \"integration_data\": {\n      \"in8\": {},\n      \"cillum_ad\": {},\n      \"in8_1\": {}\n    },\n    \"company_name\": \"ut Lorem consectetur officia d\",\n    \"task_details\": {\n      \"type\": 819025,\n      \"group_list\": [\n        {\n          \"text\": \"Ut ut occaecat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"non\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -28958214.400990203,\n      \"safe_stock\": 44716368,\n      \"period_threshold\": -7975061,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eiusmod officia occaecat amet nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sit dolor\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"Duis id eiusmod non in\",\n    \"alias\": \"mollit veniam\"\n  },\n  \"payload\": {\n    \"company_id\": -17072125,\n    \"integration_data\": {\n      \"nostrud073\": {}\n    },\n    \"company_name\": \"minim est\",\n    \"task_details\": {\n      \"type\": 89229351,\n      \"group_list\": [\n        {\n          \"text\": \"ullamco esse\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut consectetur nulla cupidatat do\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 72005651.90533549,\n      \"safe_stock\": -67733391,\n      \"period_threshold\": -57596175,\n      \"period_threshold_type\": \"WEEKS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolore\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aute\",\n    \"alias\": \"ut eiusmod in\"\n  },\n  \"trace_id\": \"tempor in\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3c51c19c-1d36-41d9-b182-61eab1df70d7",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1961-11-12T00:51:31.822Z\",\n  \"status\": -92852824,\n  \"error\": \"in mollit est \",\n  \"exception\": \"magna id\",\n  \"message\": \"consequat ad Duis dolore\",\n  \"total_time_taken_in_millis\": 98498082,\n  \"http_status\": \"201 CREATED\",\n  \"items\": {\n    \"company_id\": 75889887,\n    \"integration_data\": {\n      \"enim67\": {},\n      \"veniama_\": {},\n      \"cillum39\": {}\n    },\n    \"company_name\": \"nostrud\",\n    \"task_details\": {\n      \"type\": 68303152,\n      \"group_list\": [\n        {\n          \"text\": \"id consectetur tempor\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"esse do in quis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -50678233.0189437,\n      \"safe_stock\": 3955121,\n      \"period_threshold\": -22647825,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eu\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt dolore aliquip sit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sit nisi consectetur\",\n    \"alias\": \"officia est\"\n  },\n  \"payload\": {\n    \"company_id\": 20704903,\n    \"integration_data\": {\n      \"dolor_a2\": {}\n    },\n    \"company_name\": \"dolore con\",\n    \"task_details\": {\n      \"type\": -48081335,\n      \"group_list\": [\n        {\n          \"text\": \"occaecat in Ut nos\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cupidatat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -8402768.56825985,\n      \"safe_stock\": -17673355,\n      \"period_threshold\": -25133463,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolor ex sit incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex reprehenderit proident\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in ex\",\n    \"alias\": \"laborum Ut sunt\"\n  },\n  \"trace_id\": \"nisi commodo velit ea\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f587f2cd-b603-4cf1-8c17-d8289fe269ec",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1961-11-12T00:51:31.822Z\",\n  \"status\": -92852824,\n  \"error\": \"in mollit est \",\n  \"exception\": \"magna id\",\n  \"message\": \"consequat ad Duis dolore\",\n  \"total_time_taken_in_millis\": 98498082,\n  \"http_status\": \"201 CREATED\",\n  \"items\": {\n    \"company_id\": 75889887,\n    \"integration_data\": {\n      \"enim67\": {},\n      \"veniama_\": {},\n      \"cillum39\": {}\n    },\n    \"company_name\": \"nostrud\",\n    \"task_details\": {\n      \"type\": 68303152,\n      \"group_list\": [\n        {\n          \"text\": \"id consectetur tempor\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"esse do in quis\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -50678233.0189437,\n      \"safe_stock\": 3955121,\n      \"period_threshold\": -22647825,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"eu\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt dolore aliquip sit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"sit nisi consectetur\",\n    \"alias\": \"officia est\"\n  },\n  \"payload\": {\n    \"company_id\": 20704903,\n    \"integration_data\": {\n      \"dolor_a2\": {}\n    },\n    \"company_name\": \"dolore con\",\n    \"task_details\": {\n      \"type\": -48081335,\n      \"group_list\": [\n        {\n          \"text\": \"occaecat in Ut nos\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cupidatat\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -8402768.56825985,\n      \"safe_stock\": -17673355,\n      \"period_threshold\": -25133463,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"dolor ex sit incididunt\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex reprehenderit proident\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"in ex\",\n    \"alias\": \"laborum Ut sunt\"\n  },\n  \"trace_id\": \"nisi commodo velit ea\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "259e52df-9658-47e7-b7b1-d426cbea5a8b",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a1be94ac-d09f-4799-993f-35363d142551",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2020-10-19T18:39:41.360Z\",\n  \"status\": -37788475,\n  \"error\": \"laborum ullamco\",\n  \"exception\": \"consectetur pariatur laborum\",\n  \"message\": \"tempor pr\",\n  \"total_time_taken_in_millis\": 65897645,\n  \"http_status\": \"415 UNSUPPORTED_MEDIA_TYPE\",\n  \"items\": [\n    {\n      \"company_id\": 63028409,\n      \"integration_data\": {\n        \"in_b\": {}\n      },\n      \"company_name\": \"eu velit sunt sit fugiat\",\n      \"task_details\": {\n        \"type\": 24733534,\n        \"group_list\": [\n          {\n            \"text\": \"pariatur in mollit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"quis est aliqua consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -78185402.52890904,\n        \"safe_stock\": 96444462,\n        \"period_threshold\": 86263540,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt ex cupidatat consectetur laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"pariatur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"dolor culpa\",\n      \"alias\": \"est culpa id\"\n    },\n    {\n      \"company_id\": 96680018,\n      \"integration_data\": {\n        \"ipsum_a\": {}\n      },\n      \"company_name\": \"minim dolore sint in\",\n      \"task_details\": {\n        \"type\": 98746172,\n        \"group_list\": [\n          {\n            \"text\": \"id eu sunt sed\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse amet Duis aute fugiat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -64754980.19939198,\n        \"safe_stock\": 59613713,\n        \"period_threshold\": 63914307,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nulla velit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"magna enim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis mollit veniam\",\n      \"alias\": \"\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -18227016,\n      \"integration_data\": {\n        \"Ut23_\": {},\n        \"Ut_8c1\": {}\n      },\n      \"company_name\": \"minim aute ut sunt tempor\",\n      \"task_details\": {\n        \"type\": -78807055,\n        \"group_list\": [\n          {\n            \"text\": \"in fugiat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"est esse\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 92850498.57003945,\n        \"safe_stock\": -34092682,\n        \"period_threshold\": 49055045,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"esse amet\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in culpa nulla veniam\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"et\",\n      \"alias\": \"nulla cupidatat\"\n    },\n    {\n      \"company_id\": 73891890,\n      \"integration_data\": {\n        \"deserunt6\": {},\n        \"minim__9\": {},\n        \"in9\": {}\n      },\n      \"company_name\": \"ut non occaecat\",\n      \"task_details\": {\n        \"type\": -95801373,\n        \"group_list\": [\n          {\n            \"text\": \"anim \",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation magna eiusmod labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 35187957.98461443,\n        \"safe_stock\": 22268219,\n        \"period_threshold\": -61367989,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolore velit reprehenderit sunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laboris cillum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"non veniam culpa elit\",\n      \"alias\": \"ut dolore aliquip Duis\"\n    }\n  ],\n  \"trace_id\": \"velit irure deserunt in do\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a41ad2de-f8cd-46f5-a714-d208e712043f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1981-09-29T07:37:15.629Z\",\n  \"status\": 86257121,\n  \"error\": \"tempor voluptate in\",\n  \"exception\": \"sunt irure\",\n  \"message\": \"in elit occaecat quis\",\n  \"total_time_taken_in_millis\": 17026667,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": [\n    {\n      \"company_id\": 62159071,\n      \"integration_data\": {\n        \"fugiat_9\": {},\n        \"dolor_f\": {}\n      },\n      \"company_name\": \"velit dolore dolor aliquip\",\n      \"task_details\": {\n        \"type\": -8653648,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur irure ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7083025.136040002,\n        \"safe_stock\": -12975444,\n        \"period_threshold\": -18154487,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"enim officia Except\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est esse\",\n      \"alias\": \"Excepteur quis cupidatat Lorem eu\"\n    },\n    {\n      \"company_id\": -50537389,\n      \"integration_data\": {\n        \"eiusmod_bf\": {},\n        \"enim_d0\": {}\n      },\n      \"company_name\": \"reprehenderit\",\n      \"task_details\": {\n        \"type\": 4446103,\n        \"group_list\": [\n          {\n            \"text\": \"dolore proident sint ad nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate cillum labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 15395747.829329222,\n        \"safe_stock\": 44327584,\n        \"period_threshold\": -11875825,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"do aliquip l\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur nulla ex amet laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"pariatur quis laboris mollit\",\n      \"alias\": \"adipisicing\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 76210143,\n      \"integration_data\": {\n        \"dolore13c\": {},\n        \"sunt_8a\": {},\n        \"velit3\": {}\n      },\n      \"company_name\": \"adipisicing incididunt irure\",\n      \"task_details\": {\n        \"type\": 8864127,\n        \"group_list\": [\n          {\n            \"text\": \"ve\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"moll\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 84873942.77188289,\n        \"safe_stock\": -29546456,\n        \"period_threshold\": 81987067,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt in irure consectetur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do amet eiusmod irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"eu aliquip ipsum consequat\",\n      \"alias\": \"ullamco tempor\"\n    },\n    {\n      \"company_id\": -37943455,\n      \"integration_data\": {\n        \"sit_91\": {},\n        \"anim9e2\": {},\n        \"do_92_\": {}\n      },\n      \"company_name\": \"occaecat laborum sunt\",\n      \"task_details\": {\n        \"type\": 4368518,\n        \"group_list\": [\n          {\n            \"text\": \"pariatur anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in esse ut \",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 67901722.57207602,\n        \"safe_stock\": 65371191,\n        \"period_threshold\": 80000475,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud aliquip commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"min\",\n      \"alias\": \"aliquip\"\n    }\n  ],\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f963c693-fb21-4c19-a049-bc74f88d9616",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1981-09-29T07:37:15.629Z\",\n  \"status\": 86257121,\n  \"error\": \"tempor voluptate in\",\n  \"exception\": \"sunt irure\",\n  \"message\": \"in elit occaecat quis\",\n  \"total_time_taken_in_millis\": 17026667,\n  \"http_status\": \"403 FORBIDDEN\",\n  \"items\": [\n    {\n      \"company_id\": 62159071,\n      \"integration_data\": {\n        \"fugiat_9\": {},\n        \"dolor_f\": {}\n      },\n      \"company_name\": \"velit dolore dolor aliquip\",\n      \"task_details\": {\n        \"type\": -8653648,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur irure ut\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolore consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 7083025.136040002,\n        \"safe_stock\": -12975444,\n        \"period_threshold\": -18154487,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"enim officia Except\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"est esse\",\n      \"alias\": \"Excepteur quis cupidatat Lorem eu\"\n    },\n    {\n      \"company_id\": -50537389,\n      \"integration_data\": {\n        \"eiusmod_bf\": {},\n        \"enim_d0\": {}\n      },\n      \"company_name\": \"reprehenderit\",\n      \"task_details\": {\n        \"type\": 4446103,\n        \"group_list\": [\n          {\n            \"text\": \"dolore proident sint ad nulla\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate cillum labore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 15395747.829329222,\n        \"safe_stock\": 44327584,\n        \"period_threshold\": -11875825,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"do aliquip l\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Excepteur nulla ex amet laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"pariatur quis laboris mollit\",\n      \"alias\": \"adipisicing\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 76210143,\n      \"integration_data\": {\n        \"dolore13c\": {},\n        \"sunt_8a\": {},\n        \"velit3\": {}\n      },\n      \"company_name\": \"adipisicing incididunt irure\",\n      \"task_details\": {\n        \"type\": 8864127,\n        \"group_list\": [\n          {\n            \"text\": \"ve\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"moll\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 84873942.77188289,\n        \"safe_stock\": -29546456,\n        \"period_threshold\": 81987067,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"sunt in irure consectetur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"do amet eiusmod irure\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"eu aliquip ipsum consequat\",\n      \"alias\": \"ullamco tempor\"\n    },\n    {\n      \"company_id\": -37943455,\n      \"integration_data\": {\n        \"sit_91\": {},\n        \"anim9e2\": {},\n        \"do_92_\": {}\n      },\n      \"company_name\": \"occaecat laborum sunt\",\n      \"task_details\": {\n        \"type\": 4368518,\n        \"group_list\": [\n          {\n            \"text\": \"pariatur anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"in esse ut \",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 67901722.57207602,\n        \"safe_stock\": 65371191,\n        \"period_threshold\": 80000475,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"nostrud aliquip commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"min\",\n      \"alias\": \"aliquip\"\n    }\n  ],\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"PageType\",\n    \"item_total\": 10,\n    \"next_id\": \"abc123\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": 1,\n    \"size\": 20\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7d1137a6-a8e5-47c5-9a6e-4ced69316a52",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7fa828ab-b2b2-4629-a3b3-a00396c9df44",
          "name": "getPanelExtensionDetails | Get panel extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get panel extension details",
            "description": {
              "content": "Retrieve detailed information about panel extensions in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "8c3fea95-e4a4-4e53-a571-34c28d7eb017",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "550970cc-f47e-4d04-b57b-2b94240d108e",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "129044c3-0ee0-4701-9d2a-766d25b4f1c0",
          "name": "fetchAllWebhookEvents | Fetch all webhook events",
          "request": {
            "name": "fetchAllWebhookEvents | Fetch all webhook events",
            "description": {
              "content": "Retrieve a list of all webhook events in the public server setup.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "780b44d9-5eec-4bf2-8953-2b04f79c8367",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bec81bbf-90c9-4952-8cbd-9b60643c47d5",
          "name": "queryWebhookEventDetails | Query webhook event details",
          "request": {
            "name": "queryWebhookEventDetails | Query webhook event details",
            "description": {
              "content": "Query and obtain detailed information about webhook events in the public server configurations.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "dea8cad5-bfe6-40b2-a988-f37349c53fb3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8d09c5b9-05ac-4448-ac57-54e214f74755",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "fc5350fe-032a-481d-a0b7-e75933d2041b",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "66d1bd22-0d65-4ead-9b91-9c3a18044fac",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"consectetur_069\": \"fugiat dolor consequat sint\",\n      \"veniamc9\": -22910926\n    },\n    \"meta\": {\n      \"mollite1d\": -85011080\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "345b3753-944e-48e5-b10b-8acd5ad1cacf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "40052bcb-a3ab-495f-b292-7b1357cd2739",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"incididunt_9\": -10633292\n    },\n    \"meta\": {\n      \"elitffc\": false,\n      \"in_dba\": \"nisi dolore\"\n    }\n  },\n  \"event_schema\": {\n    \"laborum_1d\": false,\n    \"cupidatat_2\": -90176055,\n    \"culpa4c\": -30034206\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "cbf586f6-f1b6-413c-98db-d337ee1c0325",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450Z\",\n        \"modified_on\": \"2023-10-24T01:41:44.450Z\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "a77f13f4-0cdc-44d8-9f0e-028353bfdf50",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
