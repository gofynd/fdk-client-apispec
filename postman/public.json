{
  "item": [
    {
      "id": "05fdd169-76b9-4b48-ace4-fe92bdbe79ea",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e3d5eebd-6590-4abd-9861-c03d74458ac8",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "44cf47ed-bb48-4c6b-84cc-5f8fbfc4b063",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi velit minim officia",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a45cb4d4-790b-4046-bb79-75f4932f0b65",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi velit minim officia",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "91589694-e1d6-4886-b453-523609ca73f8",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "nisi velit minim officia",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ada98bb8-f34e-4767-bca4-a4f8fb74c02a",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ad3155c1-23c6-4135-be65-26ad23f25628",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4e1f812f-be7f-4161-a823-5babd31843d2",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0c98c624-4ff7-47bb-a79e-1de644592bc4",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e8f5ba46-9cee-47cc-be66-01afdf6ec45d",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-10-29T23:13:49.579Z\",\n  \"status\": 46268853,\n  \"error\": \"commodo officia ullamco\",\n  \"exception\": \"deserunt mollit aliqua ut\",\n  \"message\": \"magna anim voluptate deserunt amet\",\n  \"total_time_taken_in_millis\": -37308553,\n  \"http_status\": \"307 TEMPORARY_REDIRECT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"id reprehenderit tempor\",\n  \"page\": {\n    \"type\": \"cillum aute\",\n    \"item_total\": 12069372,\n    \"next_id\": \"eiusmod consectetur aliquip enim\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 69712493,\n    \"size\": 67734835\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9bfda864-a679-4f51-b6bc-f000ba8a5e6f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-10-29T23:13:49.579Z\",\n  \"status\": 46268853,\n  \"error\": \"commodo officia ullamco\",\n  \"exception\": \"deserunt mollit aliqua ut\",\n  \"message\": \"magna anim voluptate deserunt amet\",\n  \"total_time_taken_in_millis\": -37308553,\n  \"http_status\": \"307 TEMPORARY_REDIRECT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"id reprehenderit tempor\",\n  \"page\": {\n    \"type\": \"cillum aute\",\n    \"item_total\": 12069372,\n    \"next_id\": \"eiusmod consectetur aliquip enim\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 69712493,\n    \"size\": 67734835\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "facae4f6-411b-41b9-b7ad-bffd3fb5d861",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-10-29T23:13:49.579Z\",\n  \"status\": 46268853,\n  \"error\": \"commodo officia ullamco\",\n  \"exception\": \"deserunt mollit aliqua ut\",\n  \"message\": \"magna anim voluptate deserunt amet\",\n  \"total_time_taken_in_millis\": -37308553,\n  \"http_status\": \"307 TEMPORARY_REDIRECT\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"id reprehenderit tempor\",\n  \"page\": {\n    \"type\": \"cillum aute\",\n    \"item_total\": 12069372,\n    \"next_id\": \"eiusmod consectetur aliquip enim\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": 69712493,\n    \"size\": 67734835\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "dc6488c6-3ae5-4488-9ab9-1301d54e8c07",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "d053f353-f7c0-4df6-a080-45d46a870790",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-12-22T15:18:54.960Z\",\n  \"status\": 61741578,\n  \"error\": \"Ut culpa deserunt\",\n  \"exception\": \"adipisicing \",\n  \"message\": \"consequat dolor aute\",\n  \"total_time_taken_in_millis\": -11036570,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"culpa quis\",\n  \"page\": {\n    \"type\": \"occaecat\",\n    \"item_total\": 56042945,\n    \"next_id\": \"nisi ullamco aute culpa\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -58473076,\n    \"size\": -85986279\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "01759a5e-4700-4965-9dcc-2f58481192b9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-12-22T15:18:54.960Z\",\n  \"status\": 61741578,\n  \"error\": \"Ut culpa deserunt\",\n  \"exception\": \"adipisicing \",\n  \"message\": \"consequat dolor aute\",\n  \"total_time_taken_in_millis\": -11036570,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"culpa quis\",\n  \"page\": {\n    \"type\": \"occaecat\",\n    \"item_total\": 56042945,\n    \"next_id\": \"nisi ullamco aute culpa\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -58473076,\n    \"size\": -85986279\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d04e24be-b0ed-4dba-b7b0-0e1e57943eb6",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-12-22T15:18:54.960Z\",\n  \"status\": 61741578,\n  \"error\": \"Ut culpa deserunt\",\n  \"exception\": \"adipisicing \",\n  \"message\": \"consequat dolor aute\",\n  \"total_time_taken_in_millis\": -11036570,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"culpa quis\",\n  \"page\": {\n    \"type\": \"occaecat\",\n    \"item_total\": 56042945,\n    \"next_id\": \"nisi ullamco aute culpa\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -58473076,\n    \"size\": -85986279\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bbc6a2d7-c459-4737-9a74-66104f7b1454",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-12-22T15:18:54.960Z\",\n  \"status\": 61741578,\n  \"error\": \"Ut culpa deserunt\",\n  \"exception\": \"adipisicing \",\n  \"message\": \"consequat dolor aute\",\n  \"total_time_taken_in_millis\": -11036570,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"culpa quis\",\n  \"page\": {\n    \"type\": \"occaecat\",\n    \"item_total\": 56042945,\n    \"next_id\": \"nisi ullamco aute culpa\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -58473076,\n    \"size\": -85986279\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "09659db0-a9bf-4677-9753-d4066cd44bda",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1984-12-22T15:18:54.960Z\",\n  \"status\": 61741578,\n  \"error\": \"Ut culpa deserunt\",\n  \"exception\": \"adipisicing \",\n  \"message\": \"consequat dolor aute\",\n  \"total_time_taken_in_millis\": -11036570,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"culpa quis\",\n  \"page\": {\n    \"type\": \"occaecat\",\n    \"item_total\": 56042945,\n    \"next_id\": \"nisi ullamco aute culpa\",\n    \"has_previous\": true,\n    \"has_next\": true,\n    \"current\": -58473076,\n    \"size\": -85986279\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f5105649-9de9-46c5-bdd6-a98d24bd0c08",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "0db4460f-211b-4fdc-9e60-f614dd634259",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1983-01-03T07:17:52.403Z\",\n  \"status\": 514217,\n  \"error\": \"reprehenderit quis\",\n  \"exception\": \"ut laborum culpa consectetur\",\n  \"message\": \"non consequat dolore\",\n  \"total_time_taken_in_millis\": -25580127,\n  \"http_status\": \"508 LOOP_DETECTED\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"exercitation esse qui ad est\",\n      \"description\": \"commodo adipisicing\",\n      \"name\": \"aliquip deserunt elit\",\n      \"slug\": \"amet veniam in\",\n      \"meta\": [\n        {\n          \"_id\": \"ea irure ex est id\",\n          \"name\": \"veniam consectetur\",\n          \"value\": \"commodo\"\n        },\n        {\n          \"_id\": \"cillum\",\n          \"name\": \"consectetur\",\n          \"value\": \"ea ullamco\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"irure dolore nisi nulla occaecat\",\n        \"integration\": \"consec\",\n        \"level\": \"incididunt id\",\n        \"uid\": 32665004,\n        \"opted\": true,\n        \"permissions\": [\n          \"quis adipisicing ex Lorem\",\n          \"in id voluptate\"\n        ],\n        \"token\": \"sunt incididunt\",\n        \"name\": \"sint elit\",\n        \"stores\": [\n          {\n            \"_id\": \"eiusmod laboru\",\n            \"integration\": \"do ut proident i\",\n            \"level\": \"anim ea\",\n            \"uid\": 59231454,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris anim\",\n            \"code\": \"eu do\",\n            \"name\": \"nostrud reprehenderit ipsum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"eu proident Excepteur aliqua\",\n            \"integration\": \"in officia dolor\",\n            \"level\": \"in sunt incididunt \",\n            \"uid\": -31082158,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"sit adipisicing et\",\n            \"code\": \"commodo eu cillum adipisicing aliqua\",\n            \"name\": \"culpa ipsum ex\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"aliqua\",\n        \"integration\": \"ipsum culpa incididunt\",\n        \"level\": \"anim in culpa deserunt amet\",\n        \"uid\": 48261060,\n        \"opted\": false,\n        \"permissions\": [\n          \"veniam nisi\",\n          \"reprehenderit Exce\"\n        ],\n        \"token\": \"et commodo\",\n        \"name\": \"nisi\",\n        \"stores\": [\n          {\n            \"_id\": \"ipsum\",\n            \"integration\": \"fugiat cillum eu\",\n            \"level\": \"sed et est\",\n            \"uid\": -31335585,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut Excepteur anim culpa deserunt\",\n            \"code\": \"dolore est dolore labore\",\n            \"name\": \"reprehenderit tempor amet fug\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Lorem qui\",\n            \"integration\": \"ut\",\n            \"level\": \"in\",\n            \"uid\": -27464910,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ex sint eiusmod minim\",\n            \"code\": \"cillum dolore fugiat velit cupidatat\",\n            \"name\": \"ut sint\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"dolore ex\",\n      \"description\": \"Excepteur eiusmod adipisicing\",\n      \"name\": \"cupidatat in sunt\",\n      \"slug\": \"reprehenderit amet nisi\",\n      \"meta\": [\n        {\n          \"_id\": \"aliquip in voluptate veniam cupida\",\n          \"name\": \"ad ex\",\n          \"value\": \"aliquip veniam\"\n        },\n        {\n          \"_id\": \"ullamco culpa\",\n          \"name\": \"dolor in sunt\",\n          \"value\": \"ut aute in\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"et quis eiusmod\",\n        \"integration\": \"cupidatat\",\n        \"level\": \"amet pariatur\",\n        \"uid\": 79850259,\n        \"opted\": false,\n        \"permissions\": [\n          \"Ut elit anim\",\n          \"aute al\"\n        ],\n        \"token\": \"est ullamco adipisicing laboris sed\",\n        \"name\": \"dolore culpa Lorem ull\",\n        \"stores\": [\n          {\n            \"_id\": \"dolor cillum consequat laboris\",\n            \"integration\": \"incididunt ullamco\",\n            \"level\": \"temp\",\n            \"uid\": 37821477,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore eu\",\n            \"code\": \"adipisicing anim tempor voluptate\",\n            \"name\": \"dolor labore\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Ut dolore sint aliqua\",\n            \"integration\": \"consectetur dolor\",\n            \"level\": \"dolore occaecat amet\",\n            \"uid\": -93015773,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"proident do laboris aliqua\",\n            \"code\": \"tempor non amet fugiat\",\n            \"name\": \"adipisicing velit eu aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ullamco e\",\n        \"integration\": \"ut mollit proident culpa \",\n        \"level\": \"incididunt minim do\",\n        \"uid\": -78101088,\n        \"opted\": true,\n        \"permissions\": [\n          \"ut deserunt\",\n          \"dolor officia sunt\"\n        ],\n        \"token\": \"proident Excepteur\",\n        \"name\": \"quis Ut cupidatat incididunt\",\n        \"stores\": [\n          {\n            \"_id\": \"eu non dolor id\",\n            \"integration\": \"minim non ex\",\n            \"level\": \"consequat dolor proident\",\n            \"uid\": 28259632,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"officia sint Duis\",\n            \"code\": \"officia enim in adipisicing sed\",\n            \"name\": \"tempor est\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"fugiat sint magna mollit\",\n            \"integration\": \"dolor\",\n            \"level\": \"in nisi anim\",\n            \"uid\": 85126083,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"et eu esse enim\",\n            \"code\": \"reprehenderit\",\n            \"name\": \"anim ea quis incididunt\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"cupidatat in\",\n  \"page\": {\n    \"type\": \"do adipisicing laboris aute\",\n    \"item_total\": -93554136,\n    \"next_id\": \"pariatur sunt\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 86453987,\n    \"size\": -3717736\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42710d1d-5a1b-40cc-8783-8f7a9a810d1c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-06-14T19:56:50.036Z\",\n  \"status\": 42084967,\n  \"error\": \"Ut\",\n  \"exception\": \"sint aute\",\n  \"message\": \"sed deserunt in\",\n  \"total_time_taken_in_millis\": -73893722,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"voluptate reprehenderit enim occaecat\",\n      \"description\": \"Lorem\",\n      \"name\": \"ea laboris\",\n      \"slug\": \"veniam magna\",\n      \"meta\": [\n        {\n          \"_id\": \"sint proident\",\n          \"name\": \"enim deserunt\",\n          \"value\": \"amet do dolore in veniam\"\n        },\n        {\n          \"_id\": \"esse non eu\",\n          \"name\": \"consequat nostrud Duis non ex\",\n          \"value\": \"ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"elit deserunt est nostrud\",\n        \"integration\": \"esse\",\n        \"level\": \"reprehenderit sint consectetur velit\",\n        \"uid\": -60804356,\n        \"opted\": true,\n        \"permissions\": [\n          \"laboris commodo et veniam\",\n          \"amet sit esse nulla ad\"\n        ],\n        \"token\": \"sunt irure\",\n        \"name\": \"eu\",\n        \"stores\": [\n          {\n            \"_id\": \"Lorem sit reprehenderit commodo\",\n            \"integration\": \"amet nulla nisi occaecat ut\",\n            \"level\": \"in\",\n            \"uid\": 89427467,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consectetur tempor in\",\n            \"code\": \"fugiat ut\",\n            \"name\": \"deserunt Lorem\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Lorem adipisicing magna laborum\",\n            \"integration\": \"ea est ut et\",\n            \"level\": \"et qui velit sed\",\n            \"uid\": -50988118,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"non occaecat\",\n            \"code\": \"qui esse deserunt voluptate veniam\",\n            \"name\": \"consequat irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad esse consectetur aliquip\",\n        \"integration\": \"adipisicing sint\",\n        \"level\": \"ut\",\n        \"uid\": -55478047,\n        \"opted\": true,\n        \"permissions\": [\n          \"veni\",\n          \"eiusmod ea\"\n        ],\n        \"token\": \"veniam est aliquip reprehenderit\",\n        \"name\": \"ut id\",\n        \"stores\": [\n          {\n            \"_id\": \"ut ad\",\n            \"integration\": \"est voluptate\",\n            \"level\": \"labore commodo elit fugiat\",\n            \"uid\": -74244692,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"tempor ut\",\n            \"code\": \"incididunt\",\n            \"name\": \"enim p\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliquip in qui commodo\",\n            \"integration\": \"minim in cupidatat\",\n            \"level\": \"sunt reprehenderit\",\n            \"uid\": -97603905,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"qui commodo id\",\n            \"code\": \"mollit magna\",\n            \"name\": \"aliqua ea proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ut fugiat pariatur\",\n      \"description\": \"mollit exercitation sunt magna\",\n      \"name\": \"commodo laboris eiusmod consequat\",\n      \"slug\": \"magna exercitation cupidatat\",\n      \"meta\": [\n        {\n          \"_id\": \"pariatur sit culpa\",\n          \"name\": \"qui mollit\",\n          \"value\": \"est quis voluptate\"\n        },\n        {\n          \"_id\": \"deserunt occae\",\n          \"name\": \"dolor anim ad dol\",\n          \"value\": \"ipsum ut quis nostrud\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Ut in laboris in\",\n        \"integration\": \"et \",\n        \"level\": \"labore et\",\n        \"uid\": -51604294,\n        \"opted\": true,\n        \"permissions\": [\n          \"eu sint\",\n          \"esse dolor nulla incididunt\"\n        ],\n        \"token\": \"qui mollit culpa\",\n        \"name\": \"velit officia\",\n        \"stores\": [\n          {\n            \"_id\": \"qui aliqui\",\n            \"integration\": \"nisi mollit\",\n            \"level\": \"nostrud sunt esse\",\n            \"uid\": -73693331,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum veniam nulla ut non\",\n            \"code\": \"Lorem ex quis\",\n            \"name\": \"reprehenderit moll\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sed est Lorem quis nisi\",\n            \"integration\": \"ipsum occaecat exercitation dolore\",\n            \"level\": \"sed in sint\",\n            \"uid\": -59515657,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua do est velit\",\n            \"code\": \"ea ut laborum occaecat et\",\n            \"name\": \"aliquip aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor dolore qui do\",\n        \"integration\": \"voluptate aliqua\",\n        \"level\": \"voluptate\",\n        \"uid\": -89904479,\n        \"opted\": false,\n        \"permissions\": [\n          \"nostru\",\n          \"ad\"\n        ],\n        \"token\": \"cupidatat mollit dolor eu laboris\",\n        \"name\": \"quis\",\n        \"stores\": [\n          {\n            \"_id\": \"ame\",\n            \"integration\": \"mollit\",\n            \"level\": \"veniam velit deserunt\",\n            \"uid\": -13566829,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliquip dolor\",\n            \"code\": \"dolor id do\",\n            \"name\": \"non\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aute et amet\",\n            \"integration\": \"amet D\",\n            \"level\": \"dolor eiusmod sint amet\",\n            \"uid\": -25649501,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur irure nostrud ea\",\n            \"code\": \"consequat anim magna\",\n            \"name\": \"sunt in esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"commodo\",\n  \"page\": {\n    \"type\": \"reprehenderit deserunt ut\",\n    \"item_total\": 98992702,\n    \"next_id\": \"ad quis aliqua\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -89049393,\n    \"size\": -49450101\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ba8f5d75-d489-42b3-a3bc-f6d414416092",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1957-06-14T19:56:50.036Z\",\n  \"status\": 42084967,\n  \"error\": \"Ut\",\n  \"exception\": \"sint aute\",\n  \"message\": \"sed deserunt in\",\n  \"total_time_taken_in_millis\": -73893722,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"voluptate reprehenderit enim occaecat\",\n      \"description\": \"Lorem\",\n      \"name\": \"ea laboris\",\n      \"slug\": \"veniam magna\",\n      \"meta\": [\n        {\n          \"_id\": \"sint proident\",\n          \"name\": \"enim deserunt\",\n          \"value\": \"amet do dolore in veniam\"\n        },\n        {\n          \"_id\": \"esse non eu\",\n          \"name\": \"consequat nostrud Duis non ex\",\n          \"value\": \"ut\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"elit deserunt est nostrud\",\n        \"integration\": \"esse\",\n        \"level\": \"reprehenderit sint consectetur velit\",\n        \"uid\": -60804356,\n        \"opted\": true,\n        \"permissions\": [\n          \"laboris commodo et veniam\",\n          \"amet sit esse nulla ad\"\n        ],\n        \"token\": \"sunt irure\",\n        \"name\": \"eu\",\n        \"stores\": [\n          {\n            \"_id\": \"Lorem sit reprehenderit commodo\",\n            \"integration\": \"amet nulla nisi occaecat ut\",\n            \"level\": \"in\",\n            \"uid\": 89427467,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consectetur tempor in\",\n            \"code\": \"fugiat ut\",\n            \"name\": \"deserunt Lorem\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"Lorem adipisicing magna laborum\",\n            \"integration\": \"ea est ut et\",\n            \"level\": \"et qui velit sed\",\n            \"uid\": -50988118,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"non occaecat\",\n            \"code\": \"qui esse deserunt voluptate veniam\",\n            \"name\": \"consequat irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad esse consectetur aliquip\",\n        \"integration\": \"adipisicing sint\",\n        \"level\": \"ut\",\n        \"uid\": -55478047,\n        \"opted\": true,\n        \"permissions\": [\n          \"veni\",\n          \"eiusmod ea\"\n        ],\n        \"token\": \"veniam est aliquip reprehenderit\",\n        \"name\": \"ut id\",\n        \"stores\": [\n          {\n            \"_id\": \"ut ad\",\n            \"integration\": \"est voluptate\",\n            \"level\": \"labore commodo elit fugiat\",\n            \"uid\": -74244692,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"tempor ut\",\n            \"code\": \"incididunt\",\n            \"name\": \"enim p\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliquip in qui commodo\",\n            \"integration\": \"minim in cupidatat\",\n            \"level\": \"sunt reprehenderit\",\n            \"uid\": -97603905,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"qui commodo id\",\n            \"code\": \"mollit magna\",\n            \"name\": \"aliqua ea proident\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"ut fugiat pariatur\",\n      \"description\": \"mollit exercitation sunt magna\",\n      \"name\": \"commodo laboris eiusmod consequat\",\n      \"slug\": \"magna exercitation cupidatat\",\n      \"meta\": [\n        {\n          \"_id\": \"pariatur sit culpa\",\n          \"name\": \"qui mollit\",\n          \"value\": \"est quis voluptate\"\n        },\n        {\n          \"_id\": \"deserunt occae\",\n          \"name\": \"dolor anim ad dol\",\n          \"value\": \"ipsum ut quis nostrud\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"Ut in laboris in\",\n        \"integration\": \"et \",\n        \"level\": \"labore et\",\n        \"uid\": -51604294,\n        \"opted\": true,\n        \"permissions\": [\n          \"eu sint\",\n          \"esse dolor nulla incididunt\"\n        ],\n        \"token\": \"qui mollit culpa\",\n        \"name\": \"velit officia\",\n        \"stores\": [\n          {\n            \"_id\": \"qui aliqui\",\n            \"integration\": \"nisi mollit\",\n            \"level\": \"nostrud sunt esse\",\n            \"uid\": -73693331,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ipsum veniam nulla ut non\",\n            \"code\": \"Lorem ex quis\",\n            \"name\": \"reprehenderit moll\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"sed est Lorem quis nisi\",\n            \"integration\": \"ipsum occaecat exercitation dolore\",\n            \"level\": \"sed in sint\",\n            \"uid\": -59515657,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua do est velit\",\n            \"code\": \"ea ut laborum occaecat et\",\n            \"name\": \"aliquip aute\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"dolor dolore qui do\",\n        \"integration\": \"voluptate aliqua\",\n        \"level\": \"voluptate\",\n        \"uid\": -89904479,\n        \"opted\": false,\n        \"permissions\": [\n          \"nostru\",\n          \"ad\"\n        ],\n        \"token\": \"cupidatat mollit dolor eu laboris\",\n        \"name\": \"quis\",\n        \"stores\": [\n          {\n            \"_id\": \"ame\",\n            \"integration\": \"mollit\",\n            \"level\": \"veniam velit deserunt\",\n            \"uid\": -13566829,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliquip dolor\",\n            \"code\": \"dolor id do\",\n            \"name\": \"non\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aute et amet\",\n            \"integration\": \"amet D\",\n            \"level\": \"dolor eiusmod sint amet\",\n            \"uid\": -25649501,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"pariatur irure nostrud ea\",\n            \"code\": \"consequat anim magna\",\n            \"name\": \"sunt in esse\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"commodo\",\n  \"page\": {\n    \"type\": \"reprehenderit deserunt ut\",\n    \"item_total\": 98992702,\n    \"next_id\": \"ad quis aliqua\",\n    \"has_previous\": true,\n    \"has_next\": false,\n    \"current\": -89049393,\n    \"size\": -49450101\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "589bba55-725d-4e30-a920-a5682cc17172",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c1b534a3-b395-43e7-a78c-5941eeaf2c5e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-11-25T22:19:48.772Z\",\n  \"status\": 83807352,\n  \"error\": \"proident sed exercitation\",\n  \"exception\": \"velit fugiat\",\n  \"message\": \"do\",\n  \"total_time_taken_in_millis\": -55356273,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"Ut pariatur consequat ut\",\n    \"error_message\": \"dolor\"\n  },\n  \"payload\": {\n    \"session_id\": \"pariatur magna fugiat qui\",\n    \"error_message\": \"occaecat Ut Excepteur officia do\"\n  },\n  \"trace_id\": \"adipisicing magna velit\",\n  \"page\": {\n    \"type\": \"ullamco dolor pariatur\",\n    \"item_total\": 22391025,\n    \"next_id\": \"laborum sed\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -10451947,\n    \"size\": -85825300\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5479d8c0-4aed-42e2-a5a7-9b2b7201f505",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-11-25T22:19:48.772Z\",\n  \"status\": 83807352,\n  \"error\": \"proident sed exercitation\",\n  \"exception\": \"velit fugiat\",\n  \"message\": \"do\",\n  \"total_time_taken_in_millis\": -55356273,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"Ut pariatur consequat ut\",\n    \"error_message\": \"dolor\"\n  },\n  \"payload\": {\n    \"session_id\": \"pariatur magna fugiat qui\",\n    \"error_message\": \"occaecat Ut Excepteur officia do\"\n  },\n  \"trace_id\": \"adipisicing magna velit\",\n  \"page\": {\n    \"type\": \"ullamco dolor pariatur\",\n    \"item_total\": 22391025,\n    \"next_id\": \"laborum sed\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -10451947,\n    \"size\": -85825300\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3e36deb5-c9e1-46f4-9ca5-5bf9db5a4d26",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1945-11-25T22:19:48.772Z\",\n  \"status\": 83807352,\n  \"error\": \"proident sed exercitation\",\n  \"exception\": \"velit fugiat\",\n  \"message\": \"do\",\n  \"total_time_taken_in_millis\": -55356273,\n  \"http_status\": \"426 UPGRADE_REQUIRED\",\n  \"items\": {\n    \"session_id\": \"Ut pariatur consequat ut\",\n    \"error_message\": \"dolor\"\n  },\n  \"payload\": {\n    \"session_id\": \"pariatur magna fugiat qui\",\n    \"error_message\": \"occaecat Ut Excepteur officia do\"\n  },\n  \"trace_id\": \"adipisicing magna velit\",\n  \"page\": {\n    \"type\": \"ullamco dolor pariatur\",\n    \"item_total\": 22391025,\n    \"next_id\": \"laborum sed\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": -10451947,\n    \"size\": -85825300\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "87e7e620-75b3-45cf-8daf-e94aac31f686",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "2b0b45be-6555-44fe-830f-80a3b996e742",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1977-01-07T12:17:17.886Z\",\n  \"status\": -77285969,\n  \"error\": \"et nulla\",\n  \"exception\": \"in in pariatur\",\n  \"message\": \"in Lorem deserunt\",\n  \"total_time_taken_in_millis\": -7029521,\n  \"http_status\": \"412 PRECONDITION_FAILED\",\n  \"items\": {\n    \"company_id\": 5168132,\n    \"integration_data\": {\n      \"culpaf6\": {},\n      \"ipsum__86\": {}\n    },\n    \"company_name\": \"id sint\",\n    \"task_details\": {\n      \"type\": 32508808,\n      \"group_list\": [\n        {\n          \"text\": \"pariatur elit est Duis\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"proident consectetur culpa\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -16693562.488812923,\n      \"safe_stock\": -26516888,\n      \"period_threshold\": 84752947,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"culpa in consequat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ea\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"et quis cupidatat laboris officia\",\n    \"alias\": \"do officia\"\n  },\n  \"payload\": {\n    \"company_id\": -8533757,\n    \"integration_data\": {\n      \"eiusmod_f\": {}\n    },\n    \"company_name\": \"consequat et ut\",\n    \"task_details\": {\n      \"type\": 59692164,\n      \"group_list\": [\n        {\n          \"text\": \"elit aliquip\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"tempor laboris proident\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 78489336.1024026,\n      \"safe_stock\": 72054639,\n      \"period_threshold\": 79020674,\n      \"period_threshold_type\": \"HOURS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"ea consectetur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"dolore\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aliquip culpa\",\n    \"alias\": \"cupidatat culpa consequat minim\"\n  },\n  \"trace_id\": \"in nostrud\",\n  \"page\": {\n    \"type\": \"ipsum aute ut qui\",\n    \"item_total\": -47485825,\n    \"next_id\": \"nulla enim in laboris\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": 59040847,\n    \"size\": 11792507\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2693a9f8-0d5e-407c-a8d0-7dbb2876ff87",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-02-13T09:38:12.245Z\",\n  \"status\": 6862707,\n  \"error\": \"dolore ipsum pariatur\",\n  \"exception\": \"sit aliquip\",\n  \"message\": \"et\",\n  \"total_time_taken_in_millis\": 46945465,\n  \"http_status\": \"406 NOT_ACCEPTABLE\",\n  \"items\": {\n    \"company_id\": -13124231,\n    \"integration_data\": {\n      \"veniam_2d\": {},\n      \"minimd0\": {},\n      \"consectetur_e98\": {}\n    },\n    \"company_name\": \"exercitatio\",\n    \"task_details\": {\n      \"type\": 36930235,\n      \"group_list\": [\n        {\n          \"text\": \"officia esse in voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"commodo non exercitation nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -58542903.21712203,\n      \"safe_stock\": -46047509,\n      \"period_threshold\": 18084400,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id sit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"labore\",\n    \"alias\": \"eu aliqua labore\"\n  },\n  \"payload\": {\n    \"company_id\": -82324564,\n    \"integration_data\": {\n      \"amet___d\": {}\n    },\n    \"company_name\": \"Excepteur enim commodo\",\n    \"task_details\": {\n      \"type\": -3139766,\n      \"group_list\": [\n        {\n          \"text\": \"non pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ad do id reprehenderit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 12329421.758755416,\n      \"safe_stock\": -25872278,\n      \"period_threshold\": -56134065,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"esse\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cupidatat in dolore anim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aliqua\",\n    \"alias\": \"elit laborum nostrud minim\"\n  },\n  \"trace_id\": \"ut aliqui\",\n  \"page\": {\n    \"type\": \"sed\",\n    \"item_total\": -29651596,\n    \"next_id\": \"in voluptate id minim consectetur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 92987868,\n    \"size\": -62465942\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "622ad67b-aaae-4b97-a89a-adabc2ed9ceb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1987-02-13T09:38:12.245Z\",\n  \"status\": 6862707,\n  \"error\": \"dolore ipsum pariatur\",\n  \"exception\": \"sit aliquip\",\n  \"message\": \"et\",\n  \"total_time_taken_in_millis\": 46945465,\n  \"http_status\": \"406 NOT_ACCEPTABLE\",\n  \"items\": {\n    \"company_id\": -13124231,\n    \"integration_data\": {\n      \"veniam_2d\": {},\n      \"minimd0\": {},\n      \"consectetur_e98\": {}\n    },\n    \"company_name\": \"exercitatio\",\n    \"task_details\": {\n      \"type\": 36930235,\n      \"group_list\": [\n        {\n          \"text\": \"officia esse in voluptate\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"commodo non exercitation nulla\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -58542903.21712203,\n      \"safe_stock\": -46047509,\n      \"period_threshold\": 18084400,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"id sit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"labore\",\n    \"alias\": \"eu aliqua labore\"\n  },\n  \"payload\": {\n    \"company_id\": -82324564,\n    \"integration_data\": {\n      \"amet___d\": {}\n    },\n    \"company_name\": \"Excepteur enim commodo\",\n    \"task_details\": {\n      \"type\": -3139766,\n      \"group_list\": [\n        {\n          \"text\": \"non pariatur\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ad do id reprehenderit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 12329421.758755416,\n      \"safe_stock\": -25872278,\n      \"period_threshold\": -56134065,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"esse\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"cupidatat in dolore anim\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"aliqua\",\n    \"alias\": \"elit laborum nostrud minim\"\n  },\n  \"trace_id\": \"ut aliqui\",\n  \"page\": {\n    \"type\": \"sed\",\n    \"item_total\": -29651596,\n    \"next_id\": \"in voluptate id minim consectetur\",\n    \"has_previous\": false,\n    \"has_next\": false,\n    \"current\": 92987868,\n    \"size\": -62465942\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "69ed9d20-82c3-4501-918f-45bcfcb86dfb",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "e2cc567d-7293-4668-841e-e225e62fd2ec",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2000-05-08T23:12:35.153Z\",\n  \"status\": 64328768,\n  \"error\": \"in Excepteur magna velit ex\",\n  \"exception\": \"ullamco ad dol\",\n  \"message\": \"sunt quis qui deserunt\",\n  \"total_time_taken_in_millis\": 79166613,\n  \"http_status\": \"503 SERVICE_UNAVAILABLE\",\n  \"items\": [\n    {\n      \"company_id\": 96387048,\n      \"integration_data\": {\n        \"proident_fd\": {},\n        \"do2\": {}\n      },\n      \"company_name\": \"nulla sit esse sunt quis\",\n      \"task_details\": {\n        \"type\": -17350878,\n        \"group_list\": [\n          {\n            \"text\": \"deserunt in sint\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat est Ut ut\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -75936971.72079863,\n        \"safe_stock\": -93419599,\n        \"period_threshold\": 64188415,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"amet proident sit dolor aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"esse ut Excepteur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"tempor\",\n      \"alias\": \"ad ipsum\"\n    },\n    {\n      \"company_id\": -67635733,\n      \"integration_data\": {\n        \"incd\": {}\n      },\n      \"company_name\": \"amet labore\",\n      \"task_details\": {\n        \"type\": -20999769,\n        \"group_list\": [\n          {\n            \"text\": \"officia est\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ullamco cillum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 98861091.95930329,\n        \"safe_stock\": 49956127,\n        \"period_threshold\": -93281524,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"ut Excepteur\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culp\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"enim consequat\",\n      \"alias\": \"sunt incididunt officia el\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": 20629223,\n      \"integration_data\": {\n        \"qui_ee\": {}\n      },\n      \"company_name\": \"sunt aliquip mollit\",\n      \"task_details\": {\n        \"type\": -56626514,\n        \"group_list\": [\n          {\n            \"text\": \"velit cupidatat et\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu ad nulla ipsum\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 73277189.60131416,\n        \"safe_stock\": -19969993,\n        \"period_threshold\": 93790151,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"laborum proident\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis non officia\",\n      \"alias\": \"qui Ut\"\n    },\n    {\n      \"company_id\": -34205325,\n      \"integration_data\": {\n        \"dolorfe3\": {}\n      },\n      \"company_name\": \"ut qui eiusmod Duis\",\n      \"task_details\": {\n        \"type\": -59890495,\n        \"group_list\": [\n          {\n            \"text\": \"p\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"Lorem amet consequat eiusmod\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -2540968.822718218,\n        \"safe_stock\": -43633640,\n        \"period_threshold\": 155950,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"exercitation non\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"enim dolore voluptate\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"officia\",\n      \"alias\": \"eu occaecat incididunt\"\n    }\n  ],\n  \"trace_id\": \"sint occaecat \",\n  \"page\": {\n    \"type\": \"Lorem tempor incididunt Ut enim\",\n    \"item_total\": 26677341,\n    \"next_id\": \"ullamco eiusmod anim incididunt ut\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -50522292,\n    \"size\": 2428335\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1ac79e10-4ec9-4395-b271-484b197a073b",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-12-13T01:02:02.575Z\",\n  \"status\": -66093172,\n  \"error\": \"labor\",\n  \"exception\": \"magna laborum voluptate\",\n  \"message\": \"non et quis occaecat\",\n  \"total_time_taken_in_millis\": 58631875,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": [\n    {\n      \"company_id\": 47713575,\n      \"integration_data\": {\n        \"ipsum6c_\": {},\n        \"dolore_3\": {},\n        \"consectetura4d\": {},\n        \"in0_e\": {}\n      },\n      \"company_name\": \"sed quis\",\n      \"task_details\": {\n        \"type\": -48956448,\n        \"group_list\": [\n          {\n            \"text\": \"fugiat exercitation qui\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -61200617.84718507,\n        \"safe_stock\": 83323352,\n        \"period_threshold\": 39515644,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"esse reprehenderit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex qui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut Lorem aliquip\",\n      \"alias\": \"aute\"\n    },\n    {\n      \"company_id\": -11379698,\n      \"integration_data\": {\n        \"irure__\": {},\n        \"commodob6\": {}\n      },\n      \"company_name\": \"nostrud dolore aliquip\",\n      \"task_details\": {\n        \"type\": -75860830,\n        \"group_list\": [\n          {\n            \"text\": \"ullamco laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 79412346.49010086,\n        \"safe_stock\": 41463076,\n        \"period_threshold\": -70106955,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolor ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur commodo Ut do adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse pariatur\",\n      \"alias\": \"eu labore culpa ad\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -16138311,\n      \"integration_data\": {\n        \"occaecat_da\": {},\n        \"ullamco8\": {}\n      },\n      \"company_name\": \"et pariatur voluptate ut\",\n      \"task_details\": {\n        \"type\": 91395487,\n        \"group_list\": [\n          {\n            \"text\": \"anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit Duis dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -29883782.259590223,\n        \"safe_stock\": -73958141,\n        \"period_threshold\": -16722343,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod fugiat dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad adipisicing\",\n      \"alias\": \"aliqua laboris eu elit\"\n    },\n    {\n      \"company_id\": 21711222,\n      \"integration_data\": {\n        \"occaecat1\": {},\n        \"sint_7a\": {}\n      },\n      \"company_name\": \"Lorem Ut\",\n      \"task_details\": {\n        \"type\": -56333997,\n        \"group_list\": [\n          {\n            \"text\": \"dolore aliquip aliqua enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 63030514.487947196,\n        \"safe_stock\": -25322717,\n        \"period_threshold\": -80429128,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"incididunt nostrud ad Ut aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim pariatur laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"occaecat do laborum\",\n      \"alias\": \"adipi\"\n    }\n  ],\n  \"trace_id\": \"adipisi\",\n  \"page\": {\n    \"type\": \"consectetur\",\n    \"item_total\": -60704354,\n    \"next_id\": \"ea nisi Duis\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -84895365,\n    \"size\": -67349340\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "819cbd1f-aaed-4aa2-9653-58108cd8b536",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1973-12-13T01:02:02.575Z\",\n  \"status\": -66093172,\n  \"error\": \"labor\",\n  \"exception\": \"magna laborum voluptate\",\n  \"message\": \"non et quis occaecat\",\n  \"total_time_taken_in_millis\": 58631875,\n  \"http_status\": \"305 USE_PROXY\",\n  \"items\": [\n    {\n      \"company_id\": 47713575,\n      \"integration_data\": {\n        \"ipsum6c_\": {},\n        \"dolore_3\": {},\n        \"consectetura4d\": {},\n        \"in0_e\": {}\n      },\n      \"company_name\": \"sed quis\",\n      \"task_details\": {\n        \"type\": -48956448,\n        \"group_list\": [\n          {\n            \"text\": \"fugiat exercitation qui\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"voluptate proident\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -61200617.84718507,\n        \"safe_stock\": 83323352,\n        \"period_threshold\": 39515644,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"esse reprehenderit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ex qui\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ut Lorem aliquip\",\n      \"alias\": \"aute\"\n    },\n    {\n      \"company_id\": -11379698,\n      \"integration_data\": {\n        \"irure__\": {},\n        \"commodob6\": {}\n      },\n      \"company_name\": \"nostrud dolore aliquip\",\n      \"task_details\": {\n        \"type\": -75860830,\n        \"group_list\": [\n          {\n            \"text\": \"ullamco laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consequat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 79412346.49010086,\n        \"safe_stock\": 41463076,\n        \"period_threshold\": -70106955,\n        \"period_threshold_type\": \"HOURS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolor ex\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur commodo Ut do adipisicing\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"esse pariatur\",\n      \"alias\": \"eu labore culpa ad\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -16138311,\n      \"integration_data\": {\n        \"occaecat_da\": {},\n        \"ullamco8\": {}\n      },\n      \"company_name\": \"et pariatur voluptate ut\",\n      \"task_details\": {\n        \"type\": 91395487,\n        \"group_list\": [\n          {\n            \"text\": \"anim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"velit Duis dolore\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -29883782.259590223,\n        \"safe_stock\": -73958141,\n        \"period_threshold\": -16722343,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"commodo\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod fugiat dolor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad adipisicing\",\n      \"alias\": \"aliqua laboris eu elit\"\n    },\n    {\n      \"company_id\": 21711222,\n      \"integration_data\": {\n        \"occaecat1\": {},\n        \"sint_7a\": {}\n      },\n      \"company_name\": \"Lorem Ut\",\n      \"task_details\": {\n        \"type\": -56333997,\n        \"group_list\": [\n          {\n            \"text\": \"dolore aliquip aliqua enim\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"dolor anim\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 63030514.487947196,\n        \"safe_stock\": -25322717,\n        \"period_threshold\": -80429128,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"incididunt nostrud ad Ut aliquip\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"anim pariatur laboris\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"occaecat do laborum\",\n      \"alias\": \"adipi\"\n    }\n  ],\n  \"trace_id\": \"adipisi\",\n  \"page\": {\n    \"type\": \"consectetur\",\n    \"item_total\": -60704354,\n    \"next_id\": \"ea nisi Duis\",\n    \"has_previous\": false,\n    \"has_next\": true,\n    \"current\": -84895365,\n    \"size\": -67349340\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "be6b7117-8a75-4ae9-9d1a-290f6739a792",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1075de78-c0de-4a57-a21b-e65229d5c5a7",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ce191fcb-f14e-4573-b399-5859deffed8a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 27853777,\n      \"event_name\": \"incididunt mollit occaecat\",\n      \"event_type\": \"consequat sint\",\n      \"event_category\": \"fugiat anim amet Excepteur id\",\n      \"version\": \"amet sunt ex irure\",\n      \"display_name\": \"anim sunt nisi\",\n      \"description\": \"sunt qui culpa cillum\",\n      \"created_on\": \"enim culpa labore in\"\n    },\n    {\n      \"id\": -59453684,\n      \"event_name\": \"labore velit ut c\",\n      \"event_type\": \"dolore do laborum Ut\",\n      \"event_category\": \"Duis ex elit magna\",\n      \"version\": \"velit ipsum Excepteur e\",\n      \"display_name\": \"incididunt proident\",\n      \"description\": \"in in reprehenderit\",\n      \"created_on\": \"magna pariatur aliquip irure\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bf73a66b-c9b5-4810-bd1e-53add1ab17bb",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "a3f88bf7-b8a4-417e-9b5f-286c3fdf23de",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": -85188374,\n      \"event_name\": \"laboris ex\",\n      \"event_type\": \"minim id sed mollit ut\",\n      \"event_category\": \"eiusmod commodo\",\n      \"version\": \"proident minim esse\",\n      \"display_name\": \"id elit nostrud magna\",\n      \"description\": \"minim Excepteur cupid\",\n      \"created_on\": \"mollit ex\"\n    },\n    {\n      \"id\": 35792666,\n      \"event_name\": \"tempor dolor et esse nisi\",\n      \"event_type\": \"amet mollit\",\n      \"event_category\": \"aute proident aliquip\",\n      \"version\": \"ea nulla quis deserunt Duis\",\n      \"display_name\": \"reprehenderit \",\n      \"description\": \"elit sed Excepteur\",\n      \"created_on\": \"eu ad\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "f34f7b51-7cfd-42bb-911e-c66ac5aa6cf6",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
