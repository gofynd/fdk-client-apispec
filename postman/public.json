{
  "item": [
    {
      "id": "19447672-7dfd-4f4b-a7d7-9e6374a1afd1",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f634f505-6544-4b75-a380-18d0e7a94725",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ff9bc346-3d96-4aff-9772-b0bf50b4e69a",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliquip nostrud",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d0b3b308-7fd9-4da7-9850-1e1d915812c5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliquip nostrud",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"Invalid application domain or id.\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6e4cdfe1-8e76-47f7-99e1-816290ec4c71",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "aliquip nostrud",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "3109b87e-ec9e-4585-a04c-4253ac7f377e",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "f07a3162-b3f7-400e-a991-37a172bb68cd",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6f8bf69d-a2e5-442c-a2a6-3846a1a92b6b",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ff47f718-1837-4387-92de-1b17195730a0",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "9969ed3b-e339-4c11-b1cf-80e17352862f",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 22907936,\n   \"event_name\": \"Duis nisi eu nostrud\",\n   \"event_type\": \"Duis e\",\n   \"event_category\": \"amet aliquip dolore\",\n   \"version\": \"irure officia dolor nulla amet\",\n   \"display_name\": \"Ut proident cupidatat dolor\",\n   \"description\": \"ut proident velit eu\",\n   \"created_on\": \"in proident non fugiat nulla\"\n  },\n  {\n   \"id\": -49931846,\n   \"event_name\": \"ullamco id nisi dolore commodo\",\n   \"event_type\": \"ut mollit reprehenderi\",\n   \"event_category\": \"tempor\",\n   \"version\": \"dolor laborum pariatur\",\n   \"display_name\": \"culpa ad esse incididunt\",\n   \"description\": \"officia amet est velit ea\",\n   \"created_on\": \"magna nisi irure et\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cecb0e17-da28-4f72-9a86-fac5275f2b34",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "ffde8216-b7a9-4833-bdc4-6a765fdba443",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -36890355,\n   \"event_name\": \"dolore l\",\n   \"event_type\": \"eiusmod occaecat velit labore\",\n   \"event_category\": \"Lorem sunt sit exercitation\",\n   \"version\": \"nulla officia\",\n   \"display_name\": \"commodo id minim\",\n   \"description\": \"Lorem ullamco eiusmod eu\",\n   \"created_on\": \"pro\"\n  },\n  {\n   \"id\": 84183753,\n   \"event_name\": \"mollit irure\",\n   \"event_type\": \"proident\",\n   \"event_category\": \"in reprehenderit aute proident\",\n   \"version\": \"est\",\n   \"display_name\": \"ut ea ex exercitation\",\n   \"description\": \"ex labore tempor\",\n   \"created_on\": \"commodo fugiat cillum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c542a6d4-d00d-477e-a7c6-18c69f4adaf4",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "53f2a9b0-eb89-4aeb-9e5a-0f567bc080b2",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a51b59a0-97ac-4306-9787-569fd80e2e1e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1998-10-26T09:29:04.666Z\",\n \"status\": -76542208,\n \"error\": \"magna Lorem aliquip in\",\n \"exception\": \"voluptate in do ad\",\n \"message\": \"amet anim dolore dolor\",\n \"total_time_taken_in_millis\": -25572231,\n \"http_status\": \"421 DESTINATION_LOCKED\",\n \"items\": [\n  {\n   \"company_id\": -9031842,\n   \"integration_data\": {},\n   \"company_name\": \"nulla fugiat consectetur\",\n   \"task_details\": {\n    \"type\": -42388260,\n    \"group_list\": [\n     {\n      \"text\": \"veniam qui non et officia\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident magna \",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 60456458.63216999,\n    \"safe_stock\": -95859386,\n    \"period_threshold\": 57223013,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"Excepteur do deserunt\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"magna cupidatat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"do ex\",\n   \"alias\": \"reprehenderit dolor Duis irure\"\n  },\n  {\n   \"company_id\": 82570939,\n   \"integration_data\": {},\n   \"company_name\": \"et\",\n   \"task_details\": {\n    \"type\": -85351483,\n    \"group_list\": [\n     {\n      \"text\": \"labore ut deser\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed dolor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -4141253.4426286966,\n    \"safe_stock\": -89036759,\n    \"period_threshold\": -62899666,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"quis est exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo esse exercitation nulla\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"magna dolore Lorem\",\n   \"alias\": \"enim aute aliqua ipsum\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 87740085,\n   \"integration_data\": {},\n   \"company_name\": \"do sit\",\n   \"task_details\": {\n    \"type\": -15368617,\n    \"group_list\": [\n     {\n      \"text\": \"amet laboris in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"veniam exercitation in proident\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 17853131.887843877,\n    \"safe_stock\": 58945294,\n    \"period_threshold\": 68709778,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consectetur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"enim l\",\n   \"alias\": \"pariatur tempor sit\"\n  },\n  {\n   \"company_id\": -10119706,\n   \"integration_data\": {},\n   \"company_name\": \"et amet\",\n   \"task_details\": {\n    \"type\": -11184139,\n    \"group_list\": [\n     {\n      \"text\": \"irure labore cupidatat magna\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit qui id in minim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -77294384.60093045,\n    \"safe_stock\": -37042289,\n    \"period_threshold\": -57013577,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"fugiat eu consequat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nostrud Excepteur quis fugiat qui\",\n   \"alias\": \"sed aliquip incididunt in dolor\"\n  }\n ],\n \"trace_id\": \"anim nisi\",\n \"page\": {\n  \"type\": \"id tempor\",\n  \"size\": 89059251,\n  \"current\": -35795288,\n  \"has_next\": false,\n  \"item_total\": 8896787,\n  \"next_id\": \"cillum c\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e57d4dc0-e86e-43e4-ab79-1413250dc15a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1953-04-20T17:15:19.506Z\",\n \"status\": 19807430,\n \"error\": \"culpa magna irure esse\",\n \"exception\": \"culpa magna elit\",\n \"message\": \"laboris quis labore Lorem\",\n \"total_time_taken_in_millis\": 51561619,\n \"http_status\": \"423 LOCKED\",\n \"items\": [\n  {\n   \"company_id\": 65191249,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt qui\",\n   \"task_details\": {\n    \"type\": -46488509,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 58697862.878052205,\n    \"safe_stock\": -25387976,\n    \"period_threshold\": 77246163,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate quis ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui adipisicing nul\",\n   \"alias\": \"enim incididunt et\"\n  },\n  {\n   \"company_id\": -88740452,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur laborum temp\",\n   \"task_details\": {\n    \"type\": 84744354,\n    \"group_list\": [\n     {\n      \"text\": \"sed anim nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua ut culpa quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 26560698.15302828,\n    \"safe_stock\": 2253273,\n    \"period_threshold\": 22250123,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum aliquip dolor deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint est dolo\",\n   \"alias\": \"culpa ut sint eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -44404807,\n   \"integration_data\": {},\n   \"company_name\": \"Duis deserunt tempor\",\n   \"task_details\": {\n    \"type\": -43449639,\n    \"group_list\": [\n     {\n      \"text\": \"sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -57651560.469555244,\n    \"safe_stock\": 95266285,\n    \"period_threshold\": -93738093,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut consectetur nu\",\n   \"alias\": \"anim Ut culpa ut\"\n  },\n  {\n   \"company_id\": -75171181,\n   \"integration_data\": {},\n   \"company_name\": \"proident culpa adipisicing dolor\",\n   \"task_details\": {\n    \"type\": 500711,\n    \"group_list\": [\n     {\n      \"text\": \"magna tempor sit nisi qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -58181875.030246966,\n    \"safe_stock\": -61776039,\n    \"period_threshold\": -45866746,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore amet velit reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure minim Duis veniam\",\n   \"alias\": \"nulla aliqua culpa in\"\n  }\n ],\n \"trace_id\": \"enim anim\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": 47364428,\n  \"current\": 54512402,\n  \"has_next\": true,\n  \"item_total\": -60627289,\n  \"next_id\": \"enim qui officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f4f42a22-c7f9-405f-87ca-cb7c87792e20",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1953-04-20T17:15:19.506Z\",\n \"status\": 19807430,\n \"error\": \"culpa magna irure esse\",\n \"exception\": \"culpa magna elit\",\n \"message\": \"laboris quis labore Lorem\",\n \"total_time_taken_in_millis\": 51561619,\n \"http_status\": \"423 LOCKED\",\n \"items\": [\n  {\n   \"company_id\": 65191249,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt qui\",\n   \"task_details\": {\n    \"type\": -46488509,\n    \"group_list\": [\n     {\n      \"text\": \"cupidatat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 58697862.878052205,\n    \"safe_stock\": -25387976,\n    \"period_threshold\": 77246163,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate quis ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"qui adipisicing nul\",\n   \"alias\": \"enim incididunt et\"\n  },\n  {\n   \"company_id\": -88740452,\n   \"integration_data\": {},\n   \"company_name\": \"Excepteur laborum temp\",\n   \"task_details\": {\n    \"type\": 84744354,\n    \"group_list\": [\n     {\n      \"text\": \"sed anim nostrud\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua ut culpa quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 26560698.15302828,\n    \"safe_stock\": 2253273,\n    \"period_threshold\": 22250123,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"incididunt nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ipsum aliquip dolor deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sint est dolo\",\n   \"alias\": \"culpa ut sint eiusmod\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": -44404807,\n   \"integration_data\": {},\n   \"company_name\": \"Duis deserunt tempor\",\n   \"task_details\": {\n    \"type\": -43449639,\n    \"group_list\": [\n     {\n      \"text\": \"sed\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id aliquip\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -57651560.469555244,\n    \"safe_stock\": 95266285,\n    \"period_threshold\": -93738093,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"consequa\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Duis tempor\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"Ut consectetur nu\",\n   \"alias\": \"anim Ut culpa ut\"\n  },\n  {\n   \"company_id\": -75171181,\n   \"integration_data\": {},\n   \"company_name\": \"proident culpa adipisicing dolor\",\n   \"task_details\": {\n    \"type\": 500711,\n    \"group_list\": [\n     {\n      \"text\": \"magna tempor sit nisi qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolor Duis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -58181875.030246966,\n    \"safe_stock\": -61776039,\n    \"period_threshold\": -45866746,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sunt pariatur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore amet velit reprehenderit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"irure minim Duis veniam\",\n   \"alias\": \"nulla aliqua culpa in\"\n  }\n ],\n \"trace_id\": \"enim anim\",\n \"page\": {\n  \"type\": \"aliquip elit\",\n  \"size\": 47364428,\n  \"current\": 54512402,\n  \"has_next\": true,\n  \"item_total\": -60627289,\n  \"next_id\": \"enim qui officia\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "78a8ea22-1d5d-4024-a645-b5db58790f85",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "4ae48813-fa44-4f63-bdcd-7d6168be419e",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-08-21T03:47:56.697Z\",\n \"status\": -3241435,\n \"error\": \"s\",\n \"exception\": \"aute commodo Lorem labore\",\n \"message\": \"commodo irure amet\",\n \"total_time_taken_in_millis\": -98000143,\n \"http_status\": \"200 OK\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et aliqua laborum\",\n \"page\": {\n  \"type\": \"est eu Lorem aliquip\",\n  \"size\": 52312765,\n  \"current\": -40299833,\n  \"has_next\": true,\n  \"item_total\": -53266472,\n  \"next_id\": \"laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "178e8352-832a-47a2-aba6-b4647edbca26",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-08-21T03:47:56.697Z\",\n \"status\": -3241435,\n \"error\": \"s\",\n \"exception\": \"aute commodo Lorem labore\",\n \"message\": \"commodo irure amet\",\n \"total_time_taken_in_millis\": -98000143,\n \"http_status\": \"200 OK\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et aliqua laborum\",\n \"page\": {\n  \"type\": \"est eu Lorem aliquip\",\n  \"size\": 52312765,\n  \"current\": -40299833,\n  \"has_next\": true,\n  \"item_total\": -53266472,\n  \"next_id\": \"laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "32c6a22a-dcaf-4569-9083-210e07c04d5f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1946-08-21T03:47:56.697Z\",\n \"status\": -3241435,\n \"error\": \"s\",\n \"exception\": \"aute commodo Lorem labore\",\n \"message\": \"commodo irure amet\",\n \"total_time_taken_in_millis\": -98000143,\n \"http_status\": \"200 OK\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"et aliqua laborum\",\n \"page\": {\n  \"type\": \"est eu Lorem aliquip\",\n  \"size\": 52312765,\n  \"current\": -40299833,\n  \"has_next\": true,\n  \"item_total\": -53266472,\n  \"next_id\": \"laborum\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "6c71fdea-6bf9-4813-9b79-b44b4c0cdc98",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "b429c7ca-a832-4502-bf9a-d9f3b513c949",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-12-07T23:08:32.462Z\",\n \"status\": 98355077,\n \"error\": \"Lorem ipsum\",\n \"exception\": \"incididunt ut esse ea est\",\n \"message\": \"ut Excepteur commodo\",\n \"total_time_taken_in_millis\": -12085731,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laboris ut dolor amet\",\n \"page\": {\n  \"type\": \"cupidatat dolor cillum\",\n  \"size\": -7948005,\n  \"current\": -49818417,\n  \"has_next\": false,\n  \"item_total\": 15030773,\n  \"next_id\": \"aliquip enim n\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2016a47c-984f-4ebf-92ea-6db0faf05b60",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-12-07T23:08:32.462Z\",\n \"status\": 98355077,\n \"error\": \"Lorem ipsum\",\n \"exception\": \"incididunt ut esse ea est\",\n \"message\": \"ut Excepteur commodo\",\n \"total_time_taken_in_millis\": -12085731,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laboris ut dolor amet\",\n \"page\": {\n  \"type\": \"cupidatat dolor cillum\",\n  \"size\": -7948005,\n  \"current\": -49818417,\n  \"has_next\": false,\n  \"item_total\": 15030773,\n  \"next_id\": \"aliquip enim n\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "431b820e-9d72-4608-94c0-3dfc51042d1b",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-12-07T23:08:32.462Z\",\n \"status\": 98355077,\n \"error\": \"Lorem ipsum\",\n \"exception\": \"incididunt ut esse ea est\",\n \"message\": \"ut Excepteur commodo\",\n \"total_time_taken_in_millis\": -12085731,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laboris ut dolor amet\",\n \"page\": {\n  \"type\": \"cupidatat dolor cillum\",\n  \"size\": -7948005,\n  \"current\": -49818417,\n  \"has_next\": false,\n  \"item_total\": 15030773,\n  \"next_id\": \"aliquip enim n\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8d010972-e62f-4853-8938-6dd581a10589",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-12-07T23:08:32.462Z\",\n \"status\": 98355077,\n \"error\": \"Lorem ipsum\",\n \"exception\": \"incididunt ut esse ea est\",\n \"message\": \"ut Excepteur commodo\",\n \"total_time_taken_in_millis\": -12085731,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laboris ut dolor amet\",\n \"page\": {\n  \"type\": \"cupidatat dolor cillum\",\n  \"size\": -7948005,\n  \"current\": -49818417,\n  \"has_next\": false,\n  \"item_total\": 15030773,\n  \"next_id\": \"aliquip enim n\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bec7ac49-4d09-4292-8b53-cde5f907a8ac",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2004-12-07T23:08:32.462Z\",\n \"status\": 98355077,\n \"error\": \"Lorem ipsum\",\n \"exception\": \"incididunt ut esse ea est\",\n \"message\": \"ut Excepteur commodo\",\n \"total_time_taken_in_millis\": -12085731,\n \"http_status\": \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"laboris ut dolor amet\",\n \"page\": {\n  \"type\": \"cupidatat dolor cillum\",\n  \"size\": -7948005,\n  \"current\": -49818417,\n  \"has_next\": false,\n  \"item_total\": 15030773,\n  \"next_id\": \"aliquip enim n\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "1ef9c559-abd9-4f2a-97b5-7a27a81aa2e3",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
