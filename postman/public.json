{
  "item": [
    {
      "id": "7544903c-cb30-44d2-bc30-6235a245a4f2",
      "name": "Billing",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "365230f4-d767-40e1-bc81-9a4d11868023",
          "name": "getStandardPlans | Get Standard/Public Plans",
          "request": {
            "name": "getStandardPlans | Get Standard/Public Plans",
            "description": {
              "content": "Get Standard/Public Plans.\n",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "billing",
                "v1.0",
                "plan",
                "detailed-list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "platform_type",
                  "value": "<string>",
                  "description": "(Required) The type of platform for which plans are requested."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1d6f873d-9c8e-4c6d-819e-a5d4c3011d73",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"plans\": [\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"aliqua labore\",\n        \"anim fugiat sit culpa al\"\n      ],\n      \"tags\": [\n        \"dol\",\n        \"Duis ut do\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    },\n    {\n      \"recurring\": {\n        \"interval\": \"month\",\n        \"interval_count\": 3\n      },\n      \"is_trial_plan\": true,\n      \"plan_group\": \"default\",\n      \"tag_lines\": [\n        \"This is 2020won trial plan\",\n        \"This is 2020won trial plan\"\n      ],\n      \"currency\": \"INR\",\n      \"is_active\": true,\n      \"is_visible\": false,\n      \"trial_period\": 30,\n      \"addons\": [\n        \"voluptate consectetur sunt\",\n        \"est sit id\"\n      ],\n      \"tags\": [\n        \"non sit fugiat Duis et\",\n        \"consectetur enim adipisicing qui\"\n      ],\n      \"type\": \"public\",\n      \"country\": \"IN\",\n      \"_id\": \"5f0dcd866173cb003706098f\",\n      \"name\": \"30 day Trial\",\n      \"description\": \"30 day Trial\",\n      \"amount\": 0,\n      \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n      \"created_at\": \"2020-07-14T15:21:42.959Z\",\n      \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n    }\n  ],\n  \"trial_plan\": {\n    \"recurring\": {\n      \"interval\": \"month\",\n      \"interval_count\": 3\n    },\n    \"is_trial_plan\": true,\n    \"plan_group\": \"default\",\n    \"tag_lines\": [\n      \"This is 2020won trial plan\",\n      \"This is 2020won trial plan\"\n    ],\n    \"currency\": \"INR\",\n    \"is_active\": true,\n    \"is_visible\": false,\n    \"trial_period\": 30,\n    \"addons\": [\n      \"amet qui\",\n      \"non sit aliquip magna ex\"\n    ],\n    \"tags\": [\n      \"aliquip dolore dolore\",\n      \"exercitation est non ad\"\n    ],\n    \"type\": \"public\",\n    \"country\": \"IN\",\n    \"_id\": \"5f0dcd866173cb003706098f\",\n    \"name\": \"30 day Trial\",\n    \"description\": \"30 day Trial\",\n    \"amount\": 0,\n    \"product_suite_id\": \"5f0dcd866173cb0037060975\",\n    \"created_at\": \"2020-07-14T15:21:42.959Z\",\n    \"modified_at\": \"2020-07-14T15:21:42.959Z\"\n  },\n  \"component_groups\": [\n    \"Key Features\",\n    \"Key Features\"\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2371e53a-761d-49f0-8d99-78b43709689b",
              "name": "Resource not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Reason is required\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "70416d74-c0f3-4dba-928f-72df35cd049c",
              "name": "Internal server error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "billing",
                    "v1.0",
                    "plan",
                    "detailed-list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "platform_type",
                      "value": "app/web/both"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Opps something went wrong !!\",\n  \"code\": \"INTERNAL_SERVER_ERROR\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ed3f3ba8-d944-4ea2-ba82-b73d80a2dfe4",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "9ce57379-dd05-462c-8369-259edefd8598",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "72664021-6506-4672-8337-64ed47760444",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "amet cupidatat Excepteur irure veniam",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"application\": {\n    \"website\": {\n      \"enabled\": true,\n      \"basepath\": \"/\"\n    },\n    \"cors\": {\n      \"domains\": []\n    },\n    \"auth\": {\n      \"enabled\": true\n    },\n    \"description\": \"test\",\n    \"channel_type\": \"store\",\n    \"cache_ttl\": -1,\n    \"internal\": false,\n    \"is_active\": true,\n    \"mode\": \"live\",\n    \"_id\": \"620b931ee7bfb11f910bf4a3\",\n    \"company_id\": 2,\n    \"name\": \"test\",\n    \"owner\": \"5b9b98150df588546aaea6d2\",\n    \"logo\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"favicon\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n    },\n    \"banner\": {\n      \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n    },\n    \"token\": \"tPQv0nc23\",\n    \"tokens\": [\n      {\n        \"token\": \"tPQv0nc23\",\n        \"created_at\": \"2022-02-15T11:48:46.909Z\"\n      }\n    ],\n    \"domains\": [\n      {\n        \"verified\": true,\n        \"is_primary\": true,\n        \"is_shortlink\": true,\n        \"_id\": \"620b931ee7bfb11f910bf4a4\",\n        \"name\": \"qckvv5lhp.hostfynd.dev\"\n      }\n    ],\n    \"redirections\": [],\n    \"meta\": [],\n    \"created_at\": \"2022-02-15T11:48:46.909Z\",\n    \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n    \"__v\": 0,\n    \"domain\": {\n      \"verified\": true,\n      \"is_primary\": true,\n      \"is_shortlink\": true,\n      \"_id\": \"620b931ee7bfb11f910bf4a4\",\n      \"name\": \"qckvv5lhp.hostfynd.dev\"\n    },\n    \"id\": \"620b931ee7bfb11f910bf4a3\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "7b94b58f-750e-4f45-b345-2e0f61fd6669",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "amet cupidatat Excepteur irure veniam",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"Invalid application domain or id.\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "b1f4e10c-d03d-4244-a7ba-f4a3d05da93d",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "amet cupidatat Excepteur irure veniam",
                    "description": ""
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"value\": {\n    \"message\": \"No application found\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5f5adbcf-bdca-4d58-aa36-af50a2848c25",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {
              "content": "Get Location configuration",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7834e24a-a493-4842-8939-3d6efaa42225",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"items\": [\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"adipisicing\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"reprehenderit nostrud fugiat consectetur\",\n      \"country_code\": \"non ipsum amet laborum\",\n      \"latitude\": \"nisi ex Ut non\",\n      \"longitude\": \"et ips\"\n    },\n    {\n      \"capital\": \"Kabul\",\n      \"currency\": \"AFN\",\n      \"iso2\": \"AF\",\n      \"iso3\": \"AFG\",\n      \"name\": \"Afghanistan\",\n      \"parent\": \"adipisicing dolore\",\n      \"phone_code\": \"990999092\",\n      \"type\": \"country\",\n      \"uid\": 1,\n      \"__v\": 0,\n      \"_id\": \"5ec50c613c403900600fcdec,\",\n      \"default_currency\": {\n        \"name\": \"Indian Rupee\",\n        \"symbol\": \"₹\",\n        \"code\": \"INR\"\n      },\n      \"default_language\": {\n        \"name\": \"English\",\n        \"code\": \"en-IN\"\n      },\n      \"state_code\": \"ipsum laboris\",\n      \"country_code\": \"cillum est reprehenderit\",\n      \"latitude\": \"Duis amet\",\n      \"longitude\": \"magna do id fugiat esse\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a067b8b1-1448-42fa-9300-5c43f746670e",
      "name": "Content",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "05495f95-9413-4f36-bb4d-bae2fc197af9",
          "name": "getCredentialsByEntity | Get credentials to power chat support systems",
          "request": {
            "name": "getCredentialsByEntity | Get credentials to power chat support systems",
            "description": {
              "content": "Get credentials for support system",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "public",
                "content",
                "credentials",
                ":entity"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "entity",
                  "description": "Server Type"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "a55239f5-ac70-46f2-bba7-3473a77b315b",
              "name": "Success. Refer `CredentialsSchema` for more details.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"entity_type\": \"partner\",\n  \"type\": \"freshchat\",\n  \"is_enable\": true,\n  \"configuration\": {\n    \"token\": \"a3e4gf20b-d11g-4512-n3zq-03b9aa7e1yxz\",\n    \"siteId\": \"a3e8f20b-d97f-452f-bd72-03b9aa7e1bf0\",\n    \"host\": \"https://wchat.freshchat.com\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "fb264e42-dd36-434e-9cc6-126d49e4c249",
              "name": "Bad Request. See the error object in the response body to know the exact reason.",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "public",
                    "content",
                    "credentials",
                    ":entity"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "entity",
                      "description": "Server Type"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"Oops! Something went wrong. Please try later\",\n  \"status\": 400,\n  \"code\": \"CX-1003\",\n  \"exception\": \"\",\n  \"info\": \"\",\n  \"request_id\": \"\",\n  \"stack_trace\": \"\",\n  \"meta\": {}\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "a6388639-88c5-4c0b-b45d-84d4185c5831",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1708a61e-f33a-496a-a420-f53ba5c83abc",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c94656e5-fbd8-4fe4-9f33-2291e5408af2",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2024-01-25T23:26:59.975Z\",\n  \"status\": 10321700,\n  \"error\": \"dolore\",\n  \"exception\": \"est incididunt\",\n  \"message\": \"minim\",\n  \"total_time_taken_in_millis\": -75052104,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"irure a\",\n    \"size\": -84543263,\n    \"current\": -37257300,\n    \"has_next\": true,\n    \"item_total\": -842001,\n    \"next_id\": \"ipsum nulla dol\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8fa9aacc-57c7-4271-afe9-f097ef2e241a",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2024-01-25T23:26:59.975Z\",\n  \"status\": 10321700,\n  \"error\": \"dolore\",\n  \"exception\": \"est incididunt\",\n  \"message\": \"minim\",\n  \"total_time_taken_in_millis\": -75052104,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"irure a\",\n    \"size\": -84543263,\n    \"current\": -37257300,\n    \"has_next\": true,\n    \"item_total\": -842001,\n    \"next_id\": \"ipsum nulla dol\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "108c78a6-d429-4ccd-ab2f-a29017305491",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2024-01-25T23:26:59.975Z\",\n  \"status\": 10321700,\n  \"error\": \"dolore\",\n  \"exception\": \"est incididunt\",\n  \"message\": \"minim\",\n  \"total_time_taken_in_millis\": -75052104,\n  \"http_status\": \"417 EXPECTATION_FAILED\",\n  \"items\": {},\n  \"payload\": {},\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"irure a\",\n    \"size\": -84543263,\n    \"current\": -37257300,\n    \"has_next\": true,\n    \"item_total\": -842001,\n    \"next_id\": \"ipsum nulla dol\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "02f975c9-2f3c-4811-9a7c-1369f1729ea0",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "010fced8-597a-4193-a918-9ea3e3211998",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-10-09T11:55:17.758Z\",\n  \"status\": 55024047,\n  \"error\": \"in officia Duis\",\n  \"exception\": \"deserunt pariatur\",\n  \"message\": \"dolore in\",\n  \"total_time_taken_in_millis\": -32747451,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": 63927365,\n    \"current\": 31455279,\n    \"has_next\": true,\n    \"item_total\": 33092284,\n    \"next_id\": \"exercitat\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bf294e64-0357-4699-ace4-183f218f107c",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-10-09T11:55:17.758Z\",\n  \"status\": 55024047,\n  \"error\": \"in officia Duis\",\n  \"exception\": \"deserunt pariatur\",\n  \"message\": \"dolore in\",\n  \"total_time_taken_in_millis\": -32747451,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": 63927365,\n    \"current\": 31455279,\n    \"has_next\": true,\n    \"item_total\": 33092284,\n    \"next_id\": \"exercitat\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "78ffd7eb-546b-4cda-bff8-14ebf2c6ee76",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-10-09T11:55:17.758Z\",\n  \"status\": 55024047,\n  \"error\": \"in officia Duis\",\n  \"exception\": \"deserunt pariatur\",\n  \"message\": \"dolore in\",\n  \"total_time_taken_in_millis\": -32747451,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": 63927365,\n    \"current\": 31455279,\n    \"has_next\": true,\n    \"item_total\": 33092284,\n    \"next_id\": \"exercitat\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f7675623-71c3-4653-8a11-7d0eb0953a71",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-10-09T11:55:17.758Z\",\n  \"status\": 55024047,\n  \"error\": \"in officia Duis\",\n  \"exception\": \"deserunt pariatur\",\n  \"message\": \"dolore in\",\n  \"total_time_taken_in_millis\": -32747451,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": 63927365,\n    \"current\": 31455279,\n    \"has_next\": true,\n    \"item_total\": 33092284,\n    \"next_id\": \"exercitat\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "995c5dc8-1cc9-49b9-8fe5-09e67089b8cf",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2007-10-09T11:55:17.758Z\",\n  \"status\": 55024047,\n  \"error\": \"in officia Duis\",\n  \"exception\": \"deserunt pariatur\",\n  \"message\": \"dolore in\",\n  \"total_time_taken_in_millis\": -32747451,\n  \"http_status\": \"407 PROXY_AUTHENTICATION_REQUIRED\",\n  \"items\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"payload\": {\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n  },\n  \"trace_id\": \"qui\",\n  \"page\": {\n    \"type\": \"dolor\",\n    \"size\": 63927365,\n    \"current\": 31455279,\n    \"has_next\": true,\n    \"item_total\": 33092284,\n    \"next_id\": \"exercitat\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "99deacb2-7842-4396-afd3-d243a447da83",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "44a64701-eb98-4f46-b3e1-5f45f7f06670",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2004-12-22T13:51:55.343Z\",\n  \"status\": -71474369,\n  \"error\": \"anim\",\n  \"exception\": \"irure\",\n  \"message\": \"mollit est culpa\",\n  \"total_time_taken_in_millis\": -40402058,\n  \"http_status\": \"206 PARTIAL_CONTENT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"elit nulla\",\n      \"description\": \"elit esse\",\n      \"name\": \"aute dolore\",\n      \"slug\": \"commodo est\",\n      \"meta\": [\n        {\n          \"_id\": \"nisi\",\n          \"name\": \"officia ipsum ut laborum Excepteur\",\n          \"value\": \"quis reprehenderit\"\n        },\n        {\n          \"_id\": \"aliquip elit fugiat\",\n          \"name\": \"id\",\n          \"value\": \"ipsum proident minim\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"est proident in Ut ex\",\n        \"integration\": \"dolor irure in\",\n        \"level\": \"magna officia cillum in\",\n        \"uid\": -6545338,\n        \"opted\": false,\n        \"permissions\": [\n          \"est id eu sed\",\n          \"consectetur elit eu et commodo\"\n        ],\n        \"token\": \"ut tempor sit in\",\n        \"name\": \"aute Duis\",\n        \"stores\": [\n          {\n            \"_id\": \"do exercita\",\n            \"integration\": \"id exercitation\",\n            \"level\": \"commodo fugiat\",\n            \"uid\": 18403432,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"elit\",\n            \"code\": \"ullamco tempor irure\",\n            \"name\": \"cupidatat ad nulla\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"fugiat aute nulla\",\n            \"integration\": \"aliquip sit\",\n            \"level\": \"sint\",\n            \"uid\": 13506126,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ex consectetur est\",\n            \"code\": \"proident sunt enim dolor\",\n            \"name\": \"do Lorem dolor\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"sit in\",\n        \"integration\": \"id proident\",\n        \"level\": \"eu culpa minim\",\n        \"uid\": 26415592,\n        \"opted\": true,\n        \"permissions\": [\n          \"laborum id\",\n          \"consectetur sit veniam cillu\"\n        ],\n        \"token\": \"eiusmod anim\",\n        \"name\": \"dolor\",\n        \"stores\": [\n          {\n            \"_id\": \"eu labore\",\n            \"integration\": \"incididunt mollit cillum adipisicing\",\n            \"level\": \"id eiusmod deserunt\",\n            \"uid\": 11370929,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur ullamco\",\n            \"code\": \"aliquip\",\n            \"name\": \"ullamco officia aliqua Excepteur\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"consectetur laborum\",\n            \"integration\": \"magna ullamco\",\n            \"level\": \"eiusmod occaecat ea incididunt\",\n            \"uid\": 23054905,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"consequat eu\",\n            \"code\": \"non irure culpa\",\n            \"name\": \"irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"culpa\",\n      \"description\": \"sit non officia nostrud aliquip\",\n      \"name\": \"mollit occ\",\n      \"slug\": \"Ut nulla id minim anim\",\n      \"meta\": [\n        {\n          \"_id\": \"aute fugiat\",\n          \"name\": \"magna aliquip\",\n          \"value\": \"quis et in\"\n        },\n        {\n          \"_id\": \"aliqua velit non\",\n          \"name\": \"aliqua ea proident veniam\",\n          \"value\": \"officia\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"magna pariatur nisi\",\n        \"integration\": \"ut deserunt voluptate exercitation dolore\",\n        \"level\": \"sunt deserunt\",\n        \"uid\": 42655823,\n        \"opted\": true,\n        \"permissions\": [\n          \"pariatur consequat dolore et\",\n          \"Excepteur nostrud\"\n        ],\n        \"token\": \"Lorem\",\n        \"name\": \"reprehenderit in\",\n        \"stores\": [\n          {\n            \"_id\": \"sit culpa deserunt laborum\",\n            \"integration\": \"cillum Duis dolor\",\n            \"level\": \"conseq\",\n            \"uid\": 75601705,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Excepteur dolor fugiat occaecat\",\n            \"code\": \"cupidatat in exercitation adipisicing\",\n            \"name\": \"non an\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"ex est\",\n            \"integration\": \"aut\",\n            \"level\": \"consectetur\",\n            \"uid\": -57363843,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua Duis elit\",\n            \"code\": \"ullamco ad Excepteur dolor\",\n            \"name\": \"velit esse enim nostrud\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ea ullamco Lorem sit\",\n        \"integration\": \"aute est quis ullamco\",\n        \"level\": \"nostrud et\",\n        \"uid\": 20016923,\n        \"opted\": false,\n        \"permissions\": [\n          \"deserunt aute ut v\",\n          \"sunt esse\"\n        ],\n        \"token\": \"mollit velit Lorem ullamco\",\n        \"name\": \"officia enim ea eu\",\n        \"stores\": [\n          {\n            \"_id\": \"ullamco\",\n            \"integration\": \"in\",\n            \"level\": \"minim dolore irure in in\",\n            \"uid\": -15986877,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ea Lorem pariatur labore\",\n            \"code\": \"mollit sint ad amet\",\n            \"name\": \"sit ad\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"aliquip ea et tempor\",\n            \"integration\": \"fugiat labore occaecat\",\n            \"level\": \"sed enim in laborum pariatur\",\n            \"uid\": -24879303,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dolore fugiat laboris in\",\n            \"code\": \"exercitatio\",\n            \"name\": \"laborum elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"eiusmod dolor pariatur reprehenderit\",\n  \"page\": {\n    \"type\": \"labore consequat commodo\",\n    \"size\": -67304246,\n    \"current\": 97731633,\n    \"has_next\": false,\n    \"item_total\": 39707267,\n    \"next_id\": \"quis esse\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "986c1d95-938e-4d42-879b-6642148c2e55",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-05-30T15:50:03.656Z\",\n  \"status\": -31969581,\n  \"error\": \"la\",\n  \"exception\": \"esse consequat reprehenderit\",\n  \"message\": \"incididunt dolor veniam dolore consectetur\",\n  \"total_time_taken_in_millis\": -22874305,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"ad elit ut\",\n      \"description\": \"laborum\",\n      \"name\": \"ad\",\n      \"slug\": \"ut id elit dolor sit\",\n      \"meta\": [\n        {\n          \"_id\": \"in aute incididunt\",\n          \"name\": \"e\",\n          \"value\": \"eu cillum irure ut\"\n        },\n        {\n          \"_id\": \"pariatur\",\n          \"name\": \"velit sint Ut consequat\",\n          \"value\": \"in Ut pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"dolore labore mollit ea\",\n        \"integration\": \"deserunt\",\n        \"level\": \"tem\",\n        \"uid\": 46810253,\n        \"opted\": true,\n        \"permissions\": [\n          \"aute\",\n          \"id dolore dolore ea\"\n        ],\n        \"token\": \"ad in\",\n        \"name\": \"ipsum id\",\n        \"stores\": [\n          {\n            \"_id\": \"culpa deserunt sit officia\",\n            \"integration\": \"Excepteur ex sed\",\n            \"level\": \"aliquip culpa ullamco id\",\n            \"uid\": -683831,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris adipisicing Duis magna\",\n            \"code\": \"pariatur tempor labore ut\",\n            \"name\": \"nisi dolore exercitation\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cillum cupidatat amet veniam enim\",\n            \"integration\": \"anim incididunt dolor Duis\",\n            \"level\": \"velit sunt qui\",\n            \"uid\": -22263657,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis non magna\",\n            \"code\": \"aute et adipisicing\",\n            \"name\": \"sunt laborum anim elit sed\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad consequ\",\n        \"integration\": \"Excepteur tempor commodo\",\n        \"level\": \"ea non\",\n        \"uid\": 26210844,\n        \"opted\": true,\n        \"permissions\": [\n          \"aliqua\",\n          \"consequat reprehenderit\"\n        ],\n        \"token\": \"amet\",\n        \"name\": \"enim\",\n        \"stores\": [\n          {\n            \"_id\": \"do nulla anim nisi\",\n            \"integration\": \"et\",\n            \"level\": \"ad laborum consectetur aliquip\",\n            \"uid\": 20374712,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut deserunt\",\n            \"code\": \"sunt tempor consectetur sed\",\n            \"name\": \"in ullamco Lorem laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cupidatat elit est ex\",\n            \"integration\": \"exercitation officia sed\",\n            \"level\": \"et ut elit\",\n            \"uid\": 34634507,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dol\",\n            \"code\": \"in Excepteur\",\n            \"name\": \"nostrud in quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"dolor do elit exercitation\",\n      \"description\": \"in ut tempor\",\n      \"name\": \"est ad enim\",\n      \"slug\": \"sint magna laborum\",\n      \"meta\": [\n        {\n          \"_id\": \"ullamco Excepteur quis\",\n          \"name\": \"eiusmod in deserunt dolor\",\n          \"value\": \"nulla ad reprehenderit est\"\n        },\n        {\n          \"_id\": \"eiusmod minim\",\n          \"name\": \"consequ\",\n          \"value\": \"proident dolor\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aliqua magna deserunt elit\",\n        \"integration\": \"eu ut incididunt\",\n        \"level\": \"Excepteur ut nulla velit\",\n        \"uid\": -94910249,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip nulla eiusmod\",\n          \"occaecat reprehenderit\"\n        ],\n        \"token\": \"enim Excepteur\",\n        \"name\": \"ea\",\n        \"stores\": [\n          {\n            \"_id\": \"cillum occaecat\",\n            \"integration\": \"dolor voluptate nisi\",\n            \"level\": \"aliquip labore\",\n            \"uid\": -51038917,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"c\",\n            \"code\": \"eiusmod\",\n            \"name\": \"est irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"enim dolore eu qui\",\n            \"integration\": \"dolore exercitation irure\",\n            \"level\": \"elit consectetur\",\n            \"uid\": -90098257,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim\",\n            \"code\": \"nostrud quis\",\n            \"name\": \"labore fugiat sint aliquip elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ullamco\",\n        \"integration\": \"culpa est cupidatat aute\",\n        \"level\": \"consequat Lorem\",\n        \"uid\": -13580751,\n        \"opted\": true,\n        \"permissions\": [\n          \"aute\",\n          \"culpa dolore sunt\"\n        ],\n        \"token\": \"irure nostrud Excepteur ad in\",\n        \"name\": \"esse est cillum\",\n        \"stores\": [\n          {\n            \"_id\": \"irure voluptate id Lorem \",\n            \"integration\": \"laboris reprehenderit dolor tempor\",\n            \"level\": \"velit qui ipsum minim\",\n            \"uid\": -82807780,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"eu in incididunt\",\n            \"name\": \"do Excepteur non dolore cupidatat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in tempor labori\",\n            \"integration\": \"anim reprehend\",\n            \"level\": \"mollit aliquip\",\n            \"uid\": -42890196,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua mollit cillum nisi\",\n            \"code\": \"e\",\n            \"name\": \"quis officia deserunt id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"officia commodo Excepteur\",\n  \"page\": {\n    \"type\": \"sunt culpa reprehenderit\",\n    \"size\": -36292085,\n    \"current\": 79791402,\n    \"has_next\": true,\n    \"item_total\": 38350169,\n    \"next_id\": \"commodo dolor aliquip\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "417ac8f7-6c67-48fd-ae32-c26612389cc6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1979-05-30T15:50:03.656Z\",\n  \"status\": -31969581,\n  \"error\": \"la\",\n  \"exception\": \"esse consequat reprehenderit\",\n  \"message\": \"incididunt dolor veniam dolore consectetur\",\n  \"total_time_taken_in_millis\": -22874305,\n  \"http_status\": \"504 GATEWAY_TIMEOUT\",\n  \"items\": {\n    \"integration\": {\n      \"_id\": \"ad elit ut\",\n      \"description\": \"laborum\",\n      \"name\": \"ad\",\n      \"slug\": \"ut id elit dolor sit\",\n      \"meta\": [\n        {\n          \"_id\": \"in aute incididunt\",\n          \"name\": \"e\",\n          \"value\": \"eu cillum irure ut\"\n        },\n        {\n          \"_id\": \"pariatur\",\n          \"name\": \"velit sint Ut consequat\",\n          \"value\": \"in Ut pariatur\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"dolore labore mollit ea\",\n        \"integration\": \"deserunt\",\n        \"level\": \"tem\",\n        \"uid\": 46810253,\n        \"opted\": true,\n        \"permissions\": [\n          \"aute\",\n          \"id dolore dolore ea\"\n        ],\n        \"token\": \"ad in\",\n        \"name\": \"ipsum id\",\n        \"stores\": [\n          {\n            \"_id\": \"culpa deserunt sit officia\",\n            \"integration\": \"Excepteur ex sed\",\n            \"level\": \"aliquip culpa ullamco id\",\n            \"uid\": -683831,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"laboris adipisicing Duis magna\",\n            \"code\": \"pariatur tempor labore ut\",\n            \"name\": \"nisi dolore exercitation\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cillum cupidatat amet veniam enim\",\n            \"integration\": \"anim incididunt dolor Duis\",\n            \"level\": \"velit sunt qui\",\n            \"uid\": -22263657,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"Duis non magna\",\n            \"code\": \"aute et adipisicing\",\n            \"name\": \"sunt laborum anim elit sed\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ad consequ\",\n        \"integration\": \"Excepteur tempor commodo\",\n        \"level\": \"ea non\",\n        \"uid\": 26210844,\n        \"opted\": true,\n        \"permissions\": [\n          \"aliqua\",\n          \"consequat reprehenderit\"\n        ],\n        \"token\": \"amet\",\n        \"name\": \"enim\",\n        \"stores\": [\n          {\n            \"_id\": \"do nulla anim nisi\",\n            \"integration\": \"et\",\n            \"level\": \"ad laborum consectetur aliquip\",\n            \"uid\": 20374712,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut deserunt\",\n            \"code\": \"sunt tempor consectetur sed\",\n            \"name\": \"in ullamco Lorem laborum\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"cupidatat elit est ex\",\n            \"integration\": \"exercitation officia sed\",\n            \"level\": \"et ut elit\",\n            \"uid\": 34634507,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"dol\",\n            \"code\": \"in Excepteur\",\n            \"name\": \"nostrud in quis\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"payload\": {\n    \"integration\": {\n      \"_id\": \"dolor do elit exercitation\",\n      \"description\": \"in ut tempor\",\n      \"name\": \"est ad enim\",\n      \"slug\": \"sint magna laborum\",\n      \"meta\": [\n        {\n          \"_id\": \"ullamco Excepteur quis\",\n          \"name\": \"eiusmod in deserunt dolor\",\n          \"value\": \"nulla ad reprehenderit est\"\n        },\n        {\n          \"_id\": \"eiusmod minim\",\n          \"name\": \"consequ\",\n          \"value\": \"proident dolor\"\n        }\n      ]\n    },\n    \"companies\": [\n      {\n        \"_id\": \"aliqua magna deserunt elit\",\n        \"integration\": \"eu ut incididunt\",\n        \"level\": \"Excepteur ut nulla velit\",\n        \"uid\": -94910249,\n        \"opted\": false,\n        \"permissions\": [\n          \"aliquip nulla eiusmod\",\n          \"occaecat reprehenderit\"\n        ],\n        \"token\": \"enim Excepteur\",\n        \"name\": \"ea\",\n        \"stores\": [\n          {\n            \"_id\": \"cillum occaecat\",\n            \"integration\": \"dolor voluptate nisi\",\n            \"level\": \"aliquip labore\",\n            \"uid\": -51038917,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"c\",\n            \"code\": \"eiusmod\",\n            \"name\": \"est irure\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"enim dolore eu qui\",\n            \"integration\": \"dolore exercitation irure\",\n            \"level\": \"elit consectetur\",\n            \"uid\": -90098257,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"anim\",\n            \"code\": \"nostrud quis\",\n            \"name\": \"labore fugiat sint aliquip elit\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      {\n        \"_id\": \"ullamco\",\n        \"integration\": \"culpa est cupidatat aute\",\n        \"level\": \"consequat Lorem\",\n        \"uid\": -13580751,\n        \"opted\": true,\n        \"permissions\": [\n          \"aute\",\n          \"culpa dolore sunt\"\n        ],\n        \"token\": \"irure nostrud Excepteur ad in\",\n        \"name\": \"esse est cillum\",\n        \"stores\": [\n          {\n            \"_id\": \"irure voluptate id Lorem \",\n            \"integration\": \"laboris reprehenderit dolor tempor\",\n            \"level\": \"velit qui ipsum minim\",\n            \"uid\": -82807780,\n            \"opted\": true,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"ut\",\n            \"code\": \"eu in incididunt\",\n            \"name\": \"do Excepteur non dolore cupidatat\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"_id\": \"in tempor labori\",\n            \"integration\": \"anim reprehend\",\n            \"level\": \"mollit aliquip\",\n            \"uid\": -42890196,\n            \"opted\": false,\n            \"permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"token\": \"aliqua mollit cillum nisi\",\n            \"code\": \"e\",\n            \"name\": \"quis officia deserunt id\",\n            \"data\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"trace_id\": \"officia commodo Excepteur\",\n  \"page\": {\n    \"type\": \"sunt culpa reprehenderit\",\n    \"size\": -36292085,\n    \"current\": 79791402,\n    \"has_next\": true,\n    \"item_total\": 38350169,\n    \"next_id\": \"commodo dolor aliquip\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "82ef80d4-4ef6-44ab-9460-b7008bd85697",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "aaa9a70b-20e5-4fa0-b595-9ff4af8c7ec7",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2001-10-15T05:54:58.236Z\",\n  \"status\": -82866900,\n  \"error\": \"repr\",\n  \"exception\": \"ex commodo eiusmod do\",\n  \"message\": \"non et adipisicing dolore mollit\",\n  \"total_time_taken_in_millis\": 41331837,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"session_id\": \"reprehenderit ullamco dolor\",\n    \"error_message\": \"nisi voluptate\"\n  },\n  \"payload\": {\n    \"session_id\": \"deserunt qui\",\n    \"error_message\": \"si\"\n  },\n  \"trace_id\": \"minim esse\",\n  \"page\": {\n    \"type\": \"non\",\n    \"size\": 95833741,\n    \"current\": 30761680,\n    \"has_next\": false,\n    \"item_total\": 71869321,\n    \"next_id\": \"non est\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6a9a04a3-73a6-4f16-8c1f-b115b6602235",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2001-10-15T05:54:58.236Z\",\n  \"status\": -82866900,\n  \"error\": \"repr\",\n  \"exception\": \"ex commodo eiusmod do\",\n  \"message\": \"non et adipisicing dolore mollit\",\n  \"total_time_taken_in_millis\": 41331837,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"session_id\": \"reprehenderit ullamco dolor\",\n    \"error_message\": \"nisi voluptate\"\n  },\n  \"payload\": {\n    \"session_id\": \"deserunt qui\",\n    \"error_message\": \"si\"\n  },\n  \"trace_id\": \"minim esse\",\n  \"page\": {\n    \"type\": \"non\",\n    \"size\": 95833741,\n    \"current\": 30761680,\n    \"has_next\": false,\n    \"item_total\": 71869321,\n    \"next_id\": \"non est\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "844f9cd5-1b96-444f-9b11-2fc1fe004c8b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2001-10-15T05:54:58.236Z\",\n  \"status\": -82866900,\n  \"error\": \"repr\",\n  \"exception\": \"ex commodo eiusmod do\",\n  \"message\": \"non et adipisicing dolore mollit\",\n  \"total_time_taken_in_millis\": 41331837,\n  \"http_status\": \"410 GONE\",\n  \"items\": {\n    \"session_id\": \"reprehenderit ullamco dolor\",\n    \"error_message\": \"nisi voluptate\"\n  },\n  \"payload\": {\n    \"session_id\": \"deserunt qui\",\n    \"error_message\": \"si\"\n  },\n  \"trace_id\": \"minim esse\",\n  \"page\": {\n    \"type\": \"non\",\n    \"size\": 95833741,\n    \"current\": 30761680,\n    \"has_next\": false,\n    \"item_total\": 71869321,\n    \"next_id\": \"non est\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6fd8faa5-f0eb-4eda-84b2-7eff90c6ca30",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "d13c2251-772e-439a-b3f7-27882b43c3de",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1968-05-19T15:34:35.375Z\",\n  \"status\": 1744803,\n  \"error\": \"laboris\",\n  \"exception\": \"commodo ullamco exercitation\",\n  \"message\": \"elit commodo id\",\n  \"total_time_taken_in_millis\": -56950428,\n  \"http_status\": \"202 ACCEPTED\",\n  \"items\": {\n    \"company_id\": 6113337,\n    \"integration_data\": {\n      \"pariatur_ca\": {}\n    },\n    \"company_name\": \"in nulla\",\n    \"task_details\": {\n      \"type\": 13783689,\n      \"group_list\": [\n        {\n          \"text\": \"sunt la\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"deserunt eu in culpa sit\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -12696573.623169184,\n      \"safe_stock\": -17947975,\n      \"period_threshold\": -16426531,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"in sed aliqua ea proident\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sint\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"enim eiusmod\",\n    \"alias\": \"labore labor\"\n  },\n  \"payload\": {\n    \"company_id\": -56725926,\n    \"integration_data\": {\n      \"enimf5\": {},\n      \"velit_82\": {}\n    },\n    \"company_name\": \"ullamco nisi qui ex\",\n    \"task_details\": {\n      \"type\": -5554776,\n      \"group_list\": [\n        {\n          \"text\": \"do voluptate fugiat nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"magna id nulla proident\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 35517596.81124732,\n      \"safe_stock\": 8891723,\n      \"period_threshold\": 30637259,\n      \"period_threshold_type\": \"DAYS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"quis enim aute fugiat\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"sed ut officia veniam\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"laborum ut magna\",\n    \"alias\": \"voluptate \"\n  },\n  \"trace_id\": \"in dolor nostrud eiusmod\",\n  \"page\": {\n    \"type\": \"nostrud\",\n    \"size\": -10850614,\n    \"current\": -17017084,\n    \"has_next\": true,\n    \"item_total\": 54282076,\n    \"next_id\": \"Ut dolor adipisicing anim Excepteur\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "66c07f64-7410-4f76-8bd1-1a000201e02f",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-10-17T13:41:16.597Z\",\n  \"status\": -57538319,\n  \"error\": \"Lorem eu ut commodo\",\n  \"exception\": \"laboris cillum\",\n  \"message\": \"minim ex\",\n  \"total_time_taken_in_millis\": -89585038,\n  \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n  \"items\": {\n    \"company_id\": -75450295,\n    \"integration_data\": {\n      \"id_8\": {},\n      \"nostrudb9\": {},\n      \"mollit5a2\": {}\n    },\n    \"company_name\": \"sit dolor non\",\n    \"task_details\": {\n      \"type\": 59510459,\n      \"group_list\": [\n        {\n          \"text\": \"proident in fugiat qui\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut sint labore aliquip\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -54563007.735871814,\n      \"safe_stock\": -54047802,\n      \"period_threshold\": 23565094,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"et tempor\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex non id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"laboris adipisicing\",\n    \"alias\": \"Lorem officia\"\n  },\n  \"payload\": {\n    \"company_id\": 65420833,\n    \"integration_data\": {\n      \"consequat_8\": {},\n      \"irure0_\": {}\n    },\n    \"company_name\": \"consequat Ut esse\",\n    \"task_details\": {\n      \"type\": 19926631,\n      \"group_list\": [\n        {\n          \"text\": \"eiusmod amet aute nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 44222316.68603298,\n      \"safe_stock\": -62172117,\n      \"period_threshold\": -45173486,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nulla ullamco laboris\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris fugiat minim labore in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ad Excepteur\",\n    \"alias\": \"pariatur et mollit\"\n  },\n  \"trace_id\": \"sit\",\n  \"page\": {\n    \"type\": \"consequat tempor consectetur exercitation\",\n    \"size\": 62940428,\n    \"current\": -1517639,\n    \"has_next\": false,\n    \"item_total\": -89380077,\n    \"next_id\": \"dolor ull\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9d7b49a6-979f-4636-8fd7-32d88b0f45d6",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "code",
                      "description": "(Required) Job Code"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-10-17T13:41:16.597Z\",\n  \"status\": -57538319,\n  \"error\": \"Lorem eu ut commodo\",\n  \"exception\": \"laboris cillum\",\n  \"message\": \"minim ex\",\n  \"total_time_taken_in_millis\": -89585038,\n  \"http_status\": \"101 SWITCHING_PROTOCOLS\",\n  \"items\": {\n    \"company_id\": -75450295,\n    \"integration_data\": {\n      \"id_8\": {},\n      \"nostrudb9\": {},\n      \"mollit5a2\": {}\n    },\n    \"company_name\": \"sit dolor non\",\n    \"task_details\": {\n      \"type\": 59510459,\n      \"group_list\": [\n        {\n          \"text\": \"proident in fugiat qui\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ut sint labore aliquip\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": -54563007.735871814,\n      \"safe_stock\": -54047802,\n      \"period_threshold\": 23565094,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"et tempor\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"ex non id\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"laboris adipisicing\",\n    \"alias\": \"Lorem officia\"\n  },\n  \"payload\": {\n    \"company_id\": 65420833,\n    \"integration_data\": {\n      \"consequat_8\": {},\n      \"irure0_\": {}\n    },\n    \"company_name\": \"consequat Ut esse\",\n    \"task_details\": {\n      \"type\": 19926631,\n      \"group_list\": [\n        {\n          \"text\": \"eiusmod amet aute nostrud\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris qui\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"threshold_details\": {\n      \"min_price\": 44222316.68603298,\n      \"safe_stock\": -62172117,\n      \"period_threshold\": -45173486,\n      \"period_threshold_type\": \"MONTHS\",\n      \"period_type_list\": [\n        {\n          \"text\": \"nulla ullamco laboris\",\n          \"value\": {}\n        },\n        {\n          \"text\": \"laboris fugiat minim labore in\",\n          \"value\": {}\n        }\n      ]\n    },\n    \"job_code\": \"ad Excepteur\",\n    \"alias\": \"pariatur et mollit\"\n  },\n  \"trace_id\": \"sit\",\n  \"page\": {\n    \"type\": \"consequat tempor consectetur exercitation\",\n    \"size\": 62940428,\n    \"current\": -1517639,\n    \"has_next\": false,\n    \"item_total\": -89380077,\n    \"next_id\": \"dolor ull\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "864f963e-d901-4c54-a0f1-0ddec16f8228",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "c54fad59-c6e7-4a04-a6d1-0435d046b687",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"1947-08-24T19:13:08.590Z\",\n  \"status\": -61236967,\n  \"error\": \"labore aliquip tempor magna\",\n  \"exception\": \"sint\",\n  \"message\": \"ut veniam exercitation sed\",\n  \"total_time_taken_in_millis\": 77746723,\n  \"http_status\": \"502 BAD_GATEWAY\",\n  \"items\": [\n    {\n      \"company_id\": -35276059,\n      \"integration_data\": {\n        \"fugiat6\": {},\n        \"inb31\": {}\n      },\n      \"company_name\": \"culpa\",\n      \"task_details\": {\n        \"type\": 20323764,\n        \"group_list\": [\n          {\n            \"text\": \"ut incididunt enim cillum\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eiusmod est dolo\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -72526131.60486008,\n        \"safe_stock\": 38177558,\n        \"period_threshold\": 25708192,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"mollit consequat pariatur esse dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ut et est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"occaecat ullamco ut minim\",\n      \"alias\": \"magna deserunt ad ipsum\"\n    },\n    {\n      \"company_id\": -5107199,\n      \"integration_data\": {\n        \"Duis4_\": {},\n        \"elitf\": {},\n        \"quis62\": {}\n      },\n      \"company_name\": \"enim officia\",\n      \"task_details\": {\n        \"type\": 47576767,\n        \"group_list\": [\n          {\n            \"text\": \"ut culpa ul\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa Ut elit sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -61480307.677806504,\n        \"safe_stock\": 63301418,\n        \"period_threshold\": 25772534,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"Excepteur est in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"consectetur cillum ut est\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum quis\",\n      \"alias\": \"ipsum Ut proident qui\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -85316080,\n      \"integration_data\": {\n        \"magna_a_\": {}\n      },\n      \"company_name\": \"deserunt tempor\",\n      \"task_details\": {\n        \"type\": -26167453,\n        \"group_list\": [\n          {\n            \"text\": \"dolore cupidatat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"sint\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": 15156144.756722242,\n        \"safe_stock\": 1805886,\n        \"period_threshold\": -52580699,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"et occaecat mollit dolor\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"non dolore in nostrud\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"Duis sunt proident\",\n      \"alias\": \"enim qui esse\"\n    },\n    {\n      \"company_id\": 39002833,\n      \"integration_data\": {\n        \"ad3\": {},\n        \"aliquae\": {}\n      },\n      \"company_name\": \"cupidatat quis tempor\",\n      \"task_details\": {\n        \"type\": -9057659,\n        \"group_list\": [\n          {\n            \"text\": \"labore reprehenderit\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"veniam cupidatat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -13728942.374079004,\n        \"safe_stock\": 27082609,\n        \"period_threshold\": 71574568,\n        \"period_threshold_type\": \"MONTHS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"anim ex Duis minim cupidatat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"ea minim in Excepteur\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"ad sed\",\n      \"alias\": \"laborum ea\"\n    }\n  ],\n  \"trace_id\": \"nisi dolore cupidatat veniam minim\",\n  \"page\": {\n    \"type\": \"officia culpa do consequat\",\n    \"size\": 54260089,\n    \"current\": -1590399,\n    \"has_next\": true,\n    \"item_total\": -33854609,\n    \"next_id\": \"dolore id enim\",\n    \"has_previous\": true\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bc4f1b59-196a-4cb4-a19b-a50da82e87b5",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-12-10T02:57:25.236Z\",\n  \"status\": 9833309,\n  \"error\": \"consectetur ut occaecat esse est\",\n  \"exception\": \"ea proident anim\",\n  \"message\": \"minim ullamco\",\n  \"total_time_taken_in_millis\": 27113291,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": [\n    {\n      \"company_id\": 24805082,\n      \"integration_data\": {\n        \"nisi_644\": {},\n        \"dolore__a\": {}\n      },\n      \"company_name\": \"dolore dolore ad Duis mollit\",\n      \"task_details\": {\n        \"type\": -99597070,\n        \"group_list\": [\n          {\n            \"text\": \"sed quis occaecat eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -54250972.92487817,\n        \"safe_stock\": 74990926,\n        \"period_threshold\": 49850527,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"culpa ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui\",\n      \"alias\": \"pariatur Ut in\"\n    },\n    {\n      \"company_id\": 87858733,\n      \"integration_data\": {\n        \"nisiaa\": {}\n      },\n      \"company_name\": \"cupidatat dolor deserunt\",\n      \"task_details\": {\n        \"type\": 38211359,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate dolor do in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu culpa sed non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -89090477.11281292,\n        \"safe_stock\": -67732168,\n        \"period_threshold\": -12357100,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolor voluptate ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum Excepteur incididunt occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"proident id non culpa dolore\",\n      \"alias\": \"anim velit elit non\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -58916808,\n      \"integration_data\": {\n        \"consequat_ff\": {}\n      },\n      \"company_name\": \"aliquip non qui\",\n      \"task_details\": {\n        \"type\": -55475491,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip consectetur in in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -44134119.662241034,\n        \"safe_stock\": -66994166,\n        \"period_threshold\": -11481995,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"veniam dolor sunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et amet eiusmod dolore in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum cupidatat\",\n      \"alias\": \"ea adipisicing\"\n    },\n    {\n      \"company_id\": 74394175,\n      \"integration_data\": {\n        \"sunt9\": {},\n        \"elitff0\": {},\n        \"cupidatat_d0\": {},\n        \"laborum_4a\": {}\n      },\n      \"company_name\": \"dolore sunt\",\n      \"task_details\": {\n        \"type\": -57091576,\n        \"group_list\": [\n          {\n            \"text\": \"irure ipsum culpa occaecat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -45227303.36527272,\n        \"safe_stock\": 91634187,\n        \"period_threshold\": -32743009,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"magn\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"labore tempor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"minim enim in\",\n      \"alias\": \"proident non consequat enim\"\n    }\n  ],\n  \"trace_id\": \"adipisicing\",\n  \"page\": {\n    \"type\": \"e\",\n    \"size\": 6868090,\n    \"current\": -71729751,\n    \"has_next\": true,\n    \"item_total\": 78997175,\n    \"next_id\": \"ea ad dolore aute\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9fea22bb-a60d-42ee-b7fa-18412dff81bb",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"timestamp\": \"2013-12-10T02:57:25.236Z\",\n  \"status\": 9833309,\n  \"error\": \"consectetur ut occaecat esse est\",\n  \"exception\": \"ea proident anim\",\n  \"message\": \"minim ullamco\",\n  \"total_time_taken_in_millis\": 27113291,\n  \"http_status\": \"413 PAYLOAD_TOO_LARGE\",\n  \"items\": [\n    {\n      \"company_id\": 24805082,\n      \"integration_data\": {\n        \"nisi_644\": {},\n        \"dolore__a\": {}\n      },\n      \"company_name\": \"dolore dolore ad Duis mollit\",\n      \"task_details\": {\n        \"type\": -99597070,\n        \"group_list\": [\n          {\n            \"text\": \"sed quis occaecat eiusmod\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"tempor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -54250972.92487817,\n        \"safe_stock\": 74990926,\n        \"period_threshold\": 49850527,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"culpa ullamco\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"culpa\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"qui\",\n      \"alias\": \"pariatur Ut in\"\n    },\n    {\n      \"company_id\": 87858733,\n      \"integration_data\": {\n        \"nisiaa\": {}\n      },\n      \"company_name\": \"cupidatat dolor deserunt\",\n      \"task_details\": {\n        \"type\": 38211359,\n        \"group_list\": [\n          {\n            \"text\": \"voluptate dolor do in\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"eu culpa sed non\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -89090477.11281292,\n        \"safe_stock\": -67732168,\n        \"period_threshold\": -12357100,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"dolor voluptate ad\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"laborum Excepteur incididunt occaecat\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"proident id non culpa dolore\",\n      \"alias\": \"anim velit elit non\"\n    }\n  ],\n  \"payload\": [\n    {\n      \"company_id\": -58916808,\n      \"integration_data\": {\n        \"consequat_ff\": {}\n      },\n      \"company_name\": \"aliquip non qui\",\n      \"task_details\": {\n        \"type\": -55475491,\n        \"group_list\": [\n          {\n            \"text\": \"Excepteur laboris\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"aliquip consectetur in in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -44134119.662241034,\n        \"safe_stock\": -66994166,\n        \"period_threshold\": -11481995,\n        \"period_threshold_type\": \"WEEKS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"veniam dolor sunt\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"et amet eiusmod dolore in\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"cillum cupidatat\",\n      \"alias\": \"ea adipisicing\"\n    },\n    {\n      \"company_id\": 74394175,\n      \"integration_data\": {\n        \"sunt9\": {},\n        \"elitff0\": {},\n        \"cupidatat_d0\": {},\n        \"laborum_4a\": {}\n      },\n      \"company_name\": \"dolore sunt\",\n      \"task_details\": {\n        \"type\": -57091576,\n        \"group_list\": [\n          {\n            \"text\": \"irure ipsum culpa occaecat\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"exercitation aliqua\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"threshold_details\": {\n        \"min_price\": -45227303.36527272,\n        \"safe_stock\": 91634187,\n        \"period_threshold\": -32743009,\n        \"period_threshold_type\": \"DAYS\",\n        \"period_type_list\": [\n          {\n            \"text\": \"magn\",\n            \"value\": {}\n          },\n          {\n            \"text\": \"labore tempor\",\n            \"value\": {}\n          }\n        ]\n      },\n      \"job_code\": \"minim enim in\",\n      \"alias\": \"proident non consequat enim\"\n    }\n  ],\n  \"trace_id\": \"adipisicing\",\n  \"page\": {\n    \"type\": \"e\",\n    \"size\": 6868090,\n    \"current\": -71729751,\n    \"has_next\": true,\n    \"item_total\": 78997175,\n    \"next_id\": \"ea ad dolore aute\",\n    \"has_previous\": false\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4f260454-118b-48c5-8671-151f9e6527cb",
      "name": "Partner",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a385b936-78af-46b7-bede-15c36023c0b2",
          "name": "getPanelExtensionDetails | Get extension details",
          "request": {
            "name": "getPanelExtensionDetails | Get extension details",
            "description": {
              "content": "Use this API to get extension details",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "panel",
                "partners",
                "v1.0",
                "extensions",
                ":slug"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "slug",
                  "description": "(Required) pass the slug of the extension"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "85c369e3-7b11-4786-931e-48d31ea694f3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "panel",
                    "partners",
                    "v1.0",
                    "extensions",
                    ":slug"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "slug",
                      "description": "(Required) pass the slug of the extension"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"_id\": \"633ab5cb635a41fdde9fb648\",\n  \"organization_id\": \"6333fef3b1d85e44e738c138\",\n  \"extension_id\": \"633425ebb1d85e44e738c2ab\",\n  \"slug\": \"example-extension-1\",\n  \"scope\": [\n    \"company/profile\",\n    \"company/saleschannel\",\n    \"company/product\",\n    \"company/order\",\n    \"company/application/customer\",\n    \"company/application/analytics\",\n    \"company/application/storage\",\n    \"company/application/marketing\",\n    \"company/application/catalogue\",\n    \"company/application/communication\",\n    \"company/application/support\",\n    \"company/application/order\",\n    \"company/application/settings\"\n  ],\n  \"category\": {\n    \"categories_l1\": [],\n    \"categories_l2\": []\n  },\n  \"listing_info\": {\n    \"name\": \"ujjawal-example-extension-1\",\n    \"keywords\": [],\n    \"tagline\": \"test-extension for test how extensions look and work and how to create them\",\n    \"icon\": \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/AMwIEOw0U-logo.png\"\n  },\n  \"details\": {\n    \"benefits\": [\n      {\n        \"title\": \"Works fast\",\n        \"description\": \"works fast\",\n        \"_id\": \"633ab5cb635a41fdde9fb649\"\n      }\n    ],\n    \"screenshots\": {\n      \"desktop\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/g95yHXkou-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/IKdHxP2fN-1024x576.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/_auq1yvEp-1024x576.png\"\n      ],\n      \"mobile\": [\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/E_YAHM9cU-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/vEnXw9cCg-600x900.png\",\n        \"https://hdn-1.addsale.com/x0/misc/pictures/free-icon/original/O3Wng4Rqn-600x900.png\"\n      ]\n    },\n    \"description\": \"Sample public extension\",\n    \"demo_url\": \"\",\n    \"video_url\": [\n      {\n        \"type\": \"video\",\n        \"url\": \"https://hdn-1.addsale.com/x0/products/videos/item/free/original/kizLVNWyS-video-sc-1.mp4\"\n      }\n    ],\n    \"integrations\": []\n  },\n  \"plan_type\": \"free\",\n  \"plans\": [\n    {\n      \"name\": \"Custom Free\",\n      \"features\": \"provides ease\",\n      \"type\": \"free\",\n      \"price\": {\n        \"amount\": 0,\n        \"currency\": \"INR\"\n      },\n      \"trial_days\": 0,\n      \"additional_charges\": \"\"\n    }\n  ],\n  \"plans_url\": \"\",\n  \"contact_info\": {\n    \"support\": {\n      \"email\": \"ujjawaltaleja@gofynd.com\",\n      \"phone\": \"7988169279\",\n      \"website_url\": \"\",\n      \"faq_url\": \"\",\n      \"privacy_policy_url\": \"\"\n    }\n  },\n  \"current_status\": \"active\",\n  \"coming_soon\": {\n    \"is_coming_soon\": false,\n    \"upvote_count\": 0\n  },\n  \"created_at\": \"2022-10-03T10:13:31.607Z\",\n  \"modified_at\": \"2022-10-03T10:13:31.607Z\",\n  \"organization\": {\n    \"name\": \"ujjawal-partners-fashion\",\n    \"slug\": \"ujjawa-w7t-68\"\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "bc860e8d-072e-4839-8651-957c7ffcdcf7",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "80d414d6-e278-4e89-8aba-9a20287f2c25",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ecb4ede3-2bf2-4ed2-8d0f-ce48f40b3fc6",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "506ae340-2512-484f-b5ff-7e12912b5265",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  },\n  {\n    \"event_name\": \"<string>\",\n    \"event_type\": \"<string>\",\n    \"event_category\": \"<string>\",\n    \"version\": \"<string>\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "40f495f0-bfd9-4db2-b138-2bda79407bba",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"event_name\": \"article\",\n    \"event_type\": \"update\",\n    \"event_category\": \"company\",\n    \"version\": \"1\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f434703f-1d99-421f-8797-1b70c476abd4",
          "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
          "request": {
            "name": "notifyDepricatedEvent | Notifies all the events that are going to depricate",
            "description": {
              "content": "Notifies all the events that are subscribed and are going to deprecate or new version is available for those events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "depricated-event-notifier"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "7c8530d6-8682-452f-b570-258eadb059e3",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "depricated-event-notifier"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_configs\": [\n    {\n      \"id\": 1,\n      \"event_name\": \"article\",\n      \"event_type\": \"create\",\n      \"event_category\": \"application\",\n      \"version\": \"1\",\n      \"display_name\": \"article\",\n      \"description\": \"This event gets triggered when an article is created\",\n      \"event_schema\": null,\n      \"created_on\": \"2021-12-20T17:38:22.922Z\",\n      \"updated_on\": \"2023-07-26T12:30:30.930Z\"\n    }\n  ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "714e0058-a4b2-4241-8881-8135afeb39cb",
          "name": "testHandlerTransformation | Test transformation of handler",
          "request": {
            "name": "testHandlerTransformation | Test transformation of handler",
            "description": {
              "content": "Test transformation of handler",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "transform-event"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"ad_29\": 2795981,\n      \"proident1\": 63232210.40271005\n    },\n    \"meta\": {\n      \"Excepteur_b7\": -32440575\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "66b8a576-1764-4b62-b0d4-b2b6d8bbe676",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "transform-event"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"event_trace_id\": [\n    \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n  ],\n  \"data\": {\n    \"event\": {\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"name\": \"location\",\n      \"type\": \"create\",\n      \"version\": \"1\",\n      \"created_timestamp\": 1698111704725\n    },\n    \"company_id\": 6086,\n    \"contains\": [\n      \"location\"\n    ],\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    }\n  },\n  \"event_name\": \"location\",\n  \"version\": \"1\",\n  \"status\": false,\n  \"event_type\": \"create\",\n  \"service_meta\": {\n    \"name\": \"WheelJack\"\n  },\n  \"association\": {\n    \"company_id\": 6086\n  }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c87799ad-ee40-4f7e-b1e8-ea4309d963ad",
          "name": "validateSchema | Validate Schema for an event",
          "request": {
            "name": "validateSchema | Validate Schema for an event",
            "description": {
              "content": "Validate Schema for an event",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "validate-event-schema"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event_name\": \"<string>\",\n  \"event_type\": \"<string>\",\n  \"event_category\": \"<string>\",\n  \"event_version\": \"<string>\",\n  \"event\": {\n    \"payload\": {\n      \"Lorem__ec\": \"aliquip reprehenderit qui aliqua\",\n      \"tempor_b8\": 41125672\n    },\n    \"meta\": {\n      \"tempor2\": -67019878,\n      \"quisb\": -92393693.62129536,\n      \"nulla_239\": false,\n      \"Ut_c_\": -89748297\n    }\n  },\n  \"event_schema\": {\n    \"ipsum_f\": -77657842,\n    \"amet11\": true\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "id": "f3ac4325-ca84-4ca3-a5a2-0cec5c614d89",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "validate-event-schema"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"event_name\": \"location\",\n  \"event_type\": \"create\",\n  \"event_category\": \"company\",\n  \"event_version\": \"1\",\n  \"event\": {\n    \"payload\": {\n      \"location\": {\n        \"_id\": \"653720d892a8429b6fb9563e\",\n        \"created_on\": \"2023-10-24T01:41:44.450008\",\n        \"modified_on\": \"2023-10-24T01:41:44.450015\"\n      }\n    },\n    \"meta\": {\n      \"event\": {\n        \"type\": \"create\",\n        \"name\": \"location\",\n        \"version\": \"1\"\n      },\n      \"company_id\": 6086,\n      \"service\": {\n        \"name\": \"WheelJack\"\n      },\n      \"trace_id\": [\n        \"WheelJack.7cfeea2e-720e-11ee-8f26-ca3fc26a3fda\"\n      ],\n      \"created_timestamp\": 1698111704725\n    }\n  },\n  \"event_schema\": {}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"status\": true,\n  \"message\": \"Valid schema for this event\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fynd.com"
    }
  ],
  "info": {
    "_postman_id": "f00be6d5-3b2b-4ab6-8538-82eb66faa3f1",
    "name": "Fynd Platform's Public Side APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public Side APIs",
      "type": "text/plain"
    }
  }
}
