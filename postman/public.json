{
  "item": [
    {
      "id": "5f44f9e5-ab81-49d2-9e8b-5b1b7057a9b7",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "2fbcef36-d881-4658-91b5-496af9a956f4",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ced3a6af-feed-422b-bc71-195c805b6f60",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in dolore nulla nostrud",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a25c9936-625b-4aad-970e-7a212ca5c2e0",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in dolore nulla nostrud",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "91f224c5-4058-4eff-ad5f-008e636c5295",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "in dolore nulla nostrud",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "cf42d514-a719-41f7-a4a1-430f260312d7",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "cb00f128-05a2-4468-8dd3-4865f67a0187",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "29b51d86-07ce-445a-a46b-b449dc28f40c",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5ce649b9-9659-41dc-8200-8ef37b4f5240",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "41a6de67-0592-44d0-b45b-1959524eae47",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 6856939,\n   \"event_name\": \"esse qui ut\",\n   \"event_type\": \"et in Excepteur\",\n   \"event_category\": \"cillum in\",\n   \"version\": \"voluptate anim tempor sunt\",\n   \"display_name\": \"pariatur dolore ut\",\n   \"description\": \"veniam minim\",\n   \"created_on\": \"ut eu nostrud veniam ipsum\"\n  },\n  {\n   \"id\": -99216329,\n   \"event_name\": \"ut ea magna \",\n   \"event_type\": \"officia ea et nulla\",\n   \"event_category\": \"officia labore Ut\",\n   \"version\": \"culpa\",\n   \"display_name\": \"velit par\",\n   \"description\": \"Excepteur consequat ea exercitation Duis\",\n   \"created_on\": \"et in dolore\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "7aec8030-6f69-41c7-9832-5ddb7bb4c064",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "7c6a885c-b2c4-4003-a885-496e03ff26c2",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -70389584,\n   \"event_name\": \"est Excepteur et sed\",\n   \"event_type\": \"sunt commodo fugiat\",\n   \"event_category\": \"magna eu\",\n   \"version\": \"eu voluptate\",\n   \"display_name\": \"ea eiusmod\",\n   \"description\": \"dolore reprehenderit Ut voluptate\",\n   \"created_on\": \"in dolore labore\"\n  },\n  {\n   \"id\": -71551286,\n   \"event_name\": \"deserunt ut\",\n   \"event_type\": \"eiusmod laborum irure\",\n   \"event_category\": \"ullamco occaecat do nisi minim\",\n   \"version\": \"sit enim fugiat in\",\n   \"display_name\": \"Ut commodo\",\n   \"description\": \"labore laboris pariatur dolore\",\n   \"created_on\": \"quis Ut dolor dolore\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "c40725d4-7a05-4f7c-886f-ae0d9c86b3b1",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5d221c56-7a31-4c49-b770-0f95b923c860",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "6d2e2bc8-d254-45ee-a6af-1c55203c2646",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1953-07-12T01:03:11.284Z\",\n \"status\": 27355190,\n \"error\": \"aliquip\",\n \"exception\": \"cupidatat irure\",\n \"message\": \"magna Lorem incididunt pariatur deserunt\",\n \"total_time_taken_in_millis\": -91481459,\n \"http_status\": \"207 MULTI_STATUS\",\n \"items\": [\n  {\n   \"company_id\": 14429683,\n   \"integration_data\": {},\n   \"company_name\": \"deserunt dolor tempor ex\",\n   \"task_details\": {\n    \"type\": -82121748,\n    \"group_list\": [\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore irure pariatur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 16017625.239871025,\n    \"safe_stock\": 4641575,\n    \"period_threshold\": 54105024,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliqua\",\n   \"alias\": \"Ut consectetur\"\n  },\n  {\n   \"company_id\": 21425060,\n   \"integration_data\": {},\n   \"company_name\": \"qui amet\",\n   \"task_details\": {\n    \"type\": 40493085,\n    \"group_list\": [\n     {\n      \"text\": \"fugiat esse qui\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 1481010.4200773537,\n    \"safe_stock\": -44865004,\n    \"period_threshold\": -5299518,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ex laborum anim Lorem\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"id ea in dolor fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"incididunt reprehenderit amet\",\n   \"alias\": \"sed reprehenderit consequat dolor\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 42426293,\n   \"integration_data\": {},\n   \"company_name\": \"no\",\n   \"task_details\": {\n    \"type\": -48033894,\n    \"group_list\": [\n     {\n      \"text\": \"Excepteur\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sed eiusmod ea adipisicing\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 98136859.11340055,\n    \"safe_stock\": 92459666,\n    \"period_threshold\": -64747062,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"et in nisi\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"quis ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla dolor incididunt\",\n   \"alias\": \"incididunt exercitation pariatur officia\"\n  },\n  {\n   \"company_id\": -55174541,\n   \"integration_data\": {},\n   \"company_name\": \"quis reprehe\",\n   \"task_details\": {\n    \"type\": -933751,\n    \"group_list\": [\n     {\n      \"text\": \"aute ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"incididunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 14918945.980284095,\n    \"safe_stock\": -53333436,\n    \"period_threshold\": -60510559,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"pariatur reprehenderit aliquip amet\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate reprehenderit quis\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"consectetur in sunt reprehenderit\",\n   \"alias\": \"incididunt irure\"\n  }\n ],\n \"trace_id\": \"aliqua ex magna ut\",\n \"page\": {\n  \"type\": \"ad\",\n  \"size\": -15279936,\n  \"current\": 55893622,\n  \"has_next\": true,\n  \"item_total\": -931796,\n  \"next_id\": \"ad esse laborum veniam\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8755c67c-1ef2-4742-bed0-024b7c9489e3",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-04-15T09:53:43.389Z\",\n \"status\": -37827835,\n \"error\": \"sit laboris\",\n \"exception\": \"consequat anim in Ut\",\n \"message\": \"eiusmod veniam aliquip est magna\",\n \"total_time_taken_in_millis\": 68000298,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": [\n  {\n   \"company_id\": 60193647,\n   \"integration_data\": {},\n   \"company_name\": \"mollit dolore incididunt\",\n   \"task_details\": {\n    \"type\": 62661484,\n    \"group_list\": [\n     {\n      \"text\": \"in mollit sit dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ut magna minim consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -46480581.1394696,\n    \"safe_stock\": -76617277,\n    \"period_threshold\": 82355593,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna fugiat cillum exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt ut dolor anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et deserunt veniam sunt\",\n   \"alias\": \"in sint\"\n  },\n  {\n   \"company_id\": 29848564,\n   \"integration_data\": {},\n   \"company_name\": \"enim eiusmod consectetur\",\n   \"task_details\": {\n    \"type\": 24065379,\n    \"group_list\": [\n     {\n      \"text\": \"est anim ea sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit dolore fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 87596685.96187261,\n    \"safe_stock\": 59944434,\n    \"period_threshold\": 90876197,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla culpa\",\n   \"alias\": \"pariatur labore cupidatat fugia\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 91673830,\n   \"integration_data\": {},\n   \"company_name\": \"laborum Lorem\",\n   \"task_details\": {\n    \"type\": -14267700,\n    \"group_list\": [\n     {\n      \"text\": \"sit aliqua u\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing Excepteur esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -94960396.84313935,\n    \"safe_stock\": 16470051,\n    \"period_threshold\": -85492986,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit ad nostrud fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo elit culpa Excepteur voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut labore ex mollit\",\n   \"alias\": \"ullamco dolor laborum minim\"\n  },\n  {\n   \"company_id\": 93478775,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud elit ut\",\n   \"task_details\": {\n    \"type\": 86685906,\n    \"group_list\": [\n     {\n      \"text\": \"ea exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum amet veniam Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5830667.405823141,\n    \"safe_stock\": -92339734,\n    \"period_threshold\": -49502378,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore dolore cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut in ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim aute velit\",\n   \"alias\": \"labore dolor enim in commodo\"\n  }\n ],\n \"trace_id\": \"aute ex consectetur proident\",\n \"page\": {\n  \"type\": \"sit officia ullamco laborum proident\",\n  \"size\": 53525830,\n  \"current\": 74837790,\n  \"has_next\": false,\n  \"item_total\": 94284210,\n  \"next_id\": \"pariatur ea in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "1ab624cb-e58f-4a33-86af-412466c7f656",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2003-04-15T09:53:43.389Z\",\n \"status\": -37827835,\n \"error\": \"sit laboris\",\n \"exception\": \"consequat anim in Ut\",\n \"message\": \"eiusmod veniam aliquip est magna\",\n \"total_time_taken_in_millis\": 68000298,\n \"http_status\": \"501 NOT_IMPLEMENTED\",\n \"items\": [\n  {\n   \"company_id\": 60193647,\n   \"integration_data\": {},\n   \"company_name\": \"mollit dolore incididunt\",\n   \"task_details\": {\n    \"type\": 62661484,\n    \"group_list\": [\n     {\n      \"text\": \"in mollit sit dolor\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Ut ut magna minim consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -46480581.1394696,\n    \"safe_stock\": -76617277,\n    \"period_threshold\": 82355593,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna fugiat cillum exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"deserunt ut dolor anim\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"et deserunt veniam sunt\",\n   \"alias\": \"in sint\"\n  },\n  {\n   \"company_id\": 29848564,\n   \"integration_data\": {},\n   \"company_name\": \"enim eiusmod consectetur\",\n   \"task_details\": {\n    \"type\": 24065379,\n    \"group_list\": [\n     {\n      \"text\": \"est anim ea sit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"sit dolore fugiat\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 87596685.96187261,\n    \"safe_stock\": 59944434,\n    \"period_threshold\": 90876197,\n    \"period_threshold_type\": \"MONTHS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"deserunt non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"eu in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"nulla culpa\",\n   \"alias\": \"pariatur labore cupidatat fugia\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 91673830,\n   \"integration_data\": {},\n   \"company_name\": \"laborum Lorem\",\n   \"task_details\": {\n    \"type\": -14267700,\n    \"group_list\": [\n     {\n      \"text\": \"sit aliqua u\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"adipisicing Excepteur esse\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": -94960396.84313935,\n    \"safe_stock\": 16470051,\n    \"period_threshold\": -85492986,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"sit ad nostrud fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"commodo elit culpa Excepteur voluptate\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ut labore ex mollit\",\n   \"alias\": \"ullamco dolor laborum minim\"\n  },\n  {\n   \"company_id\": 93478775,\n   \"integration_data\": {},\n   \"company_name\": \"nostrud elit ut\",\n   \"task_details\": {\n    \"type\": 86685906,\n    \"group_list\": [\n     {\n      \"text\": \"ea exercitation\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"cillum amet veniam Excepteur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 5830667.405823141,\n    \"safe_stock\": -92339734,\n    \"period_threshold\": -49502378,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"labore dolore cillum\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut in ad\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"anim aute velit\",\n   \"alias\": \"labore dolor enim in commodo\"\n  }\n ],\n \"trace_id\": \"aute ex consectetur proident\",\n \"page\": {\n  \"type\": \"sit officia ullamco laborum proident\",\n  \"size\": 53525830,\n  \"current\": 74837790,\n  \"has_next\": false,\n  \"item_total\": 94284210,\n  \"next_id\": \"pariatur ea in\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "4451db7e-ef64-4072-8ece-b7d7a377371f",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "b61d597b-c9ac-405d-8e18-36cfc45ff4bb",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-04-29T13:37:27.164Z\",\n \"status\": 4457992,\n \"error\": \"ad dolor\",\n \"exception\": \"exercitation\",\n \"message\": \"velit aute ut in\",\n \"total_time_taken_in_millis\": 78977280,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ipsum esse\",\n \"page\": {\n  \"type\": \"in laboris\",\n  \"size\": 39200703,\n  \"current\": 75341195,\n  \"has_next\": true,\n  \"item_total\": -73670695,\n  \"next_id\": \"sed veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "41c0212c-dba5-41d6-9c7f-7e970f5e3f06",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-04-29T13:37:27.164Z\",\n \"status\": 4457992,\n \"error\": \"ad dolor\",\n \"exception\": \"exercitation\",\n \"message\": \"velit aute ut in\",\n \"total_time_taken_in_millis\": 78977280,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ipsum esse\",\n \"page\": {\n  \"type\": \"in laboris\",\n  \"size\": 39200703,\n  \"current\": 75341195,\n  \"has_next\": true,\n  \"item_total\": -73670695,\n  \"next_id\": \"sed veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "dfe6f7ef-85dc-4dc1-b01e-ce292d8a6ab7",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1954-04-29T13:37:27.164Z\",\n \"status\": 4457992,\n \"error\": \"ad dolor\",\n \"exception\": \"exercitation\",\n \"message\": \"velit aute ut in\",\n \"total_time_taken_in_millis\": 78977280,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"ipsum esse\",\n \"page\": {\n  \"type\": \"in laboris\",\n  \"size\": 39200703,\n  \"current\": 75341195,\n  \"has_next\": true,\n  \"item_total\": -73670695,\n  \"next_id\": \"sed veniam\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "5793c2d9-208d-4f50-9403-944a0d878959",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "51df603c-e9f0-4771-951c-6dd51a867b90",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-12-24T05:13:27.227Z\",\n \"status\": -3282664,\n \"error\": \"officia aute nisi\",\n \"exception\": \"o\",\n \"message\": \"eiusmod nostrud\",\n \"total_time_taken_in_millis\": -22551358,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"esse\",\n \"page\": {\n  \"type\": \"ut nisi\",\n  \"size\": -24448757,\n  \"current\": -81235662,\n  \"has_next\": true,\n  \"item_total\": -78764242,\n  \"next_id\": \"ut aliquip ea\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "25b418da-727c-4775-9c32-234b54fd4d89",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-12-24T05:13:27.227Z\",\n \"status\": -3282664,\n \"error\": \"officia aute nisi\",\n \"exception\": \"o\",\n \"message\": \"eiusmod nostrud\",\n \"total_time_taken_in_millis\": -22551358,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"esse\",\n \"page\": {\n  \"type\": \"ut nisi\",\n  \"size\": -24448757,\n  \"current\": -81235662,\n  \"has_next\": true,\n  \"item_total\": -78764242,\n  \"next_id\": \"ut aliquip ea\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8b695d02-99a0-49a1-8083-21caaf6b8e67",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-12-24T05:13:27.227Z\",\n \"status\": -3282664,\n \"error\": \"officia aute nisi\",\n \"exception\": \"o\",\n \"message\": \"eiusmod nostrud\",\n \"total_time_taken_in_millis\": -22551358,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"esse\",\n \"page\": {\n  \"type\": \"ut nisi\",\n  \"size\": -24448757,\n  \"current\": -81235662,\n  \"has_next\": true,\n  \"item_total\": -78764242,\n  \"next_id\": \"ut aliquip ea\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "2604cc9c-f50c-4908-a64d-60b9101c1d91",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-12-24T05:13:27.227Z\",\n \"status\": -3282664,\n \"error\": \"officia aute nisi\",\n \"exception\": \"o\",\n \"message\": \"eiusmod nostrud\",\n \"total_time_taken_in_millis\": -22551358,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"esse\",\n \"page\": {\n  \"type\": \"ut nisi\",\n  \"size\": -24448757,\n  \"current\": -81235662,\n  \"has_next\": true,\n  \"item_total\": -78764242,\n  \"next_id\": \"ut aliquip ea\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "8aebab95-5bb3-4821-bfda-e3716c9f0a31",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2000-12-24T05:13:27.227Z\",\n \"status\": -3282664,\n \"error\": \"officia aute nisi\",\n \"exception\": \"o\",\n \"message\": \"eiusmod nostrud\",\n \"total_time_taken_in_millis\": -22551358,\n \"http_status\": \"202 ACCEPTED\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"esse\",\n \"page\": {\n  \"type\": \"ut nisi\",\n  \"size\": -24448757,\n  \"current\": -81235662,\n  \"has_next\": true,\n  \"item_total\": -78764242,\n  \"next_id\": \"ut aliquip ea\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.fyndx0.de"
    }
  ],
  "info": {
    "_postman_id": "cb87d8fc-4bee-4202-a07e-33cc9bcb0dbc",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
