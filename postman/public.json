{
  "item": [
    {
      "id": "1655c84d-7a05-45cf-98cc-e7dfa1979aec",
      "name": "Configuration",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "784f470b-bf0d-40d4-82de-6a4a48f5ee1c",
          "name": "searchApplication | Search Application",
          "request": {
            "name": "searchApplication | Search Application",
            "description": {
              "content": "Provide application name or domain url",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "application",
                "search-application"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "query",
                  "value": "<string>",
                  "description": "Provide application name"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "003acab1-9a7e-40de-825b-706a951697e5",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Ut qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"application\": {\n  \"website\": {\n   \"enabled\": true,\n   \"basepath\": \"/\"\n  },\n  \"cors\": {\n   \"domains\": []\n  },\n  \"auth\": {\n   \"enabled\": true\n  },\n  \"description\": \"test\",\n  \"channel_type\": \"store\",\n  \"cache_ttl\": -1,\n  \"internal\": false,\n  \"is_active\": true,\n  \"mode\": \"live\",\n  \"_id\": \"620b931ee7bfb11f910bf4a3\",\n  \"company_id\": 2,\n  \"name\": \"test\",\n  \"owner\": \"5b9b98150df588546aaea6d2\",\n  \"logo\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"favicon\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/free-logo/original/olqHM8LNr-JioMart-Groceries.png\"\n  },\n  \"banner\": {\n   \"secure_url\": \"https://hdn-1.addsale.com/x0/company/164/applications/5efc9913f474c329718e3690/application/pictures/landscape-banner/original/D2fr98CUH-JioMart-Groceries.png\"\n  },\n  \"token\": \"tPQv0nc23\",\n  \"tokens\": [\n   {\n    \"token\": \"tPQv0nc23\",\n    \"created_at\": \"2022-02-15T11:48:46.909Z\"\n   }\n  ],\n  \"domains\": [\n   {\n    \"verified\": true,\n    \"is_primary\": true,\n    \"is_shortlink\": true,\n    \"_id\": \"620b931ee7bfb11f910bf4a4\",\n    \"name\": \"qckvv5lhp.hostfynd.dev\"\n   }\n  ],\n  \"redirections\": [],\n  \"meta\": [],\n  \"created_at\": \"2022-02-15T11:48:46.909Z\",\n  \"modified_at\": \"2022-02-15T11:48:46.909Z\",\n  \"__v\": 0,\n  \"domain\": {\n   \"verified\": true,\n   \"is_primary\": true,\n   \"is_shortlink\": true,\n   \"_id\": \"620b931ee7bfb11f910bf4a4\",\n   \"name\": \"qckvv5lhp.hostfynd.dev\"\n  },\n  \"id\": \"620b931ee7bfb11f910bf4a3\"\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "42a55f9d-af6e-4f1a-8de9-81a5a7c85bda",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Ut qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": [],
              "_postman_previewlanguage": "text"
            },
            {
              "id": "a4f735a4-e9f7-4a93-872c-5304e137b2ff",
              "name": "Not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "application",
                    "search-application"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "query",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "key": "authorization",
                    "value": "Ut qui",
                    "description": ""
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"message\": \"No application found\"\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b5e8a67b-39a0-4ebc-b973-68bc401c0f70",
          "name": "getLocations | Get countries, states, cities",
          "request": {
            "name": "getLocations | Get countries, states, cities",
            "description": {},
            "url": {
              "path": [
                "service",
                "common",
                "configuration",
                "v1.0",
                "location"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "location_type",
                  "value": "<string>",
                  "description": "Provide location type to query on. Possible values : country, state, city"
                },
                {
                  "disabled": false,
                  "key": "id",
                  "value": "<string>",
                  "description": "Field is optional when location_type is country. If querying for state, provide id of country. If querying for city, provide id of state."
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "dd8e85c1-d036-405d-b5f7-7e6a2f30a563",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "configuration",
                    "v1.0",
                    "location"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "location_type",
                      "value": "<string>"
                    },
                    {
                      "key": "id",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6bdbf9bb-5d54-420b-8dd8-5a7b8b544361",
      "name": "Webhook",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "cafe6249-283a-468d-89b3-3632d8dba584",
          "name": "fetchAllWebhookEvents | Get All Webhook Events",
          "request": {
            "name": "fetchAllWebhookEvents | Get All Webhook Events",
            "description": {
              "content": "Get All Webhook Events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "1ad69b5b-17bd-4339-9ae5-e3ec2abca3bf",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": -99186676,\n   \"event_name\": \"in Lorem reprehenderit ipsum Duis\",\n   \"event_type\": \"cillum dolor nisi commodo\",\n   \"event_category\": \"ad irure\",\n   \"version\": \"consectetur dolor\",\n   \"display_name\": \"non ex in\",\n   \"description\": \"voluptate ut magna\",\n   \"created_on\": \"sunt exercitation\"\n  },\n  {\n   \"id\": 6150100,\n   \"event_name\": \"in magna mollit\",\n   \"event_type\": \"nostrud\",\n   \"event_category\": \"occaecat qui anim\",\n   \"version\": \"qui sed ut\",\n   \"display_name\": \"adipisicing velit esse culpa\",\n   \"description\": \"minim\",\n   \"created_on\": \"officia non consequat ipsum\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "e423dab2-8049-4e64-9b01-d7c47cecdc20",
          "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
          "request": {
            "name": "queryWebhookEventDetails | Send webhook event name, type, version, category in request body to get complete details of event from server",
            "description": {
              "content": "Get Webhook Event Details for provided events",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "webhook",
                "v1.0",
                "events",
                "query-event-details"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
            }
          },
          "response": [
            {
              "id": "ab74f24e-54b0-4d34-afa2-f9fe1fb3995d",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "webhook",
                    "v1.0",
                    "events",
                    "query-event-details"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    },\n    {\n        \"event_name\": \"<string>\",\n        \"event_type\": \"<string>\",\n        \"event_category\": \"<string>\",\n        \"version\": \"<string>\"\n    }\n]"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"event_configs\": [\n  {\n   \"id\": 26815142,\n   \"event_name\": \"\",\n   \"event_type\": \"et ex laborum dolore\",\n   \"event_category\": \"aliqua ullamco elit est\",\n   \"version\": \"in mollit adipisicin\",\n   \"display_name\": \"voluptate ip\",\n   \"description\": \"labore ex dolor\",\n   \"created_on\": \"aliquip magna tempor commodo\"\n  },\n  {\n   \"id\": 35569420,\n   \"event_name\": \"inc\",\n   \"event_type\": \"Excepteur ad dolore\",\n   \"event_category\": \"tempor dolore dolore\",\n   \"version\": \"Lorem\",\n   \"display_name\": \"esse\",\n   \"description\": \"consequat dolore dolor\",\n   \"created_on\": \"non id aute amet\"\n  }\n ]\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "bbe86259-887f-41e2-9d8f-55bd0674233e",
      "name": "Inventory",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0c707f66-8ae8-42c9-aff3-c829f0bf0b8a",
          "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
          "request": {
            "name": "getConfigByApiKey | Get Slingshot Configuration Of  A Company using API key",
            "description": {
              "content": "REST Endpoint that returns all configuration detail of a company",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "apikey",
                  "value": "<string>",
                  "description": "(Required) Api key"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "38f2fca4-6f7b-4997-993f-3e6b96c3c50a",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-12-17T11:14:46.131Z\",\n \"status\": -1996089,\n \"error\": \"dolor veniam culpa reprehenderit\",\n \"exception\": \"Duis occaecat\",\n \"message\": \"tempor quis nulla\",\n \"total_time_taken_in_millis\": 31425550,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"anim irure mollit officia quis\",\n   \"description\": \"sint aliquip esse eu\",\n   \"name\": \"ad Duis\",\n   \"slug\": \"culpa in laboris\",\n   \"meta\": [\n    {\n     \"_id\": \"dolore ipsum est\",\n     \"name\": \"dolor et labor\",\n     \"value\": \"tem\"\n    },\n    {\n     \"_id\": \"aliqua eiusmod \",\n     \"name\": \"deserunt labore elit eu aliqua\",\n     \"value\": \"eu laborum \"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"culpa aliqua amet ullamco\",\n    \"integration\": \"ut reprehenderit\",\n    \"level\": \"voluptate\",\n    \"uid\": -8374467,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident dolore tempor minim dolor\",\n     \"a\"\n    ],\n    \"token\": \"consequat in aute\",\n    \"name\": \"esse Excepteur magna\",\n    \"stores\": [\n     {\n      \"_id\": \"nostrud id in aute elit\",\n      \"integration\": \"incididunt\",\n      \"level\": \"occaecat id laborum\",\n      \"uid\": 67327895,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip in deserunt veniam amet\",\n      \"code\": \"eu\",\n      \"name\": \"cupidatat nisi sed deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip sint non\",\n      \"integration\": \"nostrud pariatur amet\",\n      \"level\": \"enim amet c\",\n      \"uid\": -9882502,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint commodo Lorem amet\",\n      \"code\": \"nulla ipsum fugiat non\",\n      \"name\": \"ex\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea tempor quis\",\n      \"integration\": \"laborum sit\",\n      \"level\": \"exercitation\",\n      \"uid\": -99605791,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ut cupidatat reprehenderit\",\n      \"code\": \"quis dolor\",\n      \"name\": \"cillum fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing dolore\",\n      \"integration\": \"proident ad Excepteur ullamco\",\n      \"level\": \"consectetur officia reprehenderit\",\n      \"uid\": -31195981,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea consequat\",\n      \"code\": \"consequat\",\n      \"name\": \"cupidatat Excepteur labore quis dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"do in\",\n    \"integration\": \"amet ea cupidatat\",\n    \"level\": \"proident non officia\",\n    \"uid\": -75768953,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex magna est enim\",\n     \"in sunt non\"\n    ],\n    \"token\": \"ad\",\n    \"name\": \"enim deserunt non\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua do laborum \",\n      \"integration\": \"cupidatat dolor in consectetur in\",\n      \"level\": \"dolor Duis\",\n      \"uid\": -88248773,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut dolor occaecat\",\n      \"code\": \"officia sint ad\",\n      \"name\": \"nulla ullamco et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur amet dolor est\",\n      \"integration\": \"esse Lorem\",\n      \"level\": \"id\",\n      \"uid\": -88096696,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor laborum\",\n      \"code\": \"dolore Lorem\",\n      \"name\": \"ullamco consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"v\",\n      \"integration\": \"eu pariatur enim\",\n      \"level\": \"adipisicing quis in ad\",\n      \"uid\": -30649429,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur sunt laboris nostrud\",\n      \"code\": \"aliquip mollit\",\n      \"name\": \"sint cupidata\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor labore nostrud ut proident\",\n      \"integration\": \"ad qui mollit dolor\",\n      \"level\": \"in aute\",\n      \"uid\": -2504373,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim elit aute\",\n      \"code\": \"amet in ut\",\n      \"name\": \"do cillum enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"cupidatat sint laboris irure\",\n   \"description\": \"incididunt fugiat proident\",\n   \"name\": \"esse aliqua\",\n   \"slug\": \"sint veniam off\",\n   \"meta\": [\n    {\n     \"_id\": \"esse veniam sit mollit\",\n     \"name\": \"pariatur ut voluptate exercitation\",\n     \"value\": \"occaecat nulla minim Lorem incididunt\"\n    },\n    {\n     \"_id\": \"nulla ex aliquip anim aliqua\",\n     \"name\": \"id sed nulla\",\n     \"value\": \"Excepteur do voluptate\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Duis sunt fugiat in\",\n    \"integration\": \"in tempor\",\n    \"level\": \"exercitation aliquip et Excepteur deserunt\",\n    \"uid\": -79396976,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident ipsum incididunt officia reprehenderit\",\n     \"dolor enim\"\n    ],\n    \"token\": \"aute non ad tempor\",\n    \"name\": \"laborum in irure Excepteur\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua laborum\",\n      \"integration\": \"a\",\n      \"level\": \"incididu\",\n      \"uid\": -69651539,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation in officia cillum cup\",\n      \"code\": \"adipisicing dolore id ea\",\n      \"name\": \"amet consequat enim elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut ex\",\n      \"integration\": \"exercitation Excepteur\",\n      \"level\": \"voluptate laborum ad aliqua\",\n      \"uid\": -94583221,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt aliquip aliqua in\",\n      \"code\": \"culpa cupidatat Ut\",\n      \"name\": \"sit cillum ipsum Lorem nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolor Lorem culpa in\",\n      \"integration\": \"elit sunt ipsum ea pariatur\",\n      \"level\": \"dolor qui\",\n      \"uid\": 55881352,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit deserunt\",\n      \"code\": \"qui labore id occaecat\",\n      \"name\": \"ad sed in sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"reprehenderit tempor\",\n      \"integration\": \"reprehenderit aliqua in aliquip\",\n      \"level\": \"eiusmod ut veniam id\",\n      \"uid\": 39393653,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ex\",\n      \"code\": \"fugiat ea nostrud\",\n      \"name\": \"dolore exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ex aute esse est\",\n    \"integration\": \"magna laborum ut\",\n    \"level\": \"velit aute\",\n    \"uid\": 28196360,\n    \"opted\": false,\n    \"permissions\": [\n     \"aute\",\n     \"sunt adipisicing\"\n    ],\n    \"token\": \"sed voluptate\",\n    \"name\": \"ut nostrud quis\",\n    \"stores\": [\n     {\n      \"_id\": \"in dolore\",\n      \"integration\": \"sint sunt nulla\",\n      \"level\": \"exercitation incididunt nostrud\",\n      \"uid\": 51562104,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit sit enim in\",\n      \"code\": \"aute nostrud ip\",\n      \"name\": \"ea cillum Duis nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse enim dolor\",\n      \"integration\": \"in Lorem sit\",\n      \"level\": \"eiusmod magna deserunt adipisicing\",\n      \"uid\": 53990566,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu Lorem dolore\",\n      \"code\": \"conseq\",\n      \"name\": \"mollit velit ut sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"amet Lorem aute dolore\",\n      \"integration\": \"cillum culpa\",\n      \"level\": \"velit laborum dolore culpa\",\n      \"uid\": 60012092,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat mollit officia laborum\",\n      \"code\": \"elit cupidatat deserunt\",\n      \"name\": \"amet ex do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"elit cupidatat culpa dolor\",\n      \"integration\": \"qui laboris\",\n      \"level\": \"deserunt qui ea dolore\",\n      \"uid\": -8700001,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id culpa\",\n      \"code\": \"Excepteur amet eiusmod elit\",\n      \"name\": \"est esse dolore amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"sunt ad non ut\",\n \"page\": {\n  \"type\": \"mollit\",\n  \"size\": -93465666,\n  \"current\": -47029141,\n  \"has_next\": false,\n  \"item_total\": -8140776,\n  \"next_id\": \"consequat consectetur sint ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "f1ca59a1-79f4-4633-9212-c3c86bf20eb9",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-12-17T11:14:46.131Z\",\n \"status\": -1996089,\n \"error\": \"dolor veniam culpa reprehenderit\",\n \"exception\": \"Duis occaecat\",\n \"message\": \"tempor quis nulla\",\n \"total_time_taken_in_millis\": 31425550,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"anim irure mollit officia quis\",\n   \"description\": \"sint aliquip esse eu\",\n   \"name\": \"ad Duis\",\n   \"slug\": \"culpa in laboris\",\n   \"meta\": [\n    {\n     \"_id\": \"dolore ipsum est\",\n     \"name\": \"dolor et labor\",\n     \"value\": \"tem\"\n    },\n    {\n     \"_id\": \"aliqua eiusmod \",\n     \"name\": \"deserunt labore elit eu aliqua\",\n     \"value\": \"eu laborum \"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"culpa aliqua amet ullamco\",\n    \"integration\": \"ut reprehenderit\",\n    \"level\": \"voluptate\",\n    \"uid\": -8374467,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident dolore tempor minim dolor\",\n     \"a\"\n    ],\n    \"token\": \"consequat in aute\",\n    \"name\": \"esse Excepteur magna\",\n    \"stores\": [\n     {\n      \"_id\": \"nostrud id in aute elit\",\n      \"integration\": \"incididunt\",\n      \"level\": \"occaecat id laborum\",\n      \"uid\": 67327895,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip in deserunt veniam amet\",\n      \"code\": \"eu\",\n      \"name\": \"cupidatat nisi sed deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip sint non\",\n      \"integration\": \"nostrud pariatur amet\",\n      \"level\": \"enim amet c\",\n      \"uid\": -9882502,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint commodo Lorem amet\",\n      \"code\": \"nulla ipsum fugiat non\",\n      \"name\": \"ex\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea tempor quis\",\n      \"integration\": \"laborum sit\",\n      \"level\": \"exercitation\",\n      \"uid\": -99605791,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ut cupidatat reprehenderit\",\n      \"code\": \"quis dolor\",\n      \"name\": \"cillum fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing dolore\",\n      \"integration\": \"proident ad Excepteur ullamco\",\n      \"level\": \"consectetur officia reprehenderit\",\n      \"uid\": -31195981,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea consequat\",\n      \"code\": \"consequat\",\n      \"name\": \"cupidatat Excepteur labore quis dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"do in\",\n    \"integration\": \"amet ea cupidatat\",\n    \"level\": \"proident non officia\",\n    \"uid\": -75768953,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex magna est enim\",\n     \"in sunt non\"\n    ],\n    \"token\": \"ad\",\n    \"name\": \"enim deserunt non\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua do laborum \",\n      \"integration\": \"cupidatat dolor in consectetur in\",\n      \"level\": \"dolor Duis\",\n      \"uid\": -88248773,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut dolor occaecat\",\n      \"code\": \"officia sint ad\",\n      \"name\": \"nulla ullamco et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur amet dolor est\",\n      \"integration\": \"esse Lorem\",\n      \"level\": \"id\",\n      \"uid\": -88096696,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor laborum\",\n      \"code\": \"dolore Lorem\",\n      \"name\": \"ullamco consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"v\",\n      \"integration\": \"eu pariatur enim\",\n      \"level\": \"adipisicing quis in ad\",\n      \"uid\": -30649429,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur sunt laboris nostrud\",\n      \"code\": \"aliquip mollit\",\n      \"name\": \"sint cupidata\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor labore nostrud ut proident\",\n      \"integration\": \"ad qui mollit dolor\",\n      \"level\": \"in aute\",\n      \"uid\": -2504373,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim elit aute\",\n      \"code\": \"amet in ut\",\n      \"name\": \"do cillum enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"cupidatat sint laboris irure\",\n   \"description\": \"incididunt fugiat proident\",\n   \"name\": \"esse aliqua\",\n   \"slug\": \"sint veniam off\",\n   \"meta\": [\n    {\n     \"_id\": \"esse veniam sit mollit\",\n     \"name\": \"pariatur ut voluptate exercitation\",\n     \"value\": \"occaecat nulla minim Lorem incididunt\"\n    },\n    {\n     \"_id\": \"nulla ex aliquip anim aliqua\",\n     \"name\": \"id sed nulla\",\n     \"value\": \"Excepteur do voluptate\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Duis sunt fugiat in\",\n    \"integration\": \"in tempor\",\n    \"level\": \"exercitation aliquip et Excepteur deserunt\",\n    \"uid\": -79396976,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident ipsum incididunt officia reprehenderit\",\n     \"dolor enim\"\n    ],\n    \"token\": \"aute non ad tempor\",\n    \"name\": \"laborum in irure Excepteur\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua laborum\",\n      \"integration\": \"a\",\n      \"level\": \"incididu\",\n      \"uid\": -69651539,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation in officia cillum cup\",\n      \"code\": \"adipisicing dolore id ea\",\n      \"name\": \"amet consequat enim elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut ex\",\n      \"integration\": \"exercitation Excepteur\",\n      \"level\": \"voluptate laborum ad aliqua\",\n      \"uid\": -94583221,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt aliquip aliqua in\",\n      \"code\": \"culpa cupidatat Ut\",\n      \"name\": \"sit cillum ipsum Lorem nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolor Lorem culpa in\",\n      \"integration\": \"elit sunt ipsum ea pariatur\",\n      \"level\": \"dolor qui\",\n      \"uid\": 55881352,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit deserunt\",\n      \"code\": \"qui labore id occaecat\",\n      \"name\": \"ad sed in sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"reprehenderit tempor\",\n      \"integration\": \"reprehenderit aliqua in aliquip\",\n      \"level\": \"eiusmod ut veniam id\",\n      \"uid\": 39393653,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ex\",\n      \"code\": \"fugiat ea nostrud\",\n      \"name\": \"dolore exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ex aute esse est\",\n    \"integration\": \"magna laborum ut\",\n    \"level\": \"velit aute\",\n    \"uid\": 28196360,\n    \"opted\": false,\n    \"permissions\": [\n     \"aute\",\n     \"sunt adipisicing\"\n    ],\n    \"token\": \"sed voluptate\",\n    \"name\": \"ut nostrud quis\",\n    \"stores\": [\n     {\n      \"_id\": \"in dolore\",\n      \"integration\": \"sint sunt nulla\",\n      \"level\": \"exercitation incididunt nostrud\",\n      \"uid\": 51562104,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit sit enim in\",\n      \"code\": \"aute nostrud ip\",\n      \"name\": \"ea cillum Duis nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse enim dolor\",\n      \"integration\": \"in Lorem sit\",\n      \"level\": \"eiusmod magna deserunt adipisicing\",\n      \"uid\": 53990566,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu Lorem dolore\",\n      \"code\": \"conseq\",\n      \"name\": \"mollit velit ut sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"amet Lorem aute dolore\",\n      \"integration\": \"cillum culpa\",\n      \"level\": \"velit laborum dolore culpa\",\n      \"uid\": 60012092,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat mollit officia laborum\",\n      \"code\": \"elit cupidatat deserunt\",\n      \"name\": \"amet ex do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"elit cupidatat culpa dolor\",\n      \"integration\": \"qui laboris\",\n      \"level\": \"deserunt qui ea dolore\",\n      \"uid\": -8700001,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id culpa\",\n      \"code\": \"Excepteur amet eiusmod elit\",\n      \"name\": \"est esse dolore amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"sunt ad non ut\",\n \"page\": {\n  \"type\": \"mollit\",\n  \"size\": -93465666,\n  \"current\": -47029141,\n  \"has_next\": false,\n  \"item_total\": -8140776,\n  \"next_id\": \"consequat consectetur sint ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "3973c2bf-f60f-48be-a456-2da99fbc151f",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"2018-12-17T11:14:46.131Z\",\n \"status\": -1996089,\n \"error\": \"dolor veniam culpa reprehenderit\",\n \"exception\": \"Duis occaecat\",\n \"message\": \"tempor quis nulla\",\n \"total_time_taken_in_millis\": 31425550,\n \"http_status\": \"403 FORBIDDEN\",\n \"items\": {\n  \"integration\": {\n   \"_id\": \"anim irure mollit officia quis\",\n   \"description\": \"sint aliquip esse eu\",\n   \"name\": \"ad Duis\",\n   \"slug\": \"culpa in laboris\",\n   \"meta\": [\n    {\n     \"_id\": \"dolore ipsum est\",\n     \"name\": \"dolor et labor\",\n     \"value\": \"tem\"\n    },\n    {\n     \"_id\": \"aliqua eiusmod \",\n     \"name\": \"deserunt labore elit eu aliqua\",\n     \"value\": \"eu laborum \"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"culpa aliqua amet ullamco\",\n    \"integration\": \"ut reprehenderit\",\n    \"level\": \"voluptate\",\n    \"uid\": -8374467,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident dolore tempor minim dolor\",\n     \"a\"\n    ],\n    \"token\": \"consequat in aute\",\n    \"name\": \"esse Excepteur magna\",\n    \"stores\": [\n     {\n      \"_id\": \"nostrud id in aute elit\",\n      \"integration\": \"incididunt\",\n      \"level\": \"occaecat id laborum\",\n      \"uid\": 67327895,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"aliquip in deserunt veniam amet\",\n      \"code\": \"eu\",\n      \"name\": \"cupidatat nisi sed deserunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"aliquip sint non\",\n      \"integration\": \"nostrud pariatur amet\",\n      \"level\": \"enim amet c\",\n      \"uid\": -9882502,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sint commodo Lorem amet\",\n      \"code\": \"nulla ipsum fugiat non\",\n      \"name\": \"ex\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"ea tempor quis\",\n      \"integration\": \"laborum sit\",\n      \"level\": \"exercitation\",\n      \"uid\": -99605791,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ut cupidatat reprehenderit\",\n      \"code\": \"quis dolor\",\n      \"name\": \"cillum fugiat\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"adipisicing dolore\",\n      \"integration\": \"proident ad Excepteur ullamco\",\n      \"level\": \"consectetur officia reprehenderit\",\n      \"uid\": -31195981,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"ea consequat\",\n      \"code\": \"consequat\",\n      \"name\": \"cupidatat Excepteur labore quis dolor\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"do in\",\n    \"integration\": \"amet ea cupidatat\",\n    \"level\": \"proident non officia\",\n    \"uid\": -75768953,\n    \"opted\": true,\n    \"permissions\": [\n     \"ex magna est enim\",\n     \"in sunt non\"\n    ],\n    \"token\": \"ad\",\n    \"name\": \"enim deserunt non\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua do laborum \",\n      \"integration\": \"cupidatat dolor in consectetur in\",\n      \"level\": \"dolor Duis\",\n      \"uid\": -88248773,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"Ut dolor occaecat\",\n      \"code\": \"officia sint ad\",\n      \"name\": \"nulla ullamco et\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"consectetur amet dolor est\",\n      \"integration\": \"esse Lorem\",\n      \"level\": \"id\",\n      \"uid\": -88096696,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"tempor laborum\",\n      \"code\": \"dolore Lorem\",\n      \"name\": \"ullamco consectetur\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"v\",\n      \"integration\": \"eu pariatur enim\",\n      \"level\": \"adipisicing quis in ad\",\n      \"uid\": -30649429,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"pariatur sunt laboris nostrud\",\n      \"code\": \"aliquip mollit\",\n      \"name\": \"sint cupidata\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"dolor labore nostrud ut proident\",\n      \"integration\": \"ad qui mollit dolor\",\n      \"level\": \"in aute\",\n      \"uid\": -2504373,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"anim elit aute\",\n      \"code\": \"amet in ut\",\n      \"name\": \"do cillum enim\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"payload\": {\n  \"integration\": {\n   \"_id\": \"cupidatat sint laboris irure\",\n   \"description\": \"incididunt fugiat proident\",\n   \"name\": \"esse aliqua\",\n   \"slug\": \"sint veniam off\",\n   \"meta\": [\n    {\n     \"_id\": \"esse veniam sit mollit\",\n     \"name\": \"pariatur ut voluptate exercitation\",\n     \"value\": \"occaecat nulla minim Lorem incididunt\"\n    },\n    {\n     \"_id\": \"nulla ex aliquip anim aliqua\",\n     \"name\": \"id sed nulla\",\n     \"value\": \"Excepteur do voluptate\"\n    }\n   ]\n  },\n  \"companies\": [\n   {\n    \"_id\": \"Duis sunt fugiat in\",\n    \"integration\": \"in tempor\",\n    \"level\": \"exercitation aliquip et Excepteur deserunt\",\n    \"uid\": -79396976,\n    \"opted\": false,\n    \"permissions\": [\n     \"proident ipsum incididunt officia reprehenderit\",\n     \"dolor enim\"\n    ],\n    \"token\": \"aute non ad tempor\",\n    \"name\": \"laborum in irure Excepteur\",\n    \"stores\": [\n     {\n      \"_id\": \"aliqua laborum\",\n      \"integration\": \"a\",\n      \"level\": \"incididu\",\n      \"uid\": -69651539,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"exercitation in officia cillum cup\",\n      \"code\": \"adipisicing dolore id ea\",\n      \"name\": \"amet consequat enim elit\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"ut ex\",\n      \"integration\": \"exercitation Excepteur\",\n      \"level\": \"voluptate laborum ad aliqua\",\n      \"uid\": -94583221,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"sunt aliquip aliqua in\",\n      \"code\": \"culpa cupidatat Ut\",\n      \"name\": \"sit cillum ipsum Lorem nulla\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"dolor Lorem culpa in\",\n      \"integration\": \"elit sunt ipsum ea pariatur\",\n      \"level\": \"dolor qui\",\n      \"uid\": 55881352,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit deserunt\",\n      \"code\": \"qui labore id occaecat\",\n      \"name\": \"ad sed in sunt\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"reprehenderit tempor\",\n      \"integration\": \"reprehenderit aliqua in aliquip\",\n      \"level\": \"eiusmod ut veniam id\",\n      \"uid\": 39393653,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"amet ex\",\n      \"code\": \"fugiat ea nostrud\",\n      \"name\": \"dolore exercitation\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"_id\": \"ex aute esse est\",\n    \"integration\": \"magna laborum ut\",\n    \"level\": \"velit aute\",\n    \"uid\": 28196360,\n    \"opted\": false,\n    \"permissions\": [\n     \"aute\",\n     \"sunt adipisicing\"\n    ],\n    \"token\": \"sed voluptate\",\n    \"name\": \"ut nostrud quis\",\n    \"stores\": [\n     {\n      \"_id\": \"in dolore\",\n      \"integration\": \"sint sunt nulla\",\n      \"level\": \"exercitation incididunt nostrud\",\n      \"uid\": 51562104,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"reprehenderit sit enim in\",\n      \"code\": \"aute nostrud ip\",\n      \"name\": \"ea cillum Duis nostrud\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"esse enim dolor\",\n      \"integration\": \"in Lorem sit\",\n      \"level\": \"eiusmod magna deserunt adipisicing\",\n      \"uid\": 53990566,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"eu Lorem dolore\",\n      \"code\": \"conseq\",\n      \"name\": \"mollit velit ut sed\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"gstores\": [\n     {\n      \"_id\": \"amet Lorem aute dolore\",\n      \"integration\": \"cillum culpa\",\n      \"level\": \"velit laborum dolore culpa\",\n      \"uid\": 60012092,\n      \"opted\": true,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"fugiat mollit officia laborum\",\n      \"code\": \"elit cupidatat deserunt\",\n      \"name\": \"amet ex do\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"_id\": \"elit cupidatat culpa dolor\",\n      \"integration\": \"qui laboris\",\n      \"level\": \"deserunt qui ea dolore\",\n      \"uid\": -8700001,\n      \"opted\": false,\n      \"permissions\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"token\": \"id culpa\",\n      \"code\": \"Excepteur amet eiusmod elit\",\n      \"name\": \"est esse dolore amet\",\n      \"data\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ]\n },\n \"trace_id\": \"sunt ad non ut\",\n \"page\": {\n  \"type\": \"mollit\",\n  \"size\": -93465666,\n  \"current\": -47029141,\n  \"has_next\": false,\n  \"item_total\": -8140776,\n  \"next_id\": \"consequat consectetur sint ut\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "b56e695f-0e15-4205-aa4a-7a4f4ec05b53",
          "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
          "request": {
            "name": "getApiKey | Get apikey  for  Company  to call other Slingshot Configuration APIs ",
            "description": {
              "content": "REST Endpoint that returns apikey by username by password",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "slingshot",
                "apikey"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "user_name",
                  "value": "<string>",
                  "description": "(Required) Integration id"
                },
                {
                  "disabled": false,
                  "key": "password",
                  "value": "<string>",
                  "description": "(Required) company/store token"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "df9dc396-aea4-46c7-90de-8ab8ab409057",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T13:34:50.850Z\",\n \"status\": 93206715,\n \"error\": \"et\",\n \"exception\": \"exercitation quis commodo pa\",\n \"message\": \"se\",\n \"total_time_taken_in_millis\": -88543180,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"session_id\": \"eiusmod\",\n  \"error_message\": \"culpa velit eiusmod cillum non\"\n },\n \"payload\": {\n  \"session_id\": \"veniam esse et labore\",\n  \"error_message\": \"co\"\n },\n \"trace_id\": \"adipisicing velit et\",\n \"page\": {\n  \"type\": \"deserunt et \",\n  \"size\": 95734161,\n  \"current\": -646092,\n  \"has_next\": false,\n  \"item_total\": 51033240,\n  \"next_id\": \"incididunt non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "af6af716-340a-4c59-8aee-84a628509557",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T13:34:50.850Z\",\n \"status\": 93206715,\n \"error\": \"et\",\n \"exception\": \"exercitation quis commodo pa\",\n \"message\": \"se\",\n \"total_time_taken_in_millis\": -88543180,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"session_id\": \"eiusmod\",\n  \"error_message\": \"culpa velit eiusmod cillum non\"\n },\n \"payload\": {\n  \"session_id\": \"veniam esse et labore\",\n  \"error_message\": \"co\"\n },\n \"trace_id\": \"adipisicing velit et\",\n \"page\": {\n  \"type\": \"deserunt et \",\n  \"size\": 95734161,\n  \"current\": -646092,\n  \"has_next\": false,\n  \"item_total\": 51033240,\n  \"next_id\": \"incididunt non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "ebc69d7c-ac17-439a-b50e-b5ed0a24ae0e",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "slingshot",
                    "apikey"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "user_name",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1991-12-27T13:34:50.850Z\",\n \"status\": 93206715,\n \"error\": \"et\",\n \"exception\": \"exercitation quis commodo pa\",\n \"message\": \"se\",\n \"total_time_taken_in_millis\": -88543180,\n \"http_status\": \"414 REQUEST_URI_TOO_LONG\",\n \"items\": {\n  \"session_id\": \"eiusmod\",\n  \"error_message\": \"culpa velit eiusmod cillum non\"\n },\n \"payload\": {\n  \"session_id\": \"veniam esse et labore\",\n  \"error_message\": \"co\"\n },\n \"trace_id\": \"adipisicing velit et\",\n \"page\": {\n  \"type\": \"deserunt et \",\n  \"size\": 95734161,\n  \"current\": -646092,\n  \"has_next\": false,\n  \"item_total\": 51033240,\n  \"next_id\": \"incididunt non\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "d95c0eab-0d5f-4957-932a-3631ee50977a",
          "name": "getJobByCode | Get Job Config By Code",
          "request": {
            "name": "getJobByCode | Get Job Config By Code",
            "description": {
              "content": "REST Endpoint that returns job config by code",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "jobs",
                "code",
                ":code"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "code",
                  "description": "(Required) Job Code"
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "595a19f6-8599-4e57-89be-141fb1bb67e3",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-08-30T02:04:44.139Z\",\n \"status\": 41878460,\n \"error\": \"in tem\",\n \"exception\": \"Lorem proident elit id Duis\",\n \"message\": \"Excepteur nulla aliqua minim\",\n \"total_time_taken_in_millis\": 18409170,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"company_id\": -90519345,\n  \"integration_data\": {},\n  \"company_name\": \"tempor sit\",\n  \"task_details\": {\n   \"type\": 55436648,\n   \"group_list\": [\n    {\n     \"text\": \"nisi id anim esse adipisicing\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in qui\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20990449.491094545,\n   \"safe_stock\": 56160371,\n   \"period_threshold\": 21686994,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"pariatur proident sunt quis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laboris ad\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"dolor culpa irure anim\",\n  \"alias\": \"non\"\n },\n \"payload\": {\n  \"company_id\": -65831097,\n  \"integration_data\": {},\n  \"company_name\": \"sed adipisicing qui minim\",\n  \"task_details\": {\n   \"type\": -84594221,\n   \"group_list\": [\n    {\n     \"text\": \"cupidatat reprehenderit pariatur labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ci\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 72502828.86396247,\n   \"safe_stock\": 77302836,\n   \"period_threshold\": -35415887,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"esse nostrud ullamco quis fugia\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sunt incididunt\",\n  \"alias\": \"cillum Ut esse quis\"\n },\n \"trace_id\": \"sunt commodo in ut\",\n \"page\": {\n  \"type\": \"sed anim ex sit\",\n  \"size\": -20921961,\n  \"current\": 95743097,\n  \"has_next\": false,\n  \"item_total\": -19784769,\n  \"next_id\": \"cul\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "d67fc056-db2d-44b0-b05d-7526f1121535",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-08-30T02:04:44.139Z\",\n \"status\": 41878460,\n \"error\": \"in tem\",\n \"exception\": \"Lorem proident elit id Duis\",\n \"message\": \"Excepteur nulla aliqua minim\",\n \"total_time_taken_in_millis\": 18409170,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"company_id\": -90519345,\n  \"integration_data\": {},\n  \"company_name\": \"tempor sit\",\n  \"task_details\": {\n   \"type\": 55436648,\n   \"group_list\": [\n    {\n     \"text\": \"nisi id anim esse adipisicing\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in qui\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20990449.491094545,\n   \"safe_stock\": 56160371,\n   \"period_threshold\": 21686994,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"pariatur proident sunt quis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laboris ad\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"dolor culpa irure anim\",\n  \"alias\": \"non\"\n },\n \"payload\": {\n  \"company_id\": -65831097,\n  \"integration_data\": {},\n  \"company_name\": \"sed adipisicing qui minim\",\n  \"task_details\": {\n   \"type\": -84594221,\n   \"group_list\": [\n    {\n     \"text\": \"cupidatat reprehenderit pariatur labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ci\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 72502828.86396247,\n   \"safe_stock\": 77302836,\n   \"period_threshold\": -35415887,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"esse nostrud ullamco quis fugia\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sunt incididunt\",\n  \"alias\": \"cillum Ut esse quis\"\n },\n \"trace_id\": \"sunt commodo in ut\",\n \"page\": {\n  \"type\": \"sed anim ex sit\",\n  \"size\": -20921961,\n  \"current\": 95743097,\n  \"has_next\": false,\n  \"item_total\": -19784769,\n  \"next_id\": \"cul\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6d647b7d-9f91-4a51-8ceb-9c3eb38bdf0b",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "jobs",
                    "code",
                    ":code"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "code"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1980-08-30T02:04:44.139Z\",\n \"status\": 41878460,\n \"error\": \"in tem\",\n \"exception\": \"Lorem proident elit id Duis\",\n \"message\": \"Excepteur nulla aliqua minim\",\n \"total_time_taken_in_millis\": 18409170,\n \"http_status\": \"502 BAD_GATEWAY\",\n \"items\": {\n  \"company_id\": -90519345,\n  \"integration_data\": {},\n  \"company_name\": \"tempor sit\",\n  \"task_details\": {\n   \"type\": 55436648,\n   \"group_list\": [\n    {\n     \"text\": \"nisi id anim esse adipisicing\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"in qui\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 20990449.491094545,\n   \"safe_stock\": 56160371,\n   \"period_threshold\": 21686994,\n   \"period_threshold_type\": \"HOURS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"pariatur proident sunt quis\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"laboris ad\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"dolor culpa irure anim\",\n  \"alias\": \"non\"\n },\n \"payload\": {\n  \"company_id\": -65831097,\n  \"integration_data\": {},\n  \"company_name\": \"sed adipisicing qui minim\",\n  \"task_details\": {\n   \"type\": -84594221,\n   \"group_list\": [\n    {\n     \"text\": \"cupidatat reprehenderit pariatur labore\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"ci\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"threshold_details\": {\n   \"min_price\": 72502828.86396247,\n   \"safe_stock\": 77302836,\n   \"period_threshold\": -35415887,\n   \"period_threshold_type\": \"WEEKS\",\n   \"period_type_list\": [\n    {\n     \"text\": \"esse nostrud ullamco quis fugia\",\n     \"value\": {}\n    },\n    {\n     \"text\": \"dolore\",\n     \"value\": {}\n    }\n   ]\n  },\n  \"job_code\": \"sunt incididunt\",\n  \"alias\": \"cillum Ut esse quis\"\n },\n \"trace_id\": \"sunt commodo in ut\",\n \"page\": {\n  \"type\": \"sed anim ex sit\",\n  \"size\": -20921961,\n  \"current\": 95743097,\n  \"has_next\": false,\n  \"item_total\": -19784769,\n  \"next_id\": \"cul\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "a9ab2446-4ea4-4cf8-aa51-974f5ccae21a",
          "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
          "request": {
            "name": "getJobConfigByIntegrationType | Get Job Configs By Integration Type",
            "description": {
              "content": "REST Endpoint that returns all job Configs by Integration Type",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "job",
                "config"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "integration_type",
                  "value": "<string>",
                  "description": "(Required) Integration Type"
                },
                {
                  "disabled": false,
                  "key": "disable",
                  "value": "false",
                  "description": "JobConfig current state"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ce3651b8-6431-4f4a-ac89-9b58c1490a05",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1972-04-09T15:10:41.761Z\",\n \"status\": 85766327,\n \"error\": \"eu sunt sed\",\n \"exception\": \"enim commodo nostrud\",\n \"message\": \"nostrud do occaecat\",\n \"total_time_taken_in_millis\": 13837102,\n \"http_status\": \"500 INTERNAL_SERVER_ERROR\",\n \"items\": [\n  {\n   \"company_id\": 85570239,\n   \"integration_data\": {},\n   \"company_name\": \"commodo dolor ea sunt pariatur\",\n   \"task_details\": {\n    \"type\": -23854510,\n    \"group_list\": [\n     {\n      \"text\": \"magna aliqua Ut\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"Lorem do\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 46207482.66641033,\n    \"safe_stock\": 75163609,\n    \"period_threshold\": -64089456,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ut consequat aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ex culpa id nostrud in\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur sed dolor\",\n   \"alias\": \"id min\"\n  },\n  {\n   \"company_id\": -661348,\n   \"integration_data\": {},\n   \"company_name\": \"eu in reprehenderit Excepteur\",\n   \"task_details\": {\n    \"type\": -77977050,\n    \"group_list\": [\n     {\n      \"text\": \"cillum ex mollit in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"minim qui Lorem\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 12286722.67769219,\n    \"safe_stock\": -61921235,\n    \"period_threshold\": -56944341,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"voluptate fugiat dolore et\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"tempor ex\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"pariatur\",\n   \"alias\": \"commodo deserunt ea irure\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 67719420,\n   \"integration_data\": {},\n   \"company_name\": \"in pariatur tempor ipsum\",\n   \"task_details\": {\n    \"type\": 65183001,\n    \"group_list\": [\n     {\n      \"text\": \"laboris ullamco\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"m\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 73362359.11280254,\n    \"safe_stock\": -49121310,\n    \"period_threshold\": -93806596,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"nostrud in\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"reprehe\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"aliquip dolore nostrud pariatur\",\n   \"alias\": \"ullamco ali\"\n  },\n  {\n   \"company_id\": 11145895,\n   \"integration_data\": {},\n   \"company_name\": \"irure consectetur\",\n   \"task_details\": {\n    \"type\": 26174121,\n    \"group_list\": [\n     {\n      \"text\": \"in ea do aute\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"aliqua\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 91009063.32489407,\n    \"safe_stock\": 94029698,\n    \"period_threshold\": 52957205,\n    \"period_threshold_type\": \"HOURS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"aute Duis\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"dolore ut elit exercitation\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"sed ea sin\",\n   \"alias\": \"nulla ut sed amet oc\"\n  }\n ],\n \"trace_id\": \"Duis consequat culpa deserunt\",\n \"page\": {\n  \"type\": \"dolore occaecat nu\",\n  \"size\": 64271063,\n  \"current\": 16392010,\n  \"has_next\": false,\n  \"item_total\": 73423064,\n  \"next_id\": \"laboris aliqua ad in\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "bfc52d5a-4c23-4bbb-b460-1ea35eebb5aa",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-05-05T20:33:18.890Z\",\n \"status\": -66497616,\n \"error\": \"ut occaecat cupidatat mollit\",\n \"exception\": \"in dolore Lorem commodo\",\n \"message\": \"veniam cillum dolor\",\n \"total_time_taken_in_millis\": -34377643,\n \"http_status\": \"410 GONE\",\n \"items\": [\n  {\n   \"company_id\": -36873627,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt do\",\n   \"task_details\": {\n    \"type\": -32192651,\n    \"group_list\": [\n     {\n      \"text\": \"sit qui adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44813873.634773016,\n    \"safe_stock\": -45543924,\n    \"period_threshold\": -19402533,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt est ex tempor\",\n   \"alias\": \"exercitation qui Excepteur U\"\n  },\n  {\n   \"company_id\": -8222164,\n   \"integration_data\": {},\n   \"company_name\": \"et Ut\",\n   \"task_details\": {\n    \"type\": 35297302,\n    \"group_list\": [\n     {\n      \"text\": \"sed voluptate non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi occaecat deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 73275618.59747007,\n    \"safe_stock\": -8994092,\n    \"period_threshold\": 29597532,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"inc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation ut labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet esse minim\",\n   \"alias\": \"id\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 69348707,\n   \"integration_data\": {},\n   \"company_name\": \"id\",\n   \"task_details\": {\n    \"type\": -65476965,\n    \"group_list\": [\n     {\n      \"text\": \"in esse reprehenderit anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51294504.652915955,\n    \"safe_stock\": 4712421,\n    \"period_threshold\": -93896179,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco labore mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad nostrud cu\",\n   \"alias\": \"reprehenderit exercitation culpa\"\n  },\n  {\n   \"company_id\": 92450666,\n   \"integration_data\": {},\n   \"company_name\": \"consequat dolore voluptate deserunt\",\n   \"task_details\": {\n    \"type\": 10094750,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident Duis sit dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 91873559.7128137,\n    \"safe_stock\": 83436131,\n    \"period_threshold\": 7909856,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur velit nisi ipsum sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit fugiat consectetur\",\n   \"alias\": \"in dolore Duis reprehenderit\"\n  }\n ],\n \"trace_id\": \"dolor ut esse\",\n \"page\": {\n  \"type\": \"aute nisi dolore officia in\",\n  \"size\": 67728756,\n  \"current\": -84856789,\n  \"has_next\": false,\n  \"item_total\": 34279945,\n  \"next_id\": \"dolor culpa anim ut qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "948c64dc-9993-47a9-9927-69be7bc49679",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "job",
                    "config"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "integration_type",
                      "value": "<string>"
                    },
                    {
                      "key": "disable",
                      "value": "false"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1949-05-05T20:33:18.890Z\",\n \"status\": -66497616,\n \"error\": \"ut occaecat cupidatat mollit\",\n \"exception\": \"in dolore Lorem commodo\",\n \"message\": \"veniam cillum dolor\",\n \"total_time_taken_in_millis\": -34377643,\n \"http_status\": \"410 GONE\",\n \"items\": [\n  {\n   \"company_id\": -36873627,\n   \"integration_data\": {},\n   \"company_name\": \"incididunt do\",\n   \"task_details\": {\n    \"type\": -32192651,\n    \"group_list\": [\n     {\n      \"text\": \"sit qui adipisicing\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"voluptate ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 44813873.634773016,\n    \"safe_stock\": -45543924,\n    \"period_threshold\": -19402533,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"ad fugiat\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ut\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"deserunt est ex tempor\",\n   \"alias\": \"exercitation qui Excepteur U\"\n  },\n  {\n   \"company_id\": -8222164,\n   \"integration_data\": {},\n   \"company_name\": \"et Ut\",\n   \"task_details\": {\n    \"type\": 35297302,\n    \"group_list\": [\n     {\n      \"text\": \"sed voluptate non\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"nisi occaecat deserunt\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 73275618.59747007,\n    \"safe_stock\": -8994092,\n    \"period_threshold\": 29597532,\n    \"period_threshold_type\": \"WEEKS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"inc\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"exercitation ut labore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"amet esse minim\",\n   \"alias\": \"id\"\n  }\n ],\n \"payload\": [\n  {\n   \"company_id\": 69348707,\n   \"integration_data\": {},\n   \"company_name\": \"id\",\n   \"task_details\": {\n    \"type\": -65476965,\n    \"group_list\": [\n     {\n      \"text\": \"in esse reprehenderit anim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"in consectetur\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 51294504.652915955,\n    \"safe_stock\": 4712421,\n    \"period_threshold\": -93896179,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"veniam mollit\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"ullamco labore mollit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"ad nostrud cu\",\n   \"alias\": \"reprehenderit exercitation culpa\"\n  },\n  {\n   \"company_id\": 92450666,\n   \"integration_data\": {},\n   \"company_name\": \"consequat dolore voluptate deserunt\",\n   \"task_details\": {\n    \"type\": 10094750,\n    \"group_list\": [\n     {\n      \"text\": \"voluptate\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"proident Duis sit dolore\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"threshold_details\": {\n    \"min_price\": 91873559.7128137,\n    \"safe_stock\": 83436131,\n    \"period_threshold\": 7909856,\n    \"period_threshold_type\": \"DAYS\",\n    \"period_type_list\": [\n     {\n      \"text\": \"magna minim\",\n      \"value\": {}\n     },\n     {\n      \"text\": \"consectetur velit nisi ipsum sit\",\n      \"value\": {}\n     }\n    ]\n   },\n   \"job_code\": \"velit fugiat consectetur\",\n   \"alias\": \"in dolore Duis reprehenderit\"\n  }\n ],\n \"trace_id\": \"dolor ut esse\",\n \"page\": {\n  \"type\": \"aute nisi dolore officia in\",\n  \"size\": 67728756,\n  \"current\": -84856789,\n  \"has_next\": false,\n  \"item_total\": 34279945,\n  \"next_id\": \"dolor culpa anim ut qui\",\n  \"has_previous\": true\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "77dbc9cb-53a1-4ff8-b79a-61537492d7c5",
          "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
          "request": {
            "name": "getJobCodesMetrics | Find all the JobCodes from Metrics Collection based on the field Values",
            "description": {
              "content": "Endpoint to return all JobCodes present in Metrics Collection",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "daily_job",
                  "value": "<boolean>",
                  "description": "Daily Job Flag"
                },
                {
                  "disabled": false,
                  "key": "job_code",
                  "value": "<string>",
                  "description": "Email Job Code"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "be3fb96a-a177-48e0-8cbe-b3b7cafbd998",
              "name": "Successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-05-11T06:42:44.316Z\",\n \"status\": -66990830,\n \"error\": \"aliqua do officia\",\n \"exception\": \"ex laborum in\",\n \"message\": \"aliqua laborum eiusmod amet ut\",\n \"total_time_taken_in_millis\": 63354693,\n \"http_status\": \"200 OK\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"sunt occaecat\",\n \"page\": {\n  \"type\": \"ad pariatur sit occaecat eu\",\n  \"size\": -80340530,\n  \"current\": 95186877,\n  \"has_next\": true,\n  \"item_total\": -24446032,\n  \"next_id\": \"aute minim aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e2a2c10f-682f-4e00-9495-f7495f8116ba",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-05-11T06:42:44.316Z\",\n \"status\": -66990830,\n \"error\": \"aliqua do officia\",\n \"exception\": \"ex laborum in\",\n \"message\": \"aliqua laborum eiusmod amet ut\",\n \"total_time_taken_in_millis\": 63354693,\n \"http_status\": \"200 OK\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"sunt occaecat\",\n \"page\": {\n  \"type\": \"ad pariatur sit occaecat eu\",\n  \"size\": -80340530,\n  \"current\": 95186877,\n  \"has_next\": true,\n  \"item_total\": -24446032,\n  \"next_id\": \"aute minim aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "51e0bd7b-5d9b-48ef-aa9e-cfb3969b7969",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "daily_job",
                      "value": "<boolean>"
                    },
                    {
                      "key": "job_code",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1995-05-11T06:42:44.316Z\",\n \"status\": -66990830,\n \"error\": \"aliqua do officia\",\n \"exception\": \"ex laborum in\",\n \"message\": \"aliqua laborum eiusmod amet ut\",\n \"total_time_taken_in_millis\": 63354693,\n \"http_status\": \"200 OK\",\n \"items\": {},\n \"payload\": {},\n \"trace_id\": \"sunt occaecat\",\n \"page\": {\n  \"type\": \"ad pariatur sit occaecat eu\",\n  \"size\": -80340530,\n  \"current\": 95186877,\n  \"has_next\": true,\n  \"item_total\": -24446032,\n  \"next_id\": \"aute minim aliqua\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        },
        {
          "id": "bcfeb742-b7a5-4e40-aad8-bac6b51d13b1",
          "name": "saveJobCodesMetrics | Save JobCode Metrics",
          "request": {
            "name": "saveJobCodesMetrics | Save JobCode Metrics",
            "description": {
              "content": "Endpoint to save JobCode Metrics",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "common",
                "inventory",
                "v1.0",
                "company",
                "email",
                "jobCode"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
            }
          },
          "response": [
            {
              "id": "8e1bc4f7-65cc-44b1-8006-3987858be951",
              "name": "JobCode Metrics entry Created Successfully",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-09-21T07:36:19.672Z\",\n \"status\": 34482729,\n \"error\": \"nulla\",\n \"exception\": \"esse voluptate\",\n \"message\": \"est dolor ea\",\n \"total_time_taken_in_millis\": -56754771,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex nulla ullamco\",\n \"page\": {\n  \"type\": \"cupidatat exercitation sunt do amet\",\n  \"size\": -56690880,\n  \"current\": -17922960,\n  \"has_next\": false,\n  \"item_total\": -5754066,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e3bf2e2a-4a75-47ec-ac8f-ca138fe46777",
              "name": "Bad Request",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-09-21T07:36:19.672Z\",\n \"status\": 34482729,\n \"error\": \"nulla\",\n \"exception\": \"esse voluptate\",\n \"message\": \"est dolor ea\",\n \"total_time_taken_in_millis\": -56754771,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex nulla ullamco\",\n \"page\": {\n  \"type\": \"cupidatat exercitation sunt do amet\",\n  \"size\": -56690880,\n  \"current\": -17922960,\n  \"has_next\": false,\n  \"item_total\": -5754066,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "5595fec3-1189-4ca8-b0da-b3c1641222c7",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-09-21T07:36:19.672Z\",\n \"status\": 34482729,\n \"error\": \"nulla\",\n \"exception\": \"esse voluptate\",\n \"message\": \"est dolor ea\",\n \"total_time_taken_in_millis\": -56754771,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex nulla ullamco\",\n \"page\": {\n  \"type\": \"cupidatat exercitation sunt do amet\",\n  \"size\": -56690880,\n  \"current\": -17922960,\n  \"has_next\": false,\n  \"item_total\": -5754066,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "6d50f92e-4431-425a-b042-e8be4c6ce164",
              "name": "JobCode Metrics Already Exists",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-09-21T07:36:19.672Z\",\n \"status\": 34482729,\n \"error\": \"nulla\",\n \"exception\": \"esse voluptate\",\n \"message\": \"est dolor ea\",\n \"total_time_taken_in_millis\": -56754771,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex nulla ullamco\",\n \"page\": {\n  \"type\": \"cupidatat exercitation sunt do amet\",\n  \"size\": -56690880,\n  \"current\": -17922960,\n  \"has_next\": false,\n  \"item_total\": -5754066,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "e4eff4bc-9f17-4d99-9d92-a07a5a2e58d8",
              "name": "Internal Server Error",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "common",
                    "inventory",
                    "v1.0",
                    "company",
                    "email",
                    "jobCode"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"executed\": \"<boolean>\",\n    \"id\": \"<string>\",\n    \"job_code\": \"<string>\",\n    \"daily_job\": \"<boolean>\",\n    \"last_executed_on\": \"<dateTime>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"timestamp\": \"1950-09-21T07:36:19.672Z\",\n \"status\": 34482729,\n \"error\": \"nulla\",\n \"exception\": \"esse voluptate\",\n \"message\": \"est dolor ea\",\n \"total_time_taken_in_millis\": -56754771,\n \"http_status\": \"404 NOT_FOUND\",\n \"items\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"payload\": {\n  \"executed\": \"<boolean>\",\n  \"id\": \"<string>\",\n  \"job_code\": \"<string>\",\n  \"daily_job\": \"<boolean>\",\n  \"last_executed_on\": \"<dateTime>\"\n },\n \"trace_id\": \"ex nulla ullamco\",\n \"page\": {\n  \"type\": \"cupidatat exercitation sunt do amet\",\n  \"size\": -56690880,\n  \"current\": -17922960,\n  \"has_next\": false,\n  \"item_total\": -5754066,\n  \"next_id\": \"ullamco\",\n  \"has_previous\": false\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "const url = require('url');\nconst querystring = require('querystring');\nconst crypto = require('crypto-js');\nconst sha256 = crypto.SHA256;\nconst hmacSHA256 =  crypto.HmacSHA256;\n\nfunction hmac(key, string, encoding) {\n  return hmacSHA256(string, key).toString();\n}\n\nfunction hash(string, encoding) {\n  return sha256(string).toString();\n}\n\n// This function assumes the string has already been percent encoded\nfunction encodeRfc3986(urlEncodedString) {\n  return urlEncodedString.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  });\n}\n\nfunction encodeRfc3986Full(str) {\n  return str;\n  // return encodeRfc3986(encodeURIComponent(str));\n}\n\nconst HEADERS_TO_IGNORE = {\n  'authorization': true,\n  'connection': true,\n  'x-amzn-trace-id': true,\n  'user-agent': true,\n  'expect': true,\n  'presigned-expires': true,\n  'range': true,\n};\n\nconst HEADERS_TO_INCLUDE = [\"x\\-fp\\-.*\", \"host\"];\n\n// request: { path | body, [host], [method], [headers], [service], [region] }\nclass RequestSigner {\n  constructor(request) {\n    if (typeof request === 'string') {\n      request = url.parse(request);\n    }\n\n    let headers = request.headers = (request.headers || {});\n    request.headers['host'] = pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\");\n    this.request = request;\n\n    if (!request.method && request.body) {\n      request.method = 'POST';\n    }\n\n  }\n\n  prepareRequest() {\n    this.parsePath();\n\n    let request = this.request;\n    let headers = request.headers;\n    let query;\n\n    if (request.signQuery) {\n\n      this.parsedPath.query = query = this.parsedPath.query || {};\n\n      if (query['x-fp-date']) {\n        this.datetime = query['x-fp-date'];\n      } else {\n        query['x-fp-date'] = this.getDateTime();\n      }\n    } else {\n\n      if (!request.doNotModifyHeaders) {\n        if (request.body && !headers['Content-Type'] && !headers['content-type']) {\n          headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=utf-8';\n        }\n\n        if (request.body && !headers['Content-Length'] && !headers['content-length']) {\n          headers['Content-Length'] = Buffer.byteLength(request.body);\n        }\n\n        if (headers['x-fp-date']) {\n          this.datetime = headers['x-fp-date'] || headers['x-fp-date'];\n        } else {\n          headers['x-fp-date'] = this.getDateTime();\n        }\n      }\n\n      delete headers[\"x-fp-signature\"];\n      delete headers[\"X-Fp-Signature\"];\n    }\n  }\n\n  sign() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n    if (this.request.signQuery) {\n      this.parsedPath.query['x-fp-signature'] = this.signature();\n    } else {\n      this.request.headers['x-fp-signature'] = this.signature();\n    }\n\n    this.request.path = this.formatPath();\n    return this.request;\n  }\n\n  getDateTime() {\n    if (!this.datetime) {\n      let headers = this.request.headers;\n      let date = new Date(headers.Date || headers.date || new Date());\n\n      this.datetime = date.toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    }\n    return this.datetime;\n  }\n\n  getDate() {\n    return this.getDateTime().substr(0, 8);\n  }\n\n  signature() {\n    let kCredentials = \"1234567\";\n    let strTosign = this.stringToSign();\n    console.log(strTosign);\n    return `v1.1:${hmac(kCredentials, strTosign, 'hex')}`;\n  }\n\n  stringToSign() {\n    console.log(this.canonicalString())\n    return [\n      this.getDateTime(),\n      hash(this.canonicalString(), 'hex'),\n    ].join('\\n');\n  }\n\n  canonicalString() {\n    if (!this.parsedPath) {\n      this.prepareRequest();\n    }\n\n    let pathStr = this.parsedPath.path;\n    let query = this.parsedPath.query;\n    let headers = this.request.headers;\n    let queryStr = '';\n    let normalizePath = true;\n    let decodePath = this.request.doNotEncodePath;\n    let decodeSlashesInPath = false;\n    let firstValOnly = false;\n    let bodyHash = hash(this.request.body || '', 'hex');\n\n    if (query) {\n      let reducedQuery = Object.keys(query).reduce(function (obj, key) {\n        if (!key) {\n          return obj;\n        }\n        obj[encodeRfc3986Full(key)] = !Array.isArray(query[key]) ? query[key] :\n          (firstValOnly ? query[key][0] : query[key]);\n        return obj;\n      }, {});\n      let encodedQueryPieces = [];\n      Object.keys(reducedQuery).sort().forEach(function (key) {\n        if (!Array.isArray(reducedQuery[key])) {\n          encodedQueryPieces.push(key + '=' + encodeRfc3986Full(reducedQuery[key]));\n        } else {\n          reducedQuery[key].map(encodeRfc3986Full).sort()\n            .forEach(function (val) {\n              encodedQueryPieces.push(key + '=' + val);\n            });\n        }\n      });\n      queryStr = encodedQueryPieces.join('&');\n    }\n    if (pathStr !== '/') {\n      if (normalizePath) {\n        pathStr = pathStr.replace(/\\/{2,}/g, '/');\n      }\n      pathStr = pathStr.split('/').reduce(function (path, piece) {\n        if (normalizePath && piece === '..') {\n          path.pop();\n        } else if (!normalizePath || piece !== '.') {\n          if (decodePath) piece = decodeURIComponent(piece.replace(/\\+/g, ' '))\n          path.push(encodeRfc3986Full(piece));\n        }\n        return path;\n      }, []).join('/');\n      if (pathStr[0] !== '/') pathStr = '/' + pathStr;\n      if (decodeSlashesInPath) pathStr = pathStr.replace(/%2F/g, '/');\n    }\n\n    let canonicalReq = [\n      this.request.method || 'GET',\n      pathStr,\n      queryStr,\n      this.canonicalHeaders() + '\\n',\n      this.signedHeaders(),\n      bodyHash,\n    ].join('\\n');\n    return canonicalReq;\n  }\n\n  canonicalHeaders() {\n    let headers = this.request.headers;\n\n    function trimAll(header) {\n      return header.toString().trim().replace(/\\s+/g, ' ');\n    }\n    return Object.keys(headers)\n      .filter(function (key) {\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort(function (a, b) {\n        return a.toLowerCase() < b.toLowerCase() ? -1 : 1;\n      })\n      .map(function (key) {\n        return key.toLowerCase() + ':' + trimAll(headers[key]);\n      })\n      .join('\\n');\n  }\n\n  signedHeaders() {\n    return Object.keys(this.request.headers)\n      .map(function (key) {\n        return key.toLowerCase();\n      })\n      .filter(function (key) {\n\n        let notInIgnoreHeader = HEADERS_TO_IGNORE[key.toLowerCase()] == null;\n        if (notInIgnoreHeader) {\n          let foundMatch = false;\n          for (let t in HEADERS_TO_INCLUDE) {\n            foundMatch = foundMatch || new RegExp(HEADERS_TO_INCLUDE[t], \"ig\").test(key);\n          }\n          return foundMatch;\n        } else {\n          return false;\n        }\n      })\n      .sort()\n      .join(';');\n  }\n\n  parsePath() {\n    let path = this.request.path || '/';\n    let queryIx = path.indexOf('?');\n    let query = null;\n\n    if (queryIx >= 0) {\n      query = querystring.parse(path.slice(queryIx + 1));\n      path = path.slice(0, queryIx);\n    }\n    path = path.split(\"/\").map((t) => {\n      return encodeURIComponent(decodeURIComponent(t));\n    }).join(\"/\");\n\n    this.parsedPath = {\n      path: path,\n      query: query,\n    };\n  }\n\n  formatPath() {\n    let path = this.parsedPath.path;\n    let query = this.parsedPath.query;\n\n    if (!query) {\n      return path;\n    }\n\n    // Services don't support empty query string keys\n    if (query[''] != null) {\n      delete query[''];\n    }\n\n    return path + '?' + encodeRfc3986(querystring.stringify(query));\n  }\n}\n\n\nlet signingOptions = {\n    method: pm.request.method.toUpperCase(),\n    host: pm.collectionVariables.get(\"baseUrl\").replace(\"https://\", \"\"),\n    path: pm.request.url.getPathWithQuery(),\n    body: pm.request.body ? pm.request.body.toString() : null,\n    headers: pm.request.headers\n}\n\nconsole.log(signingOptions)\n\nlet updatedReqData = new RequestSigner(signingOptions).sign();\n\npm.request.headers.add({\n  key: \"x-fp-date\",\n  value: updatedReqData.headers[\"x-fp-date\"]\n});\n\npm.request.headers.add({\n  key: \"x-fp-signature\",\n  value: updatedReqData.headers[\"x-fp-signature\"]\n});\n\nconsole.log(pm.request)"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.jmpx2.de"
    }
  ],
  "info": {
    "_postman_id": "6c90bd54-a4f0-4c53-8cc8-79a52707ae67",
    "name": "Fynd Platform's Public APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Fynd Platform's Public APIs",
      "type": "text/plain"
    }
  }
}
